var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/injectables/Authorization.html",[0,1.365,1,0.835]],["body/injectables/Authorization.html",[0,2.233,1,1.505,2,0.42,3,0.362,4,0.254,5,0.336,6,2.125,7,0.254,8,1.644,9,4.451,10,3.74,11,2.221,12,4.451,13,0.765,14,3.401,15,1.46,16,1.641,17,0.877,18,3.401,19,1.312,20,0.039,21,1.312,22,0.475,23,1.013,24,4.451,25,1.423,26,3.401,27,3.401,28,0.829,29,3.401,30,4.451,31,1.831,32,3.401,33,1.492,34,1.367,35,4.451,36,3.401,37,0.582,38,2.78,39,0.937,40,2.808,41,0.848,42,1.385,43,1.531,44,1.256,45,0.371,46,0.021,47,1.891,48,0.687,49,1.104,50,3.401,51,3.401,52,3.401,53,3.401,54,3.401,55,3.401,56,3.401,57,0.765,58,2.808,59,2.125,60,3.401,61,1.14,62,2.125,63,2.125,64,2.125,65,2.125,66,1.531,67,2.125,68,1.813,69,1.891,70,1.891,71,2.125,72,2.125,73,0.027,74,0.027]],["title/interfaces/Dictionary.html",[75,0.682,76,1.016]],["body/interfaces/Dictionary.html",[2,0.569,3,0.491,4,0.344,5,0.321,7,0.344,17,0.739,20,0.037,45,0.425,73,0.033,74,0.033,75,1.207,76,1.799,77,3.801,78,2.679,79,0.664,80,2.679,81,4.605,82,1.035,83,1.4]],["title/classes/Permission.html",[46,0.019,82,0.682]],["body/classes/Permission.html",[2,0.524,3,0.451,4,0.317,5,0.329,7,0.317,8,1.887,13,0.953,17,0.821,19,1.056,20,0.038,21,1.368,22,0.461,23,0.766,28,0.724,34,1.408,37,0.451,41,1.056,45,0.382,46,0.031,47,2.356,48,0.856,73,0.031,74,0.031,79,0.704,82,1.149,84,3.01,85,1.666,86,3.497,87,3.428,88,4.236,89,4.236,90,4.236,91,1.726,92,0.856,93,3.497]],["title/directives/PermissionAnyOfDirective.html",[94,0.756,95,1.686]],["body/directives/PermissionAnyOfDirective.html",[1,1.585,2,0.407,3,0.351,4,0.246,5,0.352,7,0.246,13,0.979,17,0.935,19,1.347,20,0.039,21,1.347,22,0.488,23,0.977,28,0.736,37,0.554,39,0.907,45,0.246,46,0.02,73,0.027,74,0.027,79,0.407,92,1.05,94,1.217,95,2.422,96,2.716,97,1.83,98,2.173,99,5.196,100,2.715,101,4.355,102,4.355,103,4.355,104,2.055,105,3.316,106,2.889,107,2.889,108,3.291,109,4.355,110,4.355,111,4.355,112,4.355,113,2.055,114,1.481,115,2.055,116,2.173,117,2.339,118,2.055,119,2.055,120,1.481,121,2.055,122,2.055,123,2.055,124,2.055,125,1.34,126,1.609,127,1.481,128,1.481,129,1.609,130,2.338,131,2.338,132,3.291,133,2.339,134,1.83,135,1.83,136,1.34,137,3.291,138,1.83,139,1.83,140,1.83,141,3.291,142,1.83,143,1.83,144,1.83,145,1.324,146,2.173,147,2.422,148,2.422,149,2.422,150,3.291,151,1.83,152,1.83,153,1.83,154,2.338]],["title/directives/PermissionExceptDirective.html",[94,0.756,155,1.686]],["body/directives/PermissionExceptDirective.html",[1,1.586,2,0.408,3,0.352,4,0.247,5,0.352,7,0.247,13,0.981,17,0.935,19,1.348,20,0.039,21,1.348,22,0.441,23,0.978,28,0.737,37,0.554,39,0.909,45,0.247,46,0.02,73,0.027,74,0.027,79,0.539,92,1.051,94,1.219,97,1.835,98,2.178,100,2.719,104,2.062,105,3.318,106,2.893,107,2.893,113,2.062,114,1.486,115,2.062,116,2.178,117,2.341,118,2.062,119,2.062,120,1.486,121,2.062,122,2.062,123,2.062,124,2.062,125,1.344,126,1.612,127,1.486,128,1.486,129,1.612,130,2.345,131,2.345,133,2.341,134,1.835,135,1.835,138,1.835,139,1.835,140,1.835,142,1.835,143,1.835,144,1.835,145,1.327,146,2.178,147,2.427,148,2.427,149,2.427,151,1.835,152,1.835,153,1.835,154,2.345,155,2.427,156,2.724,157,5.202,158,4.364,159,4.364,160,4.364,161,3.3,162,4.364,163,4.364,164,4.364,165,4.364,166,3.3,167,1.486,168,3.3,169,3.3,170,3.3]],["title/injectables/PermissionGuard.html",[0,1.365,171,1.365]],["body/injectables/PermissionGuard.html",[0,2.177,1,1.522,2,0.399,3,0.344,4,0.241,5,0.331,7,0.241,8,1.588,13,0.726,17,0.862,19,1.285,20,0.039,21,1.285,22,0.485,23,0.932,25,1.285,28,0.829,31,1.082,33,1.082,34,1.333,37,0.601,39,0.89,41,0.805,45,0.241,46,0.02,47,1.795,48,0.652,49,0.869,61,1.441,73,0.026,74,0.026,79,0.598,91,1.752,92,0.869,116,1.611,125,1.315,126,1.192,127,1.453,171,1.936,172,4.559,173,2.665,174,1.072,175,5.157,176,4.257,177,3.664,178,3.55,179,3.229,180,5.638,181,4.301,182,4.301,183,5.638,184,3.229,185,3.056,186,4.301,187,3.229,188,4.301,189,3.229,190,3.924,191,0.805,192,0.805,193,2.665,194,1.611,195,2.665,196,1.082,197,2.017,198,1.795,199,1.795,200,2.294,201,3.229,202,3.229,203,1.082,204,3.229,205,3.229,206,3.229,207,3.229,208,3.229,209,3.229,210,1.611,211,3.229,212,3.229,213,3.229,214,1.453,215,3.229,216,3.229,217,3.229,218,1.453,219,3.229]],["title/classes/PermissionIfContext.html",[46,0.019,128,1.365]],["body/classes/PermissionIfContext.html",[1,1.255,2,0.355,3,0.306,4,0.297,5,0.294,7,0.215,10,2.824,13,0.646,17,0.732,20,0.039,22,0.411,25,1.136,37,0.55,39,0.792,45,0.297,46,0.03,48,0.803,49,0.581,73,0.024,74,0.024,79,0.491,92,1.169,94,0.991,98,1.434,100,2.869,105,3.185,106,1.598,107,2.21,114,2.322,120,1.789,125,1.171,126,1.062,127,1.294,128,2.212,129,1.062,133,2.212,134,1.598,135,1.598,138,1.598,139,1.598,140,1.598,142,1.598,143,2.533,144,2.733,145,1.831,146,1.983,147,2.21,148,2.21,149,2.533,151,1.598,152,2.21,153,2.733,174,0.991,191,1.136,192,1.136,196,0.963,198,1.598,199,1.598,203,0.963,220,2.042,221,4.671,222,4.057,223,3.07,224,2.874,225,2.874,226,2.874,227,3.76,228,3.281,229,2.373,230,2.373,231,2.373,232,2.373,233,4.602,234,2.373,235,2.373,236,2.373,237,2.373,238,2.373,239,2.373,240,2.042,241,2.373,242,2.373,243,2.373,244,2.042,245,2.373,246,2.042,247,3.281,248,2.373,249,2.042,250,2.373,251,2.042,252,2.373,253,2.373,254,3.281,255,3.281,256,2.373,257,3.281,258,2.373,259,2.373,260,2.373,261,3.281,262,2.373]],["title/directives/PermissionIfDirective.html",[94,0.756,129,1.12]],["body/directives/PermissionIfDirective.html",[1,1.385,2,0.268,3,0.231,4,0.242,5,0.354,7,0.162,8,1.198,10,2.762,13,0.729,17,0.945,19,1.253,20,0.039,21,1.253,22,0.486,23,0.908,25,1.151,28,0.762,37,0.492,39,0.598,45,0.242,46,0.024,48,0.656,49,0.656,73,0.02,74,0.02,79,0.401,92,1.087,94,0.969,97,1.206,98,1.619,100,2.794,104,1.355,105,3.244,106,2.162,107,2.399,113,1.355,114,2.182,115,1.355,116,1.082,117,2.421,118,2.428,119,1.355,120,2.079,121,2.428,122,1.355,123,2.428,124,1.355,125,0.883,126,0.801,127,0.976,128,2.182,129,1.198,133,1.942,134,1.206,135,1.206,138,1.206,139,1.206,140,1.206,142,1.206,143,2.162,144,2.399,145,1.825,146,1.619,147,1.804,148,1.804,149,2.162,151,1.206,152,1.804,153,2.399,174,0.809,191,1.253,192,1.253,196,0.727,198,1.206,199,1.804,203,1.087,220,1.541,221,3.209,222,1.79,223,1.355,227,4.148,228,3.209,229,1.79,230,1.79,231,1.79,232,1.79,233,4.912,234,3.562,235,3.562,236,3.562,237,3.562,238,3.562,239,3.562,240,1.541,241,1.79,242,1.79,243,3.562,244,1.541,245,1.79,246,1.541,247,2.678,248,3.562,249,3.066,250,1.79,251,1.541,252,1.79,253,3.562,254,2.678,255,2.678,256,1.79,257,2.678,258,1.79,259,2.678,260,1.79,261,2.678,262,2.678,263,3.244,264,3.244,265,2.169,266,3.244,267,3.244,268,3.244,269,3.244,270,2.169,271,2.169,272,2.169,273,2.169,274,2.169,275,2.169,276,2.169,277,2.169,278,2.169,279,2.169,280,2.169,281,2.169]],["title/classes/PermissionMap.html",[31,1.016,46,0.019]],["body/classes/PermissionMap.html",[2,0.22,3,0.297,4,0.133,5,0.316,7,0.133,8,1.031,11,1.393,13,0.627,15,1.169,16,1.292,17,0.835,19,0.858,20,0.039,21,0.858,22,0.45,23,0.622,25,0.971,28,0.865,31,1.305,33,0.597,34,1.549,37,0.544,41,0.444,42,0.726,43,0.802,44,0.658,45,0.363,46,0.017,48,0.564,49,0.564,57,1.189,61,1.571,73,0.033,74,0.017,75,0.876,76,0.935,78,1.717,79,0.742,80,0.889,82,0.876,83,0.542,85,1.477,91,0.726,92,0.36,136,1.827,145,1.517,167,2.019,174,1.054,191,0.971,192,0.444,194,0.889,196,0.597,203,1.503,210,1.393,218,1.549,282,0.726,283,1.921,284,2.165,285,2.165,286,2.165,287,2.165,288,2.791,289,2.791,290,1.781,291,2.791,292,1.781,293,1.781,294,1.781,295,2.184,296,1.781,297,1.781,298,1.781,299,1.781,300,1.552,301,1.781,302,2.11,303,1.552,304,1.781,305,1.552,306,0.991,307,1.943,308,0.991,309,0.991,310,0.991,311,0.991,312,0.991,313,0.991,314,0.991,315,0.889,316,0.991,317,0.991,318,0.991,319,0.726,320,1.827,321,1.943,322,2.339,323,2.38,324,1.552,325,0.991,326,2.596,327,0.991,328,0.991,329,0.991,330,0.991,331,0.991,332,0.991,333,1.552,334,0.991,335,0.991,336,0.991,337,0.991,338,0.991,339,1.717,340,1.913,341,0.991,342,0.991,343,0.991,344,0.889,345,0.991,346,0.991,347,1.913,348,0.991,349,0.991,350,1.552,351,0.991,352,0.991,353,0.991,354,0.991,355,1.256,356,0.991,357,0.991,358,0.991,359,2.165,360,0.991,361,2.422,362,1.753,363,1.256,364,0.991,365,0.991,366,1.913,367,0.991,368,1.913,369,0.889,370,0.889,371,1.393,372,2.351,373,0.991,374,0.991,375,1.552,376,0.991,377,0.991,378,0.991,379,0.991,380,0.991,381,0.889,382,1.393,383,0.991,384,0.889,385,0.802,386,0.889,387,0.991,388,0.991,389,0.991,390,0.991,391,1.393,392,0.991,393,0.889,394,0.991,395,0.889,396,0.991,397,1.393,398,1.393,399,1.393,400,0.991,401,1.393,402,0.991,403,0.802,404,1.552,405,0.991,406,1.913]],["title/modules/PermissionModule.html",[407,1.513,408,1.686]],["body/modules/PermissionModule.html",[2,0.417,3,0.359,4,0.252,5,0.202,20,0.039,28,0.477,37,0.633,39,0.929,42,1.373,43,1.517,45,0.392,46,0.021,62,2.764,66,1.517,68,2.012,73,0.027,74,0.027,95,3.328,125,1.373,129,2.21,155,3.328,171,2.516,407,2.208,408,3.444,409,2.395,410,2.782,411,3.51,412,2.395,413,2.782,414,2.782,415,2.782,416,2.782,417,3.328,418,3.328,419,3.652,420,2.782,421,2.782,422,3.37,423,4.425,424,4.078,425,3.37,426,3.37,427,3.37,428,3.37,429,3.37,430,3.37,431,3.37,432,2.764,433,2.764,434,2.782,435,3.37,436,3.37,437,2.782]],["title/directives/PermissionOnlyDirective.html",[94,0.756,417,1.686]],["body/directives/PermissionOnlyDirective.html",[1,1.586,2,0.409,3,0.352,4,0.247,5,0.352,7,0.247,13,0.982,17,0.935,19,1.349,20,0.039,21,1.349,22,0.442,23,0.978,28,0.737,37,0.554,39,0.911,45,0.247,46,0.02,73,0.027,74,0.027,79,0.54,92,1.052,94,1.22,97,1.838,98,2.18,100,2.721,104,2.065,105,3.318,106,2.894,107,2.894,113,2.065,114,1.488,115,2.065,116,2.18,117,2.343,118,2.065,119,2.065,120,1.488,121,2.065,122,2.065,123,2.065,124,2.065,125,1.346,126,1.613,127,1.488,128,1.488,129,1.613,130,2.348,131,2.348,133,2.343,134,1.838,135,1.838,138,1.838,139,1.838,140,1.838,142,1.838,143,1.838,144,1.838,145,1.328,146,2.18,147,2.429,148,2.429,149,2.429,151,1.838,152,1.838,153,1.838,154,2.348,417,2.429,438,2.728,439,5.205,440,4.368,441,4.368,442,4.368,443,3.305,444,4.368,445,4.368,446,4.368,447,4.368,448,3.305,449,3.305,450,3.305,451,3.305]],["title/pipes/PermissionPipe.html",[214,1.365,418,1.686]],["body/pipes/PermissionPipe.html",[1,1.36,2,0.416,3,0.359,4,0.251,5,0.341,8,1.243,17,0.897,19,1.102,20,0.039,21,1.307,22,0.473,23,0.799,25,1.42,28,0.742,37,0.595,39,0.927,41,0.839,45,0.251,46,0.021,47,1.871,48,1.168,49,0.893,73,0.027,74,0.027,79,0.691,82,1.224,97,1.871,117,2.222,125,1.371,126,1.243,127,1.515,145,1.023,174,0.839,178,2.778,191,0.839,192,1.357,195,2.778,196,1.128,198,1.871,199,1.871,214,2.222,218,1.515,244,2.391,246,2.391,251,2.391,283,1.243,418,2.458,452,2.778,453,4.42,454,3.365,455,4.936,456,3.365,457,3.365,458,4.42,459,3.365,460,4.075,461,3.365,462,4.42,463,3.365,464,4.936,465,5.242,466,3.365,467,4.42,468,4.42,469,3.365,470,3.365,471,3.365,472,4.936,473,3.365,474,4.42,475,3.365,476,3.365,477,3.365,478,3.365,479,3.365,480,3.365,481,3.365]],["title/classes/PermissionStore.html",[15,0.756,46,0.019]],["body/classes/PermissionStore.html",[2,0.37,3,0.319,4,0.223,5,0.349,7,0.223,8,1.508,15,1.346,17,0.927,19,1.304,20,0.039,21,1.304,22,0.487,23,0.999,28,0.837,34,1.282,37,0.495,38,2.551,39,0.824,41,0.745,45,0.348,46,0.025,48,1.091,49,1.117,57,0.672,59,1.868,61,1.002,63,1.868,64,1.868,65,1.868,66,1.346,67,1.868,68,1.663,69,1.663,70,1.663,71,1.868,73,0.025,74,0.025,76,1.675,79,0.739,82,0.672,85,1.523,87,3.515,92,0.604,117,2.249,174,1.018,190,3.304,191,1.018,192,1.018,319,1.218,326,2.611,432,1.868,482,1.868,483,4.125,484,3.122,485,4.125,486,4.998,487,4.125,488,4.084,489,4.125,490,4.084,491,4.084,492,2.99,493,2.99,494,2.99,495,4.084,496,2.99,497,4.084,498,2.99,499,2.99,500,4.084,501,2.99,502,2.99,503,4.084,504,2.99,505,4.084,506,2.99,507,4.998,508,2.99,509,3.839,510,2.99,511,2.99,512,2.124,513,3.371,514,2.468,515,2.468,516,1.868]],["title/interfaces/RawPermissionMap.html",[25,0.756,75,0.682]],["body/interfaces/RawPermissionMap.html",[2,0.238,3,0.315,4,0.144,5,0.115,7,0.144,11,1.477,13,0.432,15,0.9,16,0.995,20,0.039,22,0.418,23,0.899,25,0.9,28,0.863,31,0.992,33,0.644,34,1.484,37,0.555,41,0.479,42,0.783,43,0.865,44,0.71,45,0.372,46,0.012,48,0.598,49,0.598,57,1.211,61,1.615,73,0.033,74,0.018,75,0.985,76,0.992,78,1.801,79,0.747,80,0.959,82,0.912,83,0.584,85,1.503,91,0.783,92,0.388,136,1.884,145,1.552,167,2.082,174,1.092,191,1.011,192,0.479,194,0.959,196,0.644,203,1.55,210,1.477,218,1.625,282,0.783,283,1.959,284,1.068,285,1.068,286,1.068,287,1.068,295,2.082,300,1.068,302,2.024,303,1.068,305,1.068,306,1.068,307,2.024,308,1.068,309,1.068,310,1.068,311,1.068,312,1.068,313,1.068,314,1.068,315,0.959,316,1.068,317,1.068,318,1.068,319,0.783,320,1.884,321,2.024,322,2.405,323,2.423,324,1.646,325,1.068,326,2.647,327,1.068,328,1.068,329,1.068,330,1.068,331,1.068,332,1.068,333,1.646,334,1.068,335,1.068,336,1.068,337,1.068,338,1.068,339,1.801,340,2.007,341,1.068,342,1.068,343,1.068,344,0.959,345,1.068,346,1.068,347,2.007,348,1.068,349,1.068,350,1.646,351,1.068,352,1.068,353,1.068,354,1.068,355,1.332,356,1.068,357,1.068,358,1.068,359,2.255,360,1.068,361,2.483,362,1.825,363,1.332,364,1.068,365,1.068,366,2.007,367,1.068,368,2.007,369,0.959,370,0.959,371,1.477,372,2.435,373,1.068,374,1.068,375,1.646,376,1.068,377,1.068,378,1.068,379,1.068,380,1.068,381,0.959,382,1.477,383,1.068,384,0.959,385,0.865,386,0.959,387,1.068,388,1.068,389,1.068,390,1.068,391,1.477,392,1.068,393,0.959,394,1.068,395,0.959,396,1.068,397,1.477,398,1.477,399,1.477,400,1.068,401,1.477,402,1.068,403,0.865,404,1.646,405,1.068,406,2.007]],["title/interfaces/RedirectMap.html",[75,0.682,295,1.365]],["body/interfaces/RedirectMap.html",[2,0.243,3,0.321,4,0.147,5,0.18,7,0.225,11,1.502,13,0.442,15,0.912,16,1.008,17,0.315,20,0.039,22,0.33,25,0.75,28,0.865,31,1.009,33,0.658,34,1.491,37,0.559,41,0.49,42,0.8,43,0.884,44,0.725,45,0.374,46,0.012,48,0.608,49,0.608,57,1.217,61,1.628,73,0.033,74,0.019,75,0.994,76,1.009,78,2.047,79,0.734,80,0.98,82,0.922,83,0.597,85,1.51,91,0.8,92,0.397,136,1.491,145,1.562,167,1.647,174,1.102,191,1.211,192,0.49,194,0.98,196,0.658,203,1.564,210,1.502,218,1.647,282,0.8,283,1.851,284,1.092,285,1.092,286,1.092,287,1.092,295,2.186,300,1.092,302,2.047,303,1.092,305,1.092,306,1.092,307,2.047,308,1.092,309,1.092,310,1.092,311,1.092,312,1.092,313,1.092,314,1.092,315,0.98,316,1.092,317,1.092,318,1.092,319,0.8,320,1.901,321,2.047,322,2.617,323,2.436,324,1.674,325,1.092,326,2.662,327,1.092,328,1.092,329,1.092,330,1.092,331,1.092,332,1.092,333,1.674,334,1.092,335,1.092,336,1.092,337,1.092,338,1.092,339,1.826,340,2.035,341,1.092,342,1.092,343,1.092,344,0.98,345,1.092,346,1.092,347,2.035,348,1.092,349,1.092,350,1.674,351,1.092,352,1.092,353,1.092,354,1.092,355,1.355,356,1.092,357,1.092,358,1.092,359,2.281,360,1.092,361,2.501,362,1.846,363,1.355,364,1.092,365,1.092,366,2.035,367,1.092,368,2.035,369,0.98,370,0.98,371,1.502,372,2.46,373,1.092,374,1.092,375,1.674,376,1.092,377,1.092,378,1.092,379,1.092,380,1.092,381,0.98,382,1.502,383,1.092,384,0.98,385,0.884,386,0.98,387,1.092,388,1.092,389,1.092,390,1.092,391,1.502,392,1.092,393,0.98,394,1.092,395,0.98,396,1.092,397,1.502,398,1.502,399,1.502,400,1.092,401,1.502,402,1.092,403,0.884,404,1.674,405,1.092,406,2.035,517,1.964]],["title/interfaces/RedirectRoute.html",[75,0.682,320,1.235]],["body/interfaces/RedirectRoute.html",[2,0.243,3,0.321,4,0.147,5,0.18,7,0.225,11,1.503,13,0.442,15,0.913,16,1.009,17,0.316,20,0.039,22,0.33,25,0.751,28,0.865,31,1.009,33,0.659,34,1.491,37,0.559,41,0.49,42,0.801,43,0.885,44,0.726,45,0.375,46,0.012,48,0.609,49,0.609,57,1.217,61,1.628,73,0.033,74,0.019,75,0.995,76,1.009,78,2.048,79,0.738,80,0.981,82,0.923,83,0.598,85,1.51,91,0.801,92,0.397,136,1.491,145,1.563,167,1.648,174,1.103,191,1.023,192,0.49,194,0.981,196,0.659,203,1.564,210,1.503,218,1.648,282,0.801,283,1.851,284,1.093,285,1.093,286,1.093,287,1.093,295,2.101,300,1.093,302,2.048,303,1.093,305,1.093,306,1.093,307,2.048,308,1.093,309,1.093,310,1.093,311,1.093,312,1.093,313,1.093,314,1.093,315,0.981,316,1.093,317,1.093,318,1.093,319,0.801,320,1.979,321,2.425,322,2.425,323,2.436,324,1.675,325,1.093,326,2.662,327,1.093,328,1.093,329,1.093,330,1.093,331,1.093,332,1.093,333,1.675,334,1.093,335,1.093,336,1.093,337,1.093,338,1.093,339,1.827,340,2.036,341,1.093,342,1.093,343,1.093,344,0.981,345,1.093,346,1.093,347,2.036,348,1.093,349,1.093,350,1.675,351,1.093,352,1.093,353,1.093,354,1.093,355,1.356,356,1.093,357,1.093,358,1.093,359,2.282,360,1.093,361,2.501,362,1.847,363,1.356,364,1.093,365,1.093,366,2.036,367,1.093,368,2.036,369,0.981,370,0.981,371,1.503,372,2.46,373,1.093,374,1.093,375,1.675,376,1.093,377,1.093,378,1.093,379,1.093,380,1.093,381,0.981,382,1.503,383,1.093,384,0.981,385,0.885,386,0.981,387,1.093,388,1.093,389,1.093,390,1.093,391,1.503,392,1.093,393,0.981,394,1.093,395,0.981,396,1.093,397,1.503,398,1.503,399,1.503,400,1.093,401,1.503,402,1.093,403,0.885,404,1.675,405,1.093,406,2.036,518,1.966]],["title/classes/Role.html",[46,0.019,83,0.922]],["body/classes/Role.html",[2,0.461,3,0.397,4,0.278,5,0.31,7,0.278,8,1.743,13,1.061,15,1.401,17,0.758,19,1.177,20,0.039,21,1.358,22,0.426,23,0.853,28,0.796,33,1.582,34,1.428,37,0.599,41,0.929,42,1.518,45,0.278,46,0.029,48,0.954,57,1.061,61,1.249,73,0.029,74,0.029,79,0.721,82,0.838,83,1.435,85,1.582,86,3.076,87,3.403,91,1.923,92,0.954,93,3.076,196,1.249,197,2.327,198,2.072,315,1.859,339,1.859,344,1.859,361,1.859,363,1.677,371,1.859,403,1.677,519,3.076,520,3.726,521,4.72,522,3.726,523,3.726,524,3.726,525,3.726,526,3.726,527,3.726,528,3.726,529,3.726,530,3.726]],["title/classes/RoleStore.html",[16,0.835,46,0.019]],["body/classes/RoleStore.html",[2,0.367,3,0.316,4,0.222,5,0.348,7,0.222,8,1.5,16,1.485,17,0.926,19,1.3,20,0.039,21,1.3,22,0.486,23,0.997,28,0.836,34,1.276,37,0.493,38,2.537,39,0.817,41,0.739,45,0.346,46,0.025,48,1.089,49,1.115,57,0.667,59,1.853,61,0.994,63,1.853,64,1.853,65,1.853,66,1.335,67,1.853,68,1.654,69,1.649,70,1.649,71,1.853,73,0.025,74,0.025,76,1.669,79,0.747,83,0.902,85,1.52,87,3.508,92,0.599,117,2.242,174,1.012,190,3.291,191,1.012,192,1.012,319,1.208,433,1.853,483,4.112,484,3.111,485,4.112,487,4.112,489,4.112,509,3.823,512,2.107,513,3.353,514,2.448,531,1.853,532,4.981,533,4.061,534,4.061,535,4.061,536,2.966,537,2.966,538,2.966,539,4.061,540,2.966,541,5.217,542,4.061,543,2.966,544,2.966,545,4.061,546,2.966,547,2.966,548,4.061,549,2.966,550,4.061,551,2.966,552,4.981,553,2.966,554,2.966,555,2.966,556,2.448,557,1.853]],["title/interfaces/ValidateResult.html",[44,1.12,75,0.682]],["body/interfaces/ValidateResult.html",[2,0.242,3,0.32,4,0.146,5,0.117,7,0.146,11,1.498,13,0.44,15,0.91,16,1.006,20,0.039,22,0.37,25,0.748,28,0.865,31,1.006,33,0.656,34,1.49,37,0.558,41,0.488,42,0.797,43,0.881,44,1.109,45,0.374,46,0.012,48,0.606,49,0.606,57,1.216,61,1.626,73,0.033,74,0.018,75,0.993,76,1.006,78,1.822,79,0.736,80,0.976,82,0.921,83,0.595,85,1.552,91,0.797,92,0.738,136,1.487,145,1.62,167,1.643,174,1.101,191,1.021,192,0.488,194,0.976,196,0.656,203,1.562,210,1.498,218,1.643,282,0.797,283,1.849,284,1.088,285,1.088,286,1.088,287,1.088,295,2.097,300,1.088,302,2.043,303,1.088,305,1.088,306,1.088,307,2.043,308,1.088,309,1.088,310,1.088,311,1.088,312,1.088,313,1.088,314,1.088,315,0.976,316,1.088,317,1.088,318,1.088,319,0.797,320,1.898,321,2.043,322,2.421,323,2.434,324,1.669,325,1.088,326,2.761,327,1.088,328,1.088,329,1.088,330,1.088,331,1.088,332,1.088,333,1.669,334,1.088,335,1.088,336,1.088,337,1.088,338,1.088,339,1.822,340,2.03,341,1.088,342,1.088,343,1.088,344,0.976,345,1.088,346,1.088,347,2.03,348,1.088,349,1.088,350,1.669,351,1.088,352,1.088,353,1.088,354,1.088,355,1.351,356,1.088,357,1.088,358,1.088,359,2.277,360,1.088,361,2.498,362,1.843,363,1.351,364,1.088,365,1.088,366,2.03,367,1.088,368,2.03,369,0.976,370,0.976,371,1.498,372,2.456,373,1.088,374,1.088,375,1.669,376,1.088,377,1.088,378,1.088,379,1.088,380,1.088,381,0.976,382,1.498,383,1.088,384,0.976,385,0.881,386,0.976,387,1.088,388,1.088,389,1.088,390,1.088,391,1.498,392,1.088,393,0.976,394,1.088,395,0.976,396,1.088,397,1.498,398,1.498,399,1.498,400,1.088,401,1.498,402,1.088,403,0.881,404,1.669,405,1.088,406,2.03]],["title/changelog.html",[558,2.096,559,2.096,560,2.539]],["body/changelog.html",[1,0.754,4,0.204,7,0.204,20,0.027,22,0.434,33,0.917,37,0.292,40,2.259,41,1.263,44,1.011,45,0.379,49,0.553,66,2.365,68,1.564,70,2.675,73,0.024,74,0.024,75,0.615,79,0.338,82,1.289,85,0.754,94,0.957,114,2.166,120,1.729,133,1.232,136,1.115,171,1.232,177,1.944,185,2.729,191,0.957,200,1.944,214,2.281,223,2.399,249,1.944,283,1.011,302,1.365,307,1.916,355,1.232,363,1.232,369,1.365,403,1.232,407,2.529,409,1.944,434,2.259,437,2.259,460,2.259,484,2.399,561,5.396,562,2.736,563,2.736,564,3.841,565,2.259,566,2.259,567,2.736,568,2.736,569,2.736,570,2.736,571,2.736,572,3.841,573,5.254,574,2.736,575,4.546,576,5.254,577,3.841,578,2.736,579,3.841,580,4.438,581,2.259,582,2.736,583,2.259,584,2.736,585,3.733,586,2.736,587,3.17,588,2.736,589,4.438,590,2.736,591,2.736,592,4.811,593,5.068,594,4.438,595,2.736,596,2.259,597,3.841,598,2.736,599,2.736,600,5.937,601,2.736,602,4.438,603,2.736,604,3.841,605,2.736,606,2.736,607,2.736,608,2.259,609,2.259,610,2.736,611,2.736,612,3.841,613,5.734,614,5.734,615,3.841,616,2.736,617,2.736,618,2.736,619,2.736,620,2.736,621,2.736,622,2.736,623,2.736,624,2.736,625,2.736,626,2.259,627,2.736,628,2.736,629,3.841,630,3.841,631,3.841,632,2.736,633,2.736,634,2.736,635,3.841,636,3.841,637,3.841,638,3.841,639,2.736,640,2.736,641,2.736,642,2.736,643,3.841,644,2.736,645,4.438,646,2.736,647,3.841,648,2.736,649,2.736,650,2.736,651,2.736,652,2.736,653,2.736,654,2.736,655,2.736,656,2.736,657,3.841,658,2.736,659,2.259,660,2.736,661,2.736,662,3.972,663,2.736,664,2.736,665,2.736,666,2.736,667,2.736,668,2.736,669,2.736,670,2.736,671,2.736,672,2.736,673,4.811,674,3.841,675,3.841,676,2.736,677,2.736,678,2.736,679,2.736,680,2.736,681,2.259,682,2.736,683,2.736,684,2.736,685,2.736,686,2.736,687,2.736,688,2.736,689,2.736,690,2.736,691,2.736,692,2.736,693,2.736,694,2.736,695,2.736,696,2.736,697,2.736,698,2.736,699,2.736,700,2.736,701,2.736,702,2.736,703,2.736,704,2.736,705,2.259,706,2.736,707,2.736,708,2.736,709,2.736,710,2.736,711,2.736,712,2.736,713,1.944,714,2.736,715,2.259,716,2.736,717,2.736,718,2.736]],["title/coverage.html",[719,3.403]],["body/coverage.html",[0,1.885,1,0.855,4,0.232,5,0.374,6,2.961,15,0.773,16,0.855,20,0.039,22,0.28,25,0.773,31,1.04,44,1.146,46,0.034,49,0.627,57,1.337,62,1.938,72,1.938,73,0.026,74,0.026,75,1.191,76,1.04,77,2.561,82,0.698,83,0.943,84,2.204,94,1.265,95,1.725,96,2.561,126,1.146,128,1.396,129,1.146,155,1.725,156,2.561,171,1.396,172,2.561,173,2.561,197,1.938,214,1.396,220,2.975,282,2.436,295,1.396,320,1.264,417,1.725,418,1.725,432,1.938,433,1.938,438,2.561,452,2.561,482,2.961,516,1.938,519,2.561,531,2.961,557,1.938,565,2.561,719,2.561,720,3.103,721,3.103,722,6.241,723,5.299,724,6.076,725,3.765,726,3.103,727,3.103,728,4.187,729,4.74,730,2.561,731,2.561,732,2.561,733,2.561,734,2.561,735,2.561,736,2.561,737,2.561,738,4.187,739,4.187,740,3.103,741,3.103,742,4.187,743,3.457,744,2.561,745,2.561,746,2.561,747,3.103,748,3.103]],["title/miscellaneous/functions.html",[57,0.819,749,1.267]],["body/miscellaneous/functions.html",[3,0.388,5,0.334,6,2.274,7,0.272,15,1.159,16,1.282,19,1.515,20,0.038,21,1.515,23,1.099,25,0.907,34,1.003,57,0.819,58,3.005,59,3.202,72,2.905,73,0.029,74,0.029,85,1.003,116,1.817,126,1.718,174,0.907,192,0.907,197,2.905,240,2.587,282,1.483,283,2.108,381,1.817,382,1.817,384,1.817,385,1.639,386,1.817,391,1.817,393,1.817,395,1.817,397,1.817,398,1.817,399,1.817,401,1.817,482,2.274,512,4.352,515,3.005,516,2.905,531,2.274,556,3.005,557,2.905,713,2.587,730,3.839,731,3.839,732,3.839,733,3.839,734,3.839,735,3.839,736,3.839,737,3.839,746,3.005,749,1.817,750,3.005,751,3.641,752,4.897,753,3.005,754,3.005]],["title/index.html",[7,0.19,558,2.096,559,2.096]],["body/index.html",[0,1.1,4,0.265,15,0.883,16,0.977,17,0.734,20,0.039,23,0.64,28,0.59,31,1.188,33,0.819,37,0.604,39,0.674,45,0.311,46,0.026,47,1.36,48,0.494,57,1.028,66,2.491,68,1.444,69,1.36,73,0.022,74,0.022,82,1.348,83,1.39,94,1.333,98,1.22,114,1.1,120,2.058,133,1.1,136,0.996,146,1.22,167,1.876,171,2.184,174,0.609,176,3.441,177,1.737,185,2.962,193,2.018,199,1.36,200,3.248,203,1.397,214,2.184,223,2.214,283,1.54,319,1.444,321,2.281,323,1.595,355,1.595,362,2.058,370,2.08,385,1.595,408,1.971,411,1.737,412,1.737,424,2.925,484,1.527,566,2.018,575,2.018,581,2.018,583,2.925,585,2.962,587,2.925,608,4.498,626,2.018,659,2.018,662,2.018,681,2.925,705,3.441,713,1.737,715,4.309,755,4.572,756,2.445,757,2.925,758,2.445,759,2.445,760,2.445,761,2.445,762,2.445,763,2.445,764,2.445,765,2.445,766,4.169,767,2.445,768,2.445,769,2.445,770,2.445,771,2.445,772,2.445,773,2.445,774,3.544,775,4.572,776,4.169,777,4.169,778,2.445,779,2.445,780,3.544,781,2.445,782,2.445,783,2.445,784,3.544,785,2.445,786,2.445,787,2.445,788,2.445,789,2.445,790,2.445,791,3.544,792,3.544,793,2.445,794,2.445,795,2.445,796,2.445,797,2.445,798,2.445,799,3.544,800,2.445,801,4.169,802,3.544,803,3.544,804,2.445,805,2.018,806,4.572,807,2.445,808,3.544,809,2.445,810,2.445,811,2.445,812,2.445,813,2.445,814,2.445,815,2.445,816,2.445,817,2.018,818,2.445,819,3.544,820,3.544,821,5.347,822,3.544,823,2.445,824,2.445,825,2.445,826,2.445,827,2.445,828,2.445,829,3.544,830,2.445,831,3.544,832,5.842,833,3.544,834,2.445,835,2.445,836,2.445,837,2.445,838,2.445,839,2.445,840,2.445,841,2.445,842,2.445,843,3.544,844,2.445,845,2.445,846,3.544,847,2.445,848,2.445,849,2.445,850,2.445,851,3.544,852,2.445,853,2.445,854,3.544,855,3.544,856,3.544,857,2.445,858,2.445,859,2.445,860,2.445,861,2.445,862,2.445,863,2.445,864,2.445,865,2.445,866,2.445,867,2.445]],["title/modules.html",[407,2.057]],["body/modules.html",[20,0.034,73,0.034,74,0.034,407,2.407,408,2.683,585,3.428,805,3.982,868,4.824,869,4.824]],["title/overview.html",[870,3.403]],["body/overview.html",[0,1.817,20,0.038,45,0.302,46,0.025,68,1.644,73,0.031,74,0.031,75,0.908,94,1.006,95,3.3,129,2.192,155,3.3,171,2.418,214,1.817,407,2.476,408,3.472,409,2.868,410,3.332,411,2.868,412,2.868,413,3.332,414,3.332,415,3.332,416,3.332,417,3.3,418,3.3,419,4.096,420,3.332,421,3.332,596,3.332,609,3.332,757,3.332,817,4.096,870,3.332,871,4.037]],["title/miscellaneous/typealiases.html",[749,1.267,872,3.642]],["body/miscellaneous/typealiases.html",[5,0.321,7,0.343,20,0.037,22,0.483,57,1.204,73,0.033,74,0.033,79,0.567,84,3.258,85,1.564,282,1.868,320,1.868,322,2.918,323,2.554,749,2.288,752,4.422,873,4.586,874,4.586,875,4.586]],["title/miscellaneous/variables.html",[725,2.588,749,1.267]],["body/miscellaneous/variables.html",[1,1.325,5,0.33,6,2.395,7,0.287,15,1.309,16,1.447,20,0.038,22,0.497,23,0.949,38,3.28,49,1.21,62,3.28,63,3.28,64,3.28,65,3.28,66,2.363,67,3.28,68,2.356,69,2.92,70,2.92,71,3.28,72,2.395,73,0.03,74,0.03,191,1.372,192,1.372,203,1.285,362,2.603,432,3.28,433,3.28,482,2.395,516,2.395,531,2.395,557,2.395,725,2.725,743,3.166,744,4.334,745,4.334,749,1.914,750,3.166,753,3.166,754,3.166,876,4.807,877,3.835,878,3.835]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"injectables/Authorization.html":{},"interfaces/Dictionary.html":{},"classes/Permission.html":{},"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"modules/PermissionModule.html":{},"directives/PermissionOnlyDirective.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":722,"title":{},"body":{"coverage.html":{}}}],["0.2.0",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["0.5.0",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["0.5.1",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["0.5.2",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["0.6.1",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["0.6.2",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["0.6.3",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["0.6.4",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["0.7.0",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["0.7.1",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["0.8.0",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["0.8.1",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["0.8.2",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":591,"title":{},"body":{"changelog.html":{}}}],["0/1",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":742,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":740,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":741,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":593,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":592,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":573,"title":{},"body":{"changelog.html":{}}}],["0817a81",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":817,"title":{},"body":{"index.html":{},"overview.html":{}}}],["1.0.0",{"_index":571,"title":{},"body":{"changelog.html":{}}}],["1/1",{"_index":739,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["100",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["107f235",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":574,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":757,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.4",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["2017",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["2018",{"_index":572,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["2828afb",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["2c589e0",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["30",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["32f2f0e",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":871,"title":{},"body":{"overview.html":{}}}],["404",{"_index":851,"title":{},"body":{"index.html":{}}}],["40a2a48",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["45751c7",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["4c6cd8c",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":609,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["507e664",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["5a6a715",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":596,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["603c1a5",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["603c7b5",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["6589f5e",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["688c53f",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["6afe330",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["7b6763e",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["820bbb3",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["83cebef",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["8d767c1",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["96de94f",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["99440e4",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["9e61bd9",{"_index":588,"title":{},"body":{"changelog.html":{}}}],["_context",{"_index":235,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["_elsetemplateref",{"_index":237,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["_elseviewref",{"_index":239,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["_thentemplateref",{"_index":236,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["_thenviewref",{"_index":238,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["a9ff85b",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["abil",{"_index":786,"title":{},"body":{"index.html":{}}}],["accessor",{"_index":113,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["acl(access",{"_index":771,"title":{},"body":{"index.html":{}}}],["activatedroutesnapshot",{"_index":183,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["ad",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":576,"title":{},"body":{"changelog.html":{}}}],["admin",{"_index":855,"title":{},"body":{"index.html":{}}}],["aka",{"_index":324,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["alias",{"_index":873,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allof",{"_index":325,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["alreadi",{"_index":63,"title":{},"body":{"injectables/Authorization.html":{},"classes/PermissionStore.html":{},"classes/RoleStore.html":{},"miscellaneous/variables.html":{}}}],["angular",{"_index":608,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/cor",{"_index":39,"title":{},"body":{"injectables/Authorization.html":{},"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"modules/PermissionModule.html":{},"directives/PermissionOnlyDirective.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"classes/RoleStore.html":{},"index.html":{}}}],["angular/platform",{"_index":804,"title":{},"body":{"index.html":{}}}],["angular/rout",{"_index":193,"title":{},"body":{"injectables/PermissionGuard.html":{},"index.html":{}}}],["angular2",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["anyof",{"_index":136,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"changelog.html":{},"index.html":{}}}],["aot",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["app",{"_index":822,"title":{},"body":{"index.html":{}}}],["app.compon",{"_index":807,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":824,"title":{},"body":{"index.html":{}}}],["app.component.scss",{"_index":826,"title":{},"body":{"index.html":{}}}],["app_initi",{"_index":829,"title":{},"body":{"index.html":{}}}],["appcompon",{"_index":806,"title":{},"body":{"index.html":{}}}],["applic",{"_index":831,"title":{},"body":{"index.html":{}}}],["appmodul",{"_index":802,"title":{},"body":{"index.html":{}}}],["array",{"_index":403,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"interfaces/ValidateResult.html":{},"changelog.html":{}}}],["array.isarray(properti",{"_index":394,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["array.isarray(this.validatefn",{"_index":524,"title":{},"body":{"classes/Role.html":{}}}],["asid",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["async",{"_index":773,"title":{},"body":{"index.html":{}}}],["author",{"_index":1,"title":{"injectables/Authorization.html":{}},"body":{"injectables/Authorization.html":{},"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{},"pipes/PermissionPipe.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorization(permissionstor",{"_index":60,"title":{},"body":{"injectables/Authorization.html":{}}}],["authorization/author",{"_index":125,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"modules/PermissionModule.html":{},"directives/PermissionOnlyDirective.html":{},"pipes/PermissionPipe.html":{}}}],["authorization/permissionmap",{"_index":198,"title":{},"body":{"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"pipes/PermissionPipe.html":{},"classes/Role.html":{}}}],["authorization_provid",{"_index":62,"title":{},"body":{"injectables/Authorization.html":{},"modules/PermissionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorization_provider_factori",{"_index":72,"title":{},"body":{"injectables/Authorization.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["authorization_provider_factory(par",{"_index":58,"title":{},"body":{"injectables/Authorization.html":{},"miscellaneous/functions.html":{}}}],["avail",{"_index":65,"title":{},"body":{"injectables/Authorization.html":{},"classes/PermissionStore.html":{},"classes/RoleStore.html":{},"miscellaneous/variables.html":{}}}],["b54c6f3",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["behaviorsubject",{"_index":469,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["behaviorsubject(fals",{"_index":462,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["better",{"_index":580,"title":{},"body":{"changelog.html":{}}}],["block",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["boolean",{"_index":92,"title":{},"body":{"classes/Permission.html":{},"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"directives/PermissionOnlyDirective.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{}}}],["bootstrap",{"_index":412,"title":{},"body":{"modules/PermissionModule.html":{},"index.html":{},"overview.html":{}}}],["break",{"_index":589,"title":{},"body":{"changelog.html":{}}}],["brows",{"_index":869,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":805,"title":{},"body":{"index.html":{},"modules.html":{}}}],["browsermodul",{"_index":803,"title":{},"body":{"index.html":{}}}],["bug",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["buildto",{"_index":862,"title":{},"body":{"index.html":{}}}],["c5f20ae",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["c95dbcf",{"_index":584,"title":{},"body":{"changelog.html":{}}}],["can't",{"_index":838,"title":{},"body":{"index.html":{}}}],["canactiv",{"_index":176,"title":{},"body":{"injectables/PermissionGuard.html":{},"index.html":{}}}],["canactivate(rout",{"_index":182,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["canactivatechild",{"_index":177,"title":{},"body":{"injectables/PermissionGuard.html":{},"changelog.html":{},"index.html":{}}}],["canactivatechild(rout",{"_index":186,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["central",{"_index":769,"title":{},"body":{"index.html":{}}}],["chang",{"_index":561,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":560,"title":{"changelog.html":{}},"body":{}}],["check",{"_index":249,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"changelog.html":{}}}],["checkpermiss",{"_index":178,"title":{},"body":{"injectables/PermissionGuard.html":{},"pipes/PermissionPipe.html":{}}}],["checkpermission(perm",{"_index":188,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["checkpermission(valu",{"_index":453,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["claim",{"_index":756,"title":{},"body":{"index.html":{}}}],["class",{"_index":46,"title":{"classes/Permission.html":{},"classes/PermissionIfContext.html":{},"classes/PermissionMap.html":{},"classes/PermissionStore.html":{},"classes/Role.html":{},"classes/RoleStore.html":{}},"body":{"injectables/Authorization.html":{},"classes/Permission.html":{},"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"modules/PermissionModule.html":{},"directives/PermissionOnlyDirective.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["clear",{"_index":146,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{},"index.html":{}}}],["clearstor",{"_index":485,"title":{},"body":{"classes/PermissionStore.html":{},"classes/RoleStore.html":{}}}],["cloud",{"_index":867,"title":{},"body":{"index.html":{}}}],["cluster_permissionmodul",{"_index":413,"title":{},"body":{"modules/PermissionModule.html":{},"overview.html":{}}}],["cluster_permissionmodule_declar",{"_index":414,"title":{},"body":{"modules/PermissionModule.html":{},"overview.html":{}}}],["cluster_permissionmodule_export",{"_index":415,"title":{},"body":{"modules/PermissionModule.html":{},"overview.html":{}}}],["cluster_permissionmodule_provid",{"_index":416,"title":{},"body":{"modules/PermissionModule.html":{},"overview.html":{}}}],["combin",{"_index":837,"title":{},"body":{"index.html":{}}}],["commit",{"_index":569,"title":{},"body":{"changelog.html":{}}}],["compar",{"_index":762,"title":{},"body":{"index.html":{}}}],["compat",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["complement",{"_index":790,"title":{},"body":{"index.html":{}}}],["compon",{"_index":821,"title":{},"body":{"index.html":{}}}],["composit",{"_index":781,"title":{},"body":{"index.html":{}}}],["condit",{"_index":120,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{},"changelog.html":{},"index.html":{}}}],["config",{"_index":355,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"changelog.html":{},"index.html":{}}}],["const",{"_index":61,"title":{},"body":{"injectables/Authorization.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionMap.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{}}}],["constructor",{"_index":13,"title":{},"body":{"injectables/Authorization.html":{},"classes/Permission.html":{},"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"directives/PermissionOnlyDirective.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"interfaces/ValidateResult.html":{}}}],["constructor(author",{"_index":179,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["constructor(defineservic",{"_index":827,"title":{},"body":{"index.html":{}}}],["constructor(nam",{"_index":86,"title":{},"body":{"classes/Permission.html":{},"classes/Role.html":{}}}],["constructor(permissionmap",{"_index":290,"title":{},"body":{"classes/PermissionMap.html":{}}}],["constructor(permissionstor",{"_index":14,"title":{},"body":{"injectables/Authorization.html":{}}}],["constructor(priv",{"_index":47,"title":{},"body":{"injectables/Authorization.html":{},"classes/Permission.html":{},"injectables/PermissionGuard.html":{},"pipes/PermissionPipe.html":{},"index.html":{}}}],["constructor(templateref",{"_index":104,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["context",{"_index":744,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":766,"title":{},"body":{"index.html":{}}}],["conveni",{"_index":579,"title":{},"body":{"changelog.html":{}}}],["correct",{"_index":797,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":719,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":819,"title":{},"body":{"index.html":{}}}],["d.t",{"_index":860,"title":{},"body":{"index.html":{}}}],["d593fa8",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":200,"title":{},"body":{"injectables/PermissionGuard.html":{},"changelog.html":{},"index.html":{}}}],["data.permiss",{"_index":202,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["debouncetim",{"_index":229,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["declar",{"_index":411,"title":{},"body":{"modules/PermissionModule.html":{},"index.html":{},"overview.html":{}}}],["default",{"_index":191,"title":{},"body":{"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":17,"title":{},"body":{"injectables/Authorization.html":{},"interfaces/Dictionary.html":{},"classes/Permission.html":{},"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"directives/PermissionOnlyDirective.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"index.html":{}}}],["definepermiss",{"_index":486,"title":{},"body":{"classes/PermissionStore.html":{}}}],["definepermission(permissionnam",{"_index":495,"title":{},"body":{"classes/PermissionStore.html":{}}}],["definepermissions(permissionnam",{"_index":497,"title":{},"body":{"classes/PermissionStore.html":{}}}],["definepermissionsandrolesservic",{"_index":808,"title":{},"body":{"index.html":{}}}],["definerol",{"_index":532,"title":{},"body":{"classes/RoleStore.html":{}}}],["definerole(rolenam",{"_index":539,"title":{},"body":{"classes/RoleStore.html":{}}}],["defineroles(rolenam",{"_index":542,"title":{},"body":{"classes/RoleStore.html":{}}}],["defineservice.init",{"_index":828,"title":{},"body":{"index.html":{}}}],["delet",{"_index":816,"title":{},"body":{"index.html":{}}}],["dep",{"_index":70,"title":{},"body":{"injectables/Authorization.html":{},"classes/PermissionStore.html":{},"classes/RoleStore.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["depend",{"_index":409,"title":{},"body":{"modules/PermissionModule.html":{},"changelog.html":{},"overview.html":{}}}],["deprec",{"_index":434,"title":{},"body":{"modules/PermissionModule.html":{},"changelog.html":{}}}],["develop",{"_index":858,"title":{},"body":{"index.html":{}}}],["dictionari",{"_index":76,"title":{"interfaces/Dictionary.html":{}},"body":{"interfaces/Dictionary.html":{},"classes/PermissionMap.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"coverage.html":{}}}],["differ",{"_index":793,"title":{},"body":{"index.html":{}}}],["direct",{"_index":94,"title":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["directives/permissionanyof.direct",{"_index":425,"title":{},"body":{"modules/PermissionModule.html":{}}}],["directives/permissionexcept.direct",{"_index":426,"title":{},"body":{"modules/PermissionModule.html":{}}}],["directives/permissionif.direct",{"_index":427,"title":{},"body":{"modules/PermissionModule.html":{}}}],["directives/permissiononly.direct",{"_index":428,"title":{},"body":{"modules/PermissionModule.html":{}}}],["directli",{"_index":435,"title":{},"body":{"modules/PermissionModule.html":{}}}],["document",{"_index":565,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["doesn't",{"_index":843,"title":{},"body":{"index.html":{}}}],["don't",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["drop",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["e",{"_index":866,"title":{},"body":{"index.html":{}}}],["e5dfb6d",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["e9fde6b",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["eac829d",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":306,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["each(redirectto",{"_index":405,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["element'",{"_index":767,"title":{},"body":{"index.html":{}}}],["embeddedviewref",{"_index":227,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["emit",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["empti",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["error",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["error('empti",{"_index":354,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["error('invalid",{"_index":364,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["es",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["es/each",{"_index":308,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["es/isfunct",{"_index":310,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["es/isnil",{"_index":312,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["es/isstr",{"_index":314,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["event",{"_index":483,"title":{},"body":{"classes/PermissionStore.html":{},"classes/RoleStore.html":{}}}],["except",{"_index":167,"title":{},"body":{"directives/PermissionExceptDirective.html":{},"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"index.html":{}}}],["exist",{"_index":768,"title":{},"body":{"index.html":{}}}],["expect",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":45,"title":{},"body":{"injectables/Authorization.html":{},"interfaces/Dictionary.html":{},"classes/Permission.html":{},"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"modules/PermissionModule.html":{},"directives/PermissionOnlyDirective.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["extend",{"_index":131,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["extern",{"_index":223,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"changelog.html":{},"index.html":{}}}],["extract",{"_index":845,"title":{},"body":{"index.html":{}}}],["f24763b",{"_index":582,"title":{},"body":{"changelog.html":{}}}],["fact",{"_index":795,"title":{},"body":{"index.html":{}}}],["fals",{"_index":218,"title":{},"body":{"injectables/PermissionGuard.html":{},"classes/PermissionMap.html":{},"pipes/PermissionPipe.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["featur",{"_index":575,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["field",{"_index":784,"title":{},"body":{"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"injectables/Authorization.html":{},"interfaces/Dictionary.html":{},"classes/Permission.html":{},"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"modules/PermissionModule.html":{},"directives/PermissionOnlyDirective.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["find",{"_index":373,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["finish",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["fix",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["follow",{"_index":782,"title":{},"body":{"index.html":{}}}],["forkjoin",{"_index":315,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"interfaces/ValidateResult.html":{}}}],["forkjoin(...map",{"_index":528,"title":{},"body":{"classes/Role.html":{}}}],["forkjoin(observablearr",{"_index":368,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["forroot",{"_index":437,"title":{},"body":{"modules/PermissionModule.html":{},"changelog.html":{}}}],["fortun",{"_index":842,"title":{},"body":{"index.html":{}}}],["four",{"_index":833,"title":{},"body":{"index.html":{}}}],["from(valu",{"_index":389,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["full",{"_index":586,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":57,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/Authorization.html":{},"classes/PermissionMap.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["gener",{"_index":713,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["genpermmap",{"_index":9,"title":{},"body":{"injectables/Authorization.html":{}}}],["genpermmap(rpm",{"_index":24,"title":{},"body":{"injectables/Authorization.html":{}}}],["get",{"_index":558,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["getchang",{"_index":487,"title":{},"body":{"classes/PermissionStore.html":{},"classes/RoleStore.html":{}}}],["getpermissiondefinit",{"_index":488,"title":{},"body":{"classes/PermissionStore.html":{}}}],["getpermissiondefinition(permissionnam",{"_index":500,"title":{},"body":{"classes/PermissionStore.html":{}}}],["getrawmap",{"_index":126,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{},"pipes/PermissionPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getrawmap(perm",{"_index":240,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"miscellaneous/functions.html":{}}}],["getrawmap(valu",{"_index":479,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["getroledefinit",{"_index":533,"title":{},"body":{"classes/RoleStore.html":{}}}],["getroledefinition(rolenam",{"_index":545,"title":{},"body":{"classes/RoleStore.html":{}}}],["getstor",{"_index":489,"title":{},"body":{"classes/PermissionStore.html":{},"classes/RoleStore.html":{}}}],["grant",{"_index":347,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["guard",{"_index":662,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["guard(onli",{"_index":765,"title":{},"body":{"index.html":{}}}],["guard.servic",{"_index":431,"title":{},"body":{"modules/PermissionModule.html":{}}}],["guard.service.t",{"_index":173,"title":{},"body":{"injectables/PermissionGuard.html":{},"coverage.html":{}}}],["guard.service.ts:12",{"_index":181,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["guard.service.ts:16",{"_index":184,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["guard.service.ts:26",{"_index":187,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["guard.service.ts:30",{"_index":189,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["guidelin",{"_index":570,"title":{},"body":{"changelog.html":{}}}],["handl",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["haspermissiondefinit",{"_index":490,"title":{},"body":{"classes/PermissionStore.html":{}}}],["haspermissiondefinition(permissionnam",{"_index":503,"title":{},"body":{"classes/PermissionStore.html":{}}}],["hasroledefinit",{"_index":534,"title":{},"body":{"classes/RoleStore.html":{}}}],["hasroledefinition(rolenam",{"_index":548,"title":{},"body":{"classes/RoleStore.html":{}}}],["here",{"_index":792,"title":{},"body":{"index.html":{}}}],["hold",{"_index":785,"title":{},"body":{"index.html":{}}}],["home",{"_index":853,"title":{},"body":{"index.html":{}}}],["home2",{"_index":857,"title":{},"body":{"index.html":{}}}],["homecompon",{"_index":854,"title":{},"body":{"index.html":{}}}],["host",{"_index":770,"title":{},"body":{"index.html":{}}}],["id",{"_index":90,"title":{},"body":{"classes/Permission.html":{}}}],["identifi",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["ignor",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":199,"title":{},"body":{"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"pipes/PermissionPipe.html":{},"index.html":{}}}],["implicit",{"_index":222,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["import",{"_index":37,"title":{},"body":{"injectables/Authorization.html":{},"classes/Permission.html":{},"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"modules/PermissionModule.html":{},"directives/PermissionOnlyDirective.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"changelog.html":{},"index.html":{}}}],["improv",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["inde",{"_index":348,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/Authorization.html":{},"interfaces/Dictionary.html":{},"classes/Permission.html":{},"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"directives/PermissionOnlyDirective.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"injectables/Authorization.html":{},"interfaces/Dictionary.html":{},"classes/Permission.html":{},"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"modules/PermissionModule.html":{},"directives/PermissionOnlyDirective.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{}}}],["init",{"_index":809,"title":{},"body":{"index.html":{}}}],["inject",{"_index":0,"title":{"injectables/Authorization.html":{},"injectables/PermissionGuard.html":{}},"body":{"injectables/Authorization.html":{},"injectables/PermissionGuard.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["input",{"_index":100,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["input('permissionanyof",{"_index":132,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{}}}],["input('permissionanyofels",{"_index":150,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{}}}],["input('permissionanyofextern",{"_index":137,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{}}}],["input('permissionanyofthen",{"_index":141,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{}}}],["input('permissionexcept",{"_index":166,"title":{},"body":{"directives/PermissionExceptDirective.html":{}}}],["input('permissionexceptels",{"_index":170,"title":{},"body":{"directives/PermissionExceptDirective.html":{}}}],["input('permissionexceptextern",{"_index":168,"title":{},"body":{"directives/PermissionExceptDirective.html":{}}}],["input('permissionexceptthen",{"_index":169,"title":{},"body":{"directives/PermissionExceptDirective.html":{}}}],["input('permissiononli",{"_index":448,"title":{},"body":{"directives/PermissionOnlyDirective.html":{}}}],["input('permissiononlyels",{"_index":451,"title":{},"body":{"directives/PermissionOnlyDirective.html":{}}}],["input('permissiononlyextern",{"_index":449,"title":{},"body":{"directives/PermissionOnlyDirective.html":{}}}],["input('permissiononlythen",{"_index":450,"title":{},"body":{"directives/PermissionOnlyDirective.html":{}}}],["inspir",{"_index":758,"title":{},"body":{"index.html":{}}}],["instal",{"_index":775,"title":{},"body":{"index.html":{}}}],["instead",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["intercept",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["interfac",{"_index":75,"title":{"interfaces/Dictionary.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}},"body":{"interfaces/Dictionary.html":{},"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["intern",{"_index":779,"title":{},"body":{"index.html":{}}}],["intersect",{"_index":788,"title":{},"body":{"index.html":{}}}],["isfunct",{"_index":309,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["isfunction(redirectto",{"_index":400,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["isn't",{"_index":796,"title":{},"body":{"index.html":{}}}],["isnil",{"_index":311,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["isnil(redirectto",{"_index":396,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["isnil(redirectto.path",{"_index":392,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["isobjectsingleredirectionrul",{"_index":730,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isobjectsingleredirectionrule(redirectto",{"_index":391,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"miscellaneous/functions.html":{}}}],["isobserv",{"_index":731,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isobservable(obj",{"_index":381,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"miscellaneous/functions.html":{}}}],["isobservable(valu",{"_index":387,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["ispromis",{"_index":317,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["ispromise(valu",{"_index":388,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["isstr",{"_index":313,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["isstring(result",{"_index":360,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["it'",{"_index":844,"title":{},"body":{"index.html":{}}}],["js",{"_index":859,"title":{},"body":{"index.html":{}}}],["keep",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["lastinput",{"_index":460,"title":{},"body":{"pipes/PermissionPipe.html":{},"changelog.html":{}}}],["legend",{"_index":410,"title":{},"body":{"modules/PermissionModule.html":{},"overview.html":{}}}],["lettabl",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["lib",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["librari",{"_index":715,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["lint",{"_index":863,"title":{},"body":{"index.html":{}}}],["lintlicens",{"_index":864,"title":{},"body":{"index.html":{}}}],["list",{"_index":772,"title":{},"body":{"index.html":{}}}],["liter",{"_index":875,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["littl",{"_index":798,"title":{},"body":{"index.html":{}}}],["local",{"_index":64,"title":{},"body":{"injectables/Authorization.html":{},"classes/PermissionStore.html":{},"classes/RoleStore.html":{},"miscellaneous/variables.html":{}}}],["lodash",{"_index":307,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"changelog.html":{}}}],["log",{"_index":562,"title":{},"body":{"changelog.html":{}}}],["login",{"_index":849,"title":{},"body":{"index.html":{}}}],["logincompon",{"_index":850,"title":{},"body":{"index.html":{}}}],["make",{"_index":681,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["manag",{"_index":764,"title":{},"body":{"index.html":{}}}],["map",{"_index":33,"title":{},"body":{"injectables/Authorization.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"interfaces/ValidateResult.html":{},"changelog.html":{},"index.html":{}}}],["map(redirect",{"_index":216,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["map.resolveal",{"_index":53,"title":{},"body":{"injectables/Authorization.html":{}}}],["match",{"_index":74,"title":{},"body":{"injectables/Authorization.html":{},"interfaces/Dictionary.html":{},"classes/Permission.html":{},"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"modules/PermissionModule.html":{},"directives/PermissionOnlyDirective.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":231,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["merg",{"_index":40,"title":{},"body":{"injectables/Authorization.html":{},"changelog.html":{}}}],["merge(this.permissionstore.getchang",{"_index":55,"title":{},"body":{"injectables/Authorization.html":{}}}],["metadata",{"_index":97,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{},"pipes/PermissionPipe.html":{}}}],["metadata.json",{"_index":861,"title":{},"body":{"index.html":{}}}],["method",{"_index":8,"title":{},"body":{"injectables/Authorization.html":{},"classes/Permission.html":{},"injectables/PermissionGuard.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"classes/Role.html":{},"classes/RoleStore.html":{}}}],["miscellan",{"_index":749,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":865,"title":{},"body":{"index.html":{}}}],["model",{"_index":319,"title":{},"body":{"classes/PermissionMap.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"index.html":{}}}],["modul",{"_index":407,"title":{"modules/PermissionModule.html":{},"modules.html":{}},"body":{"modules/PermissionModule.html":{},"changelog.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":423,"title":{},"body":{"modules/PermissionModule.html":{}}}],["name",{"_index":21,"title":{},"body":{"injectables/Authorization.html":{},"classes/Permission.html":{},"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"directives/PermissionOnlyDirective.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"miscellaneous/functions.html":{}}}],["navig",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["necessari",{"_index":787,"title":{},"body":{"index.html":{}}}],["new",{"_index":49,"title":{},"body":{"injectables/Authorization.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng2",{"_index":755,"title":{},"body":{"index.html":{}}}],["ng6",{"_index":595,"title":{},"body":{"changelog.html":{}}}],["ngc",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["ngif",{"_index":774,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":424,"title":{},"body":{"modules/PermissionModule.html":{},"index.html":{}}}],["ngonchang",{"_index":248,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["ngondestroy",{"_index":455,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["ngoninit",{"_index":243,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["normalizefunctionredirectionrul",{"_index":732,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["normalizefunctionredirectionrule(redirectto",{"_index":401,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"miscellaneous/functions.html":{}}}],["normalizeobjectmultipleredirectionrul",{"_index":733,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["normalizeobjectmultipleredirectionrule(redirectto",{"_index":399,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"miscellaneous/functions.html":{}}}],["normalizeobjectsingleredirectionrul",{"_index":734,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["normalizeobjectsingleredirectionrule(redirectto",{"_index":398,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"miscellaneous/functions.html":{}}}],["normalizeredirecttoproperti",{"_index":735,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["normalizeredirecttoproperty(permissionmap.redirectto",{"_index":334,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["normalizeredirecttoproperty(redirectto",{"_index":395,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"miscellaneous/functions.html":{}}}],["normalizesetoperationproperti",{"_index":736,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["normalizesetoperationproperty(permissionmap.anyof",{"_index":330,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["normalizesetoperationproperty(permissionmap.except",{"_index":332,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["normalizesetoperationproperty(permissionmap.onli",{"_index":328,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["normalizesetoperationproperty(properti",{"_index":393,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"miscellaneous/functions.html":{}}}],["normalizestringredirectionrul",{"_index":737,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["normalizestringredirectionrule(redirectto",{"_index":397,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"miscellaneous/functions.html":{}}}],["notabl",{"_index":563,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":791,"title":{},"body":{"index.html":{}}}],["notifi",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["now",{"_index":626,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["npm",{"_index":777,"title":{},"body":{"index.html":{}}}],["null",{"_index":145,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"directives/PermissionOnlyDirective.html":{},"pipes/PermissionPipe.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["obj",{"_index":382,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"miscellaneous/functions.html":{}}}],["obj.subscrib",{"_index":383,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["object",{"_index":362,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":34,"title":{},"body":{"injectables/Authorization.html":{},"classes/Permission.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionMap.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"miscellaneous/functions.html":{}}}],["observable'",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["observablearr",{"_index":366,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["of(result",{"_index":350,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["of(valu",{"_index":390,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["on",{"_index":69,"title":{},"body":{"injectables/Authorization.html":{},"classes/PermissionStore.html":{},"classes/RoleStore.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["onc",{"_index":801,"title":{},"body":{"index.html":{}}}],["onchang",{"_index":10,"title":{},"body":{"injectables/Authorization.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["ondestroy",{"_index":467,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["oninit",{"_index":228,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["onnc",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["oper",{"_index":587,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["operat",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":23,"title":{},"body":{"injectables/Authorization.html":{},"classes/Permission.html":{},"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"directives/PermissionOnlyDirective.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["or/union",{"_index":794,"title":{},"body":{"index.html":{}}}],["oral",{"_index":800,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":67,"title":{},"body":{"injectables/Authorization.html":{},"classes/PermissionStore.html":{},"classes/RoleStore.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":421,"title":{},"body":{"modules/PermissionModule.html":{},"overview.html":{}}}],["overview",{"_index":870,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package.json",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["pagenotfoundcompon",{"_index":852,"title":{},"body":{"index.html":{}}}],["paramet",{"_index":19,"title":{},"body":{"injectables/Authorization.html":{},"classes/Permission.html":{},"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"directives/PermissionOnlyDirective.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":59,"title":{},"body":{"injectables/Authorization.html":{},"classes/PermissionStore.html":{},"classes/RoleStore.html":{},"miscellaneous/functions.html":{}}}],["path",{"_index":321,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"index.html":{}}}],["per",{"_index":232,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["perform",{"_index":846,"title":{},"body":{"index.html":{}}}],["perm",{"_index":116,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{},"miscellaneous/functions.html":{}}}],["permiss",{"_index":82,"title":{"classes/Permission.html":{}},"body":{"interfaces/Dictionary.html":{},"classes/Permission.html":{},"classes/PermissionMap.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"interfaces/ValidateResult.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["permission(permissionnam",{"_index":508,"title":{},"body":{"classes/PermissionStore.html":{}}}],["permission/src/authorization/authorization.t",{"_index":6,"title":{},"body":{"injectables/Authorization.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["permission/src/authorization/authorization.ts:10",{"_index":18,"title":{},"body":{"injectables/Authorization.html":{}}}],["permission/src/authorization/authorization.ts:14",{"_index":26,"title":{},"body":{"injectables/Authorization.html":{}}}],["permission/src/authorization/authorization.ts:18",{"_index":32,"title":{},"body":{"injectables/Authorization.html":{}}}],["permission/src/authorization/authorization.ts:22",{"_index":36,"title":{},"body":{"injectables/Authorization.html":{}}}],["permission/src/authorization/authorization.ts:26",{"_index":29,"title":{},"body":{"injectables/Authorization.html":{}}}],["permission/src/authorization/permissionmap.t",{"_index":282,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["permission/src/authorization/permissionmap.ts:100",{"_index":304,"title":{},"body":{"classes/PermissionMap.html":{}}}],["permission/src/authorization/permissionmap.ts:123",{"_index":298,"title":{},"body":{"classes/PermissionMap.html":{}}}],["permission/src/authorization/permissionmap.ts:14",{"_index":518,"title":{},"body":{"interfaces/RedirectRoute.html":{}}}],["permission/src/authorization/permissionmap.ts:142",{"_index":299,"title":{},"body":{"classes/PermissionMap.html":{}}}],["permission/src/authorization/permissionmap.ts:158",{"_index":297,"title":{},"body":{"classes/PermissionMap.html":{}}}],["permission/src/authorization/permissionmap.ts:26",{"_index":517,"title":{},"body":{"interfaces/RedirectMap.html":{}}}],["permission/src/authorization/permissionmap.ts:46",{"_index":294,"title":{},"body":{"classes/PermissionMap.html":{}}}],["permission/src/authorization/permissionmap.ts:47",{"_index":292,"title":{},"body":{"classes/PermissionMap.html":{}}}],["permission/src/authorization/permissionmap.ts:48",{"_index":293,"title":{},"body":{"classes/PermissionMap.html":{}}}],["permission/src/authorization/permissionmap.ts:49",{"_index":291,"title":{},"body":{"classes/PermissionMap.html":{}}}],["permission/src/authorization/permissionmap.ts:62",{"_index":301,"title":{},"body":{"classes/PermissionMap.html":{}}}],["permission/src/authorization/permissionmap.ts:81",{"_index":296,"title":{},"body":{"classes/PermissionMap.html":{}}}],["permission/src/directives/permissionanyof.directive.t",{"_index":96,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"coverage.html":{}}}],["permission/src/directives/permissionanyof.directive.ts:13",{"_index":109,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{}}}],["permission/src/directives/permissionanyof.directive.ts:18",{"_index":111,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{}}}],["permission/src/directives/permissionanyof.directive.ts:24",{"_index":112,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{}}}],["permission/src/directives/permissionanyof.directive.ts:31",{"_index":110,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{}}}],["permission/src/directives/permissionanyof.directive.ts:35",{"_index":108,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{}}}],["permission/src/directives/permissionexcept.directive.t",{"_index":156,"title":{},"body":{"directives/PermissionExceptDirective.html":{},"coverage.html":{}}}],["permission/src/directives/permissionexcept.directive.ts:13",{"_index":162,"title":{},"body":{"directives/PermissionExceptDirective.html":{}}}],["permission/src/directives/permissionexcept.directive.ts:18",{"_index":164,"title":{},"body":{"directives/PermissionExceptDirective.html":{}}}],["permission/src/directives/permissionexcept.directive.ts:24",{"_index":165,"title":{},"body":{"directives/PermissionExceptDirective.html":{}}}],["permission/src/directives/permissionexcept.directive.ts:31",{"_index":163,"title":{},"body":{"directives/PermissionExceptDirective.html":{}}}],["permission/src/directives/permissionexcept.directive.ts:35",{"_index":161,"title":{},"body":{"directives/PermissionExceptDirective.html":{}}}],["permission/src/directives/permissionif.directive.t",{"_index":220,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"coverage.html":{}}}],["permission/src/directives/permissionif.directive.ts:10",{"_index":224,"title":{},"body":{"classes/PermissionIfContext.html":{}}}],["permission/src/directives/permissionif.directive.ts:103",{"_index":273,"title":{},"body":{"directives/PermissionIfDirective.html":{}}}],["permission/src/directives/permissionif.directive.ts:107",{"_index":274,"title":{},"body":{"directives/PermissionIfDirective.html":{}}}],["permission/src/directives/permissionif.directive.ts:11",{"_index":226,"title":{},"body":{"classes/PermissionIfContext.html":{}}}],["permission/src/directives/permissionif.directive.ts:12",{"_index":225,"title":{},"body":{"classes/PermissionIfContext.html":{}}}],["permission/src/directives/permissionif.directive.ts:19",{"_index":281,"title":{},"body":{"directives/PermissionIfDirective.html":{}}}],["permission/src/directives/permissionif.directive.ts:20",{"_index":276,"title":{},"body":{"directives/PermissionIfDirective.html":{}}}],["permission/src/directives/permissionif.directive.ts:21",{"_index":279,"title":{},"body":{"directives/PermissionIfDirective.html":{}}}],["permission/src/directives/permissionif.directive.ts:22",{"_index":277,"title":{},"body":{"directives/PermissionIfDirective.html":{}}}],["permission/src/directives/permissionif.directive.ts:23",{"_index":280,"title":{},"body":{"directives/PermissionIfDirective.html":{}}}],["permission/src/directives/permissionif.directive.ts:24",{"_index":278,"title":{},"body":{"directives/PermissionIfDirective.html":{}}}],["permission/src/directives/permissionif.directive.ts:27",{"_index":266,"title":{},"body":{"directives/PermissionIfDirective.html":{}}}],["permission/src/directives/permissionif.directive.ts:32",{"_index":268,"title":{},"body":{"directives/PermissionIfDirective.html":{}}}],["permission/src/directives/permissionif.directive.ts:38",{"_index":269,"title":{},"body":{"directives/PermissionIfDirective.html":{}}}],["permission/src/directives/permissionif.directive.ts:45",{"_index":267,"title":{},"body":{"directives/PermissionIfDirective.html":{}}}],["permission/src/directives/permissionif.directive.ts:49",{"_index":265,"title":{},"body":{"directives/PermissionIfDirective.html":{}}}],["permission/src/directives/permissionif.directive.ts:61",{"_index":272,"title":{},"body":{"directives/PermissionIfDirective.html":{}}}],["permission/src/directives/permissionif.directive.ts:69",{"_index":271,"title":{},"body":{"directives/PermissionIfDirective.html":{}}}],["permission/src/directives/permissionif.directive.ts:73",{"_index":270,"title":{},"body":{"directives/PermissionIfDirective.html":{}}}],["permission/src/directives/permissionif.directive.ts:81",{"_index":275,"title":{},"body":{"directives/PermissionIfDirective.html":{}}}],["permission/src/directives/permissiononly.directive.t",{"_index":438,"title":{},"body":{"directives/PermissionOnlyDirective.html":{},"coverage.html":{}}}],["permission/src/directives/permissiononly.directive.ts:13",{"_index":444,"title":{},"body":{"directives/PermissionOnlyDirective.html":{}}}],["permission/src/directives/permissiononly.directive.ts:18",{"_index":446,"title":{},"body":{"directives/PermissionOnlyDirective.html":{}}}],["permission/src/directives/permissiononly.directive.ts:24",{"_index":447,"title":{},"body":{"directives/PermissionOnlyDirective.html":{}}}],["permission/src/directives/permissiononly.directive.ts:31",{"_index":445,"title":{},"body":{"directives/PermissionOnlyDirective.html":{}}}],["permission/src/directives/permissiononly.directive.ts:35",{"_index":443,"title":{},"body":{"directives/PermissionOnlyDirective.html":{}}}],["permission/src/models/index.t",{"_index":77,"title":{},"body":{"interfaces/Dictionary.html":{},"coverage.html":{}}}],["permission/src/models/index.ts:1",{"_index":81,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["permission/src/models/permission.t",{"_index":84,"title":{},"body":{"classes/Permission.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["permission/src/models/permission.ts:5",{"_index":88,"title":{},"body":{"classes/Permission.html":{}}}],["permission/src/models/permission.ts:9",{"_index":89,"title":{},"body":{"classes/Permission.html":{}}}],["permission/src/models/role.t",{"_index":519,"title":{},"body":{"classes/Role.html":{},"coverage.html":{}}}],["permission/src/models/role.ts:16",{"_index":522,"title":{},"body":{"classes/Role.html":{}}}],["permission/src/models/role.ts:9",{"_index":520,"title":{},"body":{"classes/Role.html":{}}}],["permission/src/permission.module.t",{"_index":422,"title":{},"body":{"modules/PermissionModule.html":{}}}],["permission/src/pipes/permission.pipe.t",{"_index":452,"title":{},"body":{"pipes/PermissionPipe.html":{},"coverage.html":{}}}],["permission/src/pipes/permission.pipe.ts:14",{"_index":463,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["permission/src/pipes/permission.pipe.ts:15",{"_index":461,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["permission/src/pipes/permission.pipe.ts:16",{"_index":466,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["permission/src/pipes/permission.pipe.ts:27",{"_index":456,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["permission/src/pipes/permission.pipe.ts:34",{"_index":459,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["permission/src/pipes/permission.pipe.ts:43",{"_index":454,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["permission/src/services/permiss",{"_index":172,"title":{},"body":{"injectables/PermissionGuard.html":{},"coverage.html":{}}}],["permission/src/stores/permissionstore.t",{"_index":482,"title":{},"body":{"classes/PermissionStore.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["permission/src/stores/permissionstore.ts:10",{"_index":496,"title":{},"body":{"classes/PermissionStore.html":{}}}],["permission/src/stores/permissionstore.ts:15",{"_index":498,"title":{},"body":{"classes/PermissionStore.html":{}}}],["permission/src/stores/permissionstore.ts:19",{"_index":506,"title":{},"body":{"classes/PermissionStore.html":{}}}],["permission/src/stores/permissionstore.ts:24",{"_index":504,"title":{},"body":{"classes/PermissionStore.html":{}}}],["permission/src/stores/permissionstore.ts:28",{"_index":501,"title":{},"body":{"classes/PermissionStore.html":{}}}],["permission/src/stores/permissionstore.ts:32",{"_index":502,"title":{},"body":{"classes/PermissionStore.html":{}}}],["permission/src/stores/permissionstore.ts:36",{"_index":494,"title":{},"body":{"classes/PermissionStore.html":{}}}],["permission/src/stores/permissionstore.ts:41",{"_index":499,"title":{},"body":{"classes/PermissionStore.html":{}}}],["permission/src/stores/permissionstore.ts:7",{"_index":493,"title":{},"body":{"classes/PermissionStore.html":{}}}],["permission/src/stores/permissionstore.ts:8",{"_index":492,"title":{},"body":{"classes/PermissionStore.html":{}}}],["permission/src/stores/rolestore.t",{"_index":531,"title":{},"body":{"classes/RoleStore.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["permission/src/stores/rolestore.ts:10",{"_index":540,"title":{},"body":{"classes/RoleStore.html":{}}}],["permission/src/stores/rolestore.ts:15",{"_index":543,"title":{},"body":{"classes/RoleStore.html":{}}}],["permission/src/stores/rolestore.ts:19",{"_index":551,"title":{},"body":{"classes/RoleStore.html":{}}}],["permission/src/stores/rolestore.ts:24",{"_index":549,"title":{},"body":{"classes/RoleStore.html":{}}}],["permission/src/stores/rolestore.ts:28",{"_index":546,"title":{},"body":{"classes/RoleStore.html":{}}}],["permission/src/stores/rolestore.ts:32",{"_index":547,"title":{},"body":{"classes/RoleStore.html":{}}}],["permission/src/stores/rolestore.ts:36",{"_index":538,"title":{},"body":{"classes/RoleStore.html":{}}}],["permission/src/stores/rolestore.ts:41",{"_index":544,"title":{},"body":{"classes/RoleStore.html":{}}}],["permission/src/stores/rolestore.ts:7",{"_index":537,"title":{},"body":{"classes/RoleStore.html":{}}}],["permission/src/stores/rolestore.ts:8",{"_index":536,"title":{},"body":{"classes/RoleStore.html":{}}}],["permission/src/test.t",{"_index":743,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission/src/utils.t",{"_index":746,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["permissionanyof",{"_index":99,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{}}}],["permissionanyofdirect",{"_index":95,"title":{"directives/PermissionAnyOfDirective.html":{}},"body":{"directives/PermissionAnyOfDirective.html":{},"modules/PermissionModule.html":{},"coverage.html":{},"overview.html":{}}}],["permissionanyofels",{"_index":101,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{}}}],["permissionanyofextern",{"_index":102,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{}}}],["permissionanyofthen",{"_index":103,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{}}}],["permissionchangessub",{"_index":464,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["permissionexcept",{"_index":157,"title":{},"body":{"directives/PermissionExceptDirective.html":{}}}],["permissionexceptdirect",{"_index":155,"title":{"directives/PermissionExceptDirective.html":{}},"body":{"directives/PermissionExceptDirective.html":{},"modules/PermissionModule.html":{},"coverage.html":{},"overview.html":{}}}],["permissionexceptels",{"_index":158,"title":{},"body":{"directives/PermissionExceptDirective.html":{}}}],["permissionexceptextern",{"_index":159,"title":{},"body":{"directives/PermissionExceptDirective.html":{}}}],["permissionexceptthen",{"_index":160,"title":{},"body":{"directives/PermissionExceptDirective.html":{}}}],["permissionguard",{"_index":171,"title":{"injectables/PermissionGuard.html":{}},"body":{"injectables/PermissionGuard.html":{},"modules/PermissionModule.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["permissionif",{"_index":114,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{},"changelog.html":{},"index.html":{}}}],["permissionif(perm",{"_index":134,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["permissionif.direct",{"_index":130,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["permissionifcontext",{"_index":128,"title":{"classes/PermissionIfContext.html":{}},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{},"coverage.html":{}}}],["permissionifdirect",{"_index":129,"title":{"directives/PermissionIfDirective.html":{}},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"modules/PermissionModule.html":{},"directives/PermissionOnlyDirective.html":{},"coverage.html":{},"overview.html":{}}}],["permissionifels",{"_index":123,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["permissionifelse(templateref",{"_index":151,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["permissionifextern",{"_index":118,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["permissionifexternal(condit",{"_index":138,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["permissionifthen",{"_index":121,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["permissionifthen(templateref",{"_index":142,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["permissionmap",{"_index":31,"title":{"classes/PermissionMap.html":{}},"body":{"injectables/Authorization.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"coverage.html":{},"index.html":{}}}],["permissionmap(rpm",{"_index":50,"title":{},"body":{"injectables/Authorization.html":{}}}],["permissionmodul",{"_index":408,"title":{"modules/PermissionModule.html":{}},"body":{"modules/PermissionModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["permissionnam",{"_index":326,"title":{},"body":{"classes/PermissionMap.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["permissionnames.foreach(nam",{"_index":510,"title":{},"body":{"classes/PermissionStore.html":{}}}],["permissiononli",{"_index":439,"title":{},"body":{"directives/PermissionOnlyDirective.html":{}}}],["permissiononlydirect",{"_index":417,"title":{"directives/PermissionOnlyDirective.html":{}},"body":{"modules/PermissionModule.html":{},"directives/PermissionOnlyDirective.html":{},"coverage.html":{},"overview.html":{}}}],["permissiononlyels",{"_index":440,"title":{},"body":{"directives/PermissionOnlyDirective.html":{}}}],["permissiononlyextern",{"_index":441,"title":{},"body":{"directives/PermissionOnlyDirective.html":{}}}],["permissiononlythen",{"_index":442,"title":{},"body":{"directives/PermissionOnlyDirective.html":{}}}],["permissionpip",{"_index":418,"title":{"pipes/PermissionPipe.html":{}},"body":{"modules/PermissionModule.html":{},"pipes/PermissionPipe.html":{},"coverage.html":{},"overview.html":{}}}],["permissionreject",{"_index":175,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["permissionstor",{"_index":15,"title":{"classes/PermissionStore.html":{}},"body":{"injectables/Authorization.html":{},"classes/PermissionMap.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"interfaces/ValidateResult.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["permissionstore.haspermissiondefinition(perm",{"_index":526,"title":{},"body":{"classes/Role.html":{}}}],["permissionstore_provid",{"_index":432,"title":{},"body":{"modules/PermissionModule.html":{},"classes/PermissionStore.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissionstore_provider_factori",{"_index":516,"title":{},"body":{"classes/PermissionStore.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["permissionstore_provider_factory(par",{"_index":515,"title":{},"body":{"classes/PermissionStore.html":{},"miscellaneous/functions.html":{}}}],["permmap",{"_index":206,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["permmap.redirectto",{"_index":211,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["permmap.resolveredirect(result.permissionnam",{"_index":213,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["pipe",{"_index":214,"title":{"pipes/PermissionPipe.html":{}},"body":{"injectables/PermissionGuard.html":{},"pipes/PermissionPipe.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["pipe(debouncetime(250",{"_index":245,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["pipe(map(funct",{"_index":359,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["pipe(map(result",{"_index":339,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"interfaces/ValidateResult.html":{}}}],["pipe(switchmap((result",{"_index":209,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["pipe(switchmap(result",{"_index":346,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["pipe(take(1",{"_index":480,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["pipes/permission.pip",{"_index":429,"title":{},"body":{"modules/PermissionModule.html":{}}}],["pipetransform",{"_index":468,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["previou",{"_index":147,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["previous",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["privat",{"_index":48,"title":{},"body":{"injectables/Authorization.html":{},"classes/Permission.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"index.html":{}}}],["privileg",{"_index":302,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"changelog.html":{}}}],["privilegenam",{"_index":340,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["privileges.map(privilegenam",{"_index":335,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["product",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":564,"title":{},"body":{"changelog.html":{}}}],["projects/.../authorization.t",{"_index":750,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../permission.t",{"_index":874,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../permissionmap.t",{"_index":752,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../permissionstore.t",{"_index":753,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../rolestore.t",{"_index":754,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../test.t",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../utils.t",{"_index":751,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/ng2",{"_index":5,"title":{},"body":{"injectables/Authorization.html":{},"interfaces/Dictionary.html":{},"classes/Permission.html":{},"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"modules/PermissionModule.html":{},"directives/PermissionOnlyDirective.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promis",{"_index":91,"title":{},"body":{"classes/Permission.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"interfaces/ValidateResult.html":{}}}],["prop",{"_index":78,"title":{},"body":{"interfaces/Dictionary.html":{},"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["proper",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["properli",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["properti",{"_index":174,"title":{},"body":{"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["protect",{"_index":233,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["prototyp",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["provid",{"_index":68,"title":{},"body":{"injectables/Authorization.html":{},"modules/PermissionModule.html":{},"classes/PermissionStore.html":{},"classes/RoleStore.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":221,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["pure",{"_index":470,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["purpos",{"_index":834,"title":{},"body":{"index.html":{}}}],["rais",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["rawmap",{"_index":234,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["rawpermissionmap",{"_index":25,"title":{"interfaces/RawPermissionMap.html":{}},"body":{"injectables/Authorization.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"pipes/PermissionPipe.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["read",{"_index":814,"title":{},"body":{"index.html":{}}}],["recheck",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["redirect",{"_index":323,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["redirectfunc",{"_index":322,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"miscellaneous/typealiases.html":{}}}],["redirectionmap",{"_index":404,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["redirectionmap[permiss",{"_index":406,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["redirectmap",{"_index":295,"title":{"interfaces/RedirectMap.html":{}},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"coverage.html":{}}}],["redirectrout",{"_index":320,"title":{"interfaces/RedirectRoute.html":{}},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["redirectto",{"_index":283,"title":{},"body":{"classes/PermissionMap.html":{},"pipes/PermissionPipe.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["refer",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["reject",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["rejectedpermissionnam",{"_index":305,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["releas",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["remov",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["removepermissiondefinit",{"_index":491,"title":{},"body":{"classes/PermissionStore.html":{}}}],["removepermissiondefinition(permissionnam",{"_index":505,"title":{},"body":{"classes/PermissionStore.html":{}}}],["removeroledefinit",{"_index":535,"title":{},"body":{"classes/RoleStore.html":{}}}],["removeroledefinition(rolenam",{"_index":550,"title":{},"body":{"classes/RoleStore.html":{}}}],["repres",{"_index":780,"title":{},"body":{"index.html":{}}}],["requir",{"_index":745,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":420,"title":{},"body":{"modules/PermissionModule.html":{},"overview.html":{}}}],["resolv",{"_index":11,"title":{},"body":{"injectables/Authorization.html":{},"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["resolve(map",{"_index":30,"title":{},"body":{"injectables/Authorization.html":{}}}],["resolveal",{"_index":284,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["resolveanyofprivilegemap",{"_index":285,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["resolveexceptprivilegemap",{"_index":286,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["resolveonlyprivilegemap",{"_index":287,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["resolveprivilegesvalid",{"_index":288,"title":{},"body":{"classes/PermissionMap.html":{}}}],["resolveprivilegesvalidity(privileg",{"_index":300,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["resolveraw",{"_index":12,"title":{},"body":{"injectables/Authorization.html":{}}}],["resolveraw(map",{"_index":35,"title":{},"body":{"injectables/Authorization.html":{}}}],["resolveredirect",{"_index":289,"title":{},"body":{"classes/PermissionMap.html":{}}}],["resolveredirect(rejectedpermissionnam",{"_index":303,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["result",{"_index":73,"title":{},"body":{"injectables/Authorization.html":{},"interfaces/Dictionary.html":{},"classes/Permission.html":{},"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"modules/PermissionModule.html":{},"directives/PermissionOnlyDirective.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.every(x",{"_index":371,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"interfaces/ValidateResult.html":{}}}],["result.find(x",{"_index":375,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["result.some(x",{"_index":380,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["result.valid",{"_index":210,"title":{},"body":{"injectables/PermissionGuard.html":{},"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["return",{"_index":28,"title":{},"body":{"injectables/Authorization.html":{},"classes/Permission.html":{},"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"modules/PermissionModule.html":{},"directives/PermissionOnlyDirective.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"index.html":{}}}],["role",{"_index":83,"title":{"classes/Role.html":{}},"body":{"interfaces/Dictionary.html":{},"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"coverage.html":{},"index.html":{}}}],["role(rolenam",{"_index":553,"title":{},"body":{"classes/RoleStore.html":{}}}],["rolenam",{"_index":541,"title":{},"body":{"classes/RoleStore.html":{}}}],["rolenames.foreach(nam",{"_index":554,"title":{},"body":{"classes/RoleStore.html":{}}}],["rolestor",{"_index":16,"title":{"classes/RoleStore.html":{}},"body":{"injectables/Authorization.html":{},"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rolestore_provid",{"_index":433,"title":{},"body":{"modules/PermissionModule.html":{},"classes/RoleStore.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolestore_provider_factori",{"_index":557,"title":{},"body":{"classes/RoleStore.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["rolestore_provider_factory(par",{"_index":556,"title":{},"body":{"classes/RoleStore.html":{},"miscellaneous/functions.html":{}}}],["root",{"_index":820,"title":{},"body":{"index.html":{}}}],["rout",{"_index":185,"title":{},"body":{"injectables/PermissionGuard.html":{},"changelog.html":{},"index.html":{}}}],["route.data",{"_index":201,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["router",{"_index":180,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["routertestingmodule.withrout",{"_index":848,"title":{},"body":{"index.html":{}}}],["rpm",{"_index":27,"title":{},"body":{"injectables/Authorization.html":{}}}],["rule",{"_index":577,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":776,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":41,"title":{},"body":{"injectables/Authorization.html":{},"classes/Permission.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionMap.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"changelog.html":{}}}],["rxjs/internal/util/ispromis",{"_index":318,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["rxjs/oper",{"_index":196,"title":{},"body":{"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"pipes/PermissionPipe.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"interfaces/ValidateResult.html":{}}}],["saveconcept",{"_index":778,"title":{},"body":{"index.html":{}}}],["see",{"_index":566,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["selector",{"_index":98,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{},"index.html":{}}}],["semant",{"_index":581,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sens",{"_index":799,"title":{},"body":{"index.html":{}}}],["servic",{"_index":705,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["services/permiss",{"_index":430,"title":{},"body":{"modules/PermissionModule.html":{}}}],["set",{"_index":133,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{},"changelog.html":{},"index.html":{}}}],["setcondit",{"_index":263,"title":{},"body":{"directives/PermissionIfDirective.html":{}}}],["setcondition(condit",{"_index":259,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["setexternalcondit",{"_index":264,"title":{},"body":{"directives/PermissionIfDirective.html":{}}}],["setexternalcondition(condit",{"_index":262,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["setpermissionif(perm",{"_index":115,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["setpermissionifelse(templateref",{"_index":124,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["setpermissionifexternal(condit",{"_index":119,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["setpermissionifthen(templateref",{"_index":122,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["setup",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["shake",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["signatur",{"_index":590,"title":{},"body":{"changelog.html":{}}}],["similar",{"_index":760,"title":{},"body":{"index.html":{}}}],["simpl",{"_index":763,"title":{},"body":{"index.html":{}}}],["skipself",{"_index":38,"title":{},"body":{"injectables/Authorization.html":{},"classes/PermissionStore.html":{},"classes/RoleStore.html":{},"miscellaneous/variables.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"injectables/Authorization.html":{},"interfaces/Dictionary.html":{},"classes/Permission.html":{},"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"modules/PermissionModule.html":{},"directives/PermissionOnlyDirective.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"miscellaneous/functions.html":{}}}],["spec\\.t",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specif",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["specifi",{"_index":370,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"index.html":{}}}],["standalon",{"_index":818,"title":{},"body":{"index.html":{}}}],["standard",{"_index":567,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":559,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["statement",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":436,"title":{},"body":{"modules/PermissionModule.html":{}}}],["store",{"_index":484,"title":{},"body":{"classes/PermissionStore.html":{},"classes/RoleStore.html":{},"changelog.html":{},"index.html":{}}}],["stores/permissionstor",{"_index":42,"title":{},"body":{"injectables/Authorization.html":{},"classes/PermissionMap.html":{},"modules/PermissionModule.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"interfaces/ValidateResult.html":{}}}],["stores/rolestor",{"_index":43,"title":{},"body":{"injectables/Authorization.html":{},"classes/PermissionMap.html":{},"modules/PermissionModule.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["string",{"_index":79,"title":{},"body":{"interfaces/Dictionary.html":{},"classes/Permission.html":{},"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"directives/PermissionOnlyDirective.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["structur",{"_index":840,"title":{},"body":{"index.html":{}}}],["styleurl",{"_index":825,"title":{},"body":{"index.html":{}}}],["subject",{"_index":190,"title":{},"body":{"injectables/PermissionGuard.html":{},"classes/PermissionStore.html":{},"classes/RoleStore.html":{}}}],["subscrib",{"_index":246,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"pipes/PermissionPipe.html":{}}}],["subscribe((result",{"_index":251,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"pipes/PermissionPipe.html":{}}}],["subscript",{"_index":465,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["super(templateref",{"_index":154,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["superset",{"_index":761,"title":{},"body":{"index.html":{}}}],["support",{"_index":585,"title":{},"body":{"changelog.html":{},"index.html":{},"modules.html":{}}}],["sure",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["suspect",{"_index":856,"title":{},"body":{"index.html":{}}}],["svg",{"_index":868,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":194,"title":{},"body":{"injectables/PermissionGuard.html":{},"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["switchmap(result",{"_index":351,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["sync",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["syntax",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["t",{"_index":80,"title":{},"body":{"interfaces/Dictionary.html":{},"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["tabl",{"_index":748,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":747,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":841,"title":{},"body":{"index.html":{}}}],["take",{"_index":195,"title":{},"body":{"injectables/PermissionGuard.html":{},"pipes/PermissionPipe.html":{}}}],["take(1",{"_index":215,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["templat",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["templateref",{"_index":105,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["templateurl",{"_index":823,"title":{},"body":{"index.html":{}}}],["test",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["textextern",{"_index":835,"title":{},"body":{"index.html":{}}}],["therefor",{"_index":759,"title":{},"body":{"index.html":{}}}],["this._context",{"_index":257,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["this._context.$implicit",{"_index":254,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["this._context.extern",{"_index":261,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["this._context.permissionif",{"_index":260,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["this._elsetemplateref",{"_index":152,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["this._elseviewref",{"_index":153,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["this._thentemplateref",{"_index":143,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["this._thenviewref",{"_index":144,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["this.anyof",{"_index":329,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["this.anyof.length",{"_index":378,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["this.authorize.genpermmap(getrawmap(perm",{"_index":207,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["this.authorize.resolve(permmap",{"_index":208,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["this.authorizer.onchang",{"_index":244,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"pipes/PermissionPipe.html":{}}}],["this.authorizer.resolve(this.authorizer.genpermmap(this.rawmap",{"_index":250,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["this.authorizer.resolveraw",{"_index":478,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["this.canactivate(rout",{"_index":205,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["this.check",{"_index":247,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["this.checkpermission(data.permiss",{"_index":204,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["this.checkpermission(this.lastinput",{"_index":473,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["this.checkpermission(valu",{"_index":477,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["this.definepermission(nam",{"_index":511,"title":{},"body":{"classes/PermissionStore.html":{}}}],["this.definerole(nam",{"_index":555,"title":{},"body":{"classes/RoleStore.html":{}}}],["this.eventer$.asobserv",{"_index":514,"title":{},"body":{"classes/PermissionStore.html":{},"classes/RoleStore.html":{}}}],["this.eventer$.next",{"_index":509,"title":{},"body":{"classes/PermissionStore.html":{},"classes/RoleStore.html":{}}}],["this.except",{"_index":331,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["this.except.length",{"_index":365,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["this.lastinput",{"_index":472,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["this.onli",{"_index":327,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["this.only.length",{"_index":376,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["this.permiss",{"_index":474,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["this.permission$.next(result.valid",{"_index":481,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["this.permission$.unsubscrib",{"_index":475,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["this.permissionchangessub",{"_index":471,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["this.permissionchangessub.unsubscrib",{"_index":476,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["this.permissionrejected$.next(permmap",{"_index":212,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["this.permissionstor",{"_index":51,"title":{},"body":{"injectables/Authorization.html":{}}}],["this.permissionstore.definepermission('delet",{"_index":812,"title":{},"body":{"index.html":{}}}],["this.permissionstore.definepermission('read",{"_index":810,"title":{},"body":{"index.html":{}}}],["this.permissionstore.definepermission('writ",{"_index":811,"title":{},"body":{"index.html":{}}}],["this.permissionstore.getpermissiondefinition(privilegenam",{"_index":342,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["this.permissionstore.haspermissiondefinition(privilegenam",{"_index":341,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["this.rawmap",{"_index":135,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["this.redirectto",{"_index":333,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["this.redirectto.default",{"_index":357,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["this.redirectto[rejectedpermissionnam",{"_index":356,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["this.resolve(this.genpermmap(map",{"_index":54,"title":{},"body":{"injectables/Authorization.html":{}}}],["this.resolveanyofprivilegemap",{"_index":352,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["this.resolveexceptprivilegemap",{"_index":345,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["this.resolveonlyprivilegemap",{"_index":349,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["this.resolveprivilegesvalidity(this.anyof",{"_index":379,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["this.resolveprivilegesvalidity(this.except",{"_index":367,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["this.resolveprivilegesvalidity(this.onli",{"_index":377,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["this.rolestor",{"_index":52,"title":{},"body":{"injectables/Authorization.html":{}}}],["this.rolestore.definerole('admin",{"_index":813,"title":{},"body":{"index.html":{}}}],["this.rolestore.getchang",{"_index":56,"title":{},"body":{"injectables/Authorization.html":{}}}],["this.rolestore.getroledefinition(privilegenam",{"_index":337,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["this.rolestore.hasroledefinition(privilegenam",{"_index":336,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["this.router.navigate([redirect.path",{"_index":217,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["this.setcondit",{"_index":140,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["this.setcondition(fals",{"_index":242,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["this.setcondition(result.valid",{"_index":252,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["this.setexternalcondition(condit",{"_index":139,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["this.setexternalcondition(tru",{"_index":241,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["this.stor",{"_index":513,"title":{},"body":{"classes/PermissionStore.html":{},"classes/RoleStore.html":{}}}],["this.store[permissionnam",{"_index":507,"title":{},"body":{"classes/PermissionStore.html":{}}}],["this.store[rolenam",{"_index":552,"title":{},"body":{"classes/RoleStore.html":{}}}],["this.updateview",{"_index":149,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["this.validatefn",{"_index":523,"title":{},"body":{"classes/Role.html":{}}}],["this.validatefn(this.nam",{"_index":93,"title":{},"body":{"classes/Permission.html":{},"classes/Role.html":{}}}],["this.validatefn.map((perm",{"_index":525,"title":{},"body":{"classes/Role.html":{}}}],["this.viewcontainer.clear",{"_index":255,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["this.viewcontainer.createembeddedview(this._elsetemplateref",{"_index":258,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["this.viewcontainer.createembeddedview(this._thentemplateref",{"_index":256,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["those",{"_index":374,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["three",{"_index":783,"title":{},"body":{"index.html":{}}}],["throw",{"_index":363,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"interfaces/ValidateResult.html":{},"changelog.html":{}}}],["throwerror",{"_index":316,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["throwerror(new",{"_index":353,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["titl",{"_index":832,"title":{},"body":{"index.html":{}}}],["transform",{"_index":457,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["transform(valu",{"_index":458,"title":{},"body":{"pipes/PermissionPipe.html":{}}}],["tree",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":203,"title":{},"body":{"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":659,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["tslint:dis",{"_index":230,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["two",{"_index":839,"title":{},"body":{"index.html":{}}}],["type",{"_index":22,"title":{},"body":{"injectables/Authorization.html":{},"classes/Permission.html":{},"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"directives/PermissionOnlyDirective.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":872,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeerror('invalid",{"_index":530,"title":{},"body":{"classes/Role.html":{}}}],["typeerror('properti",{"_index":402,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["typeof",{"_index":361,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"interfaces/ValidateResult.html":{}}}],["undefin",{"_index":512,"title":{},"body":{"classes/PermissionStore.html":{},"classes/RoleStore.html":{},"miscellaneous/functions.html":{}}}],["union",{"_index":789,"title":{},"body":{"index.html":{}}}],["updat",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["updateview",{"_index":253,"title":{},"body":{"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{}}}],["upgrad",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["us",{"_index":66,"title":{},"body":{"injectables/Authorization.html":{},"modules/PermissionModule.html":{},"classes/PermissionStore.html":{},"classes/RoleStore.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["usag",{"_index":583,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["usefactori",{"_index":71,"title":{},"body":{"injectables/Authorization.html":{},"classes/PermissionStore.html":{},"classes/RoleStore.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":369,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"changelog.html":{}}}],["util",{"_index":127,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{},"pipes/PermissionPipe.html":{}}}],["valid",{"_index":85,"title":{},"body":{"classes/Permission.html":{},"classes/PermissionMap.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["validate(permissionstor",{"_index":521,"title":{},"body":{"classes/Role.html":{}}}],["validatefn",{"_index":87,"title":{},"body":{"classes/Permission.html":{},"classes/PermissionStore.html":{},"classes/Role.html":{},"classes/RoleStore.html":{}}}],["validateresult",{"_index":44,"title":{"interfaces/ValidateResult.html":{}},"body":{"injectables/Authorization.html":{},"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"changelog.html":{},"coverage.html":{}}}],["valu",{"_index":192,"title":{},"body":{"injectables/PermissionGuard.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"classes/PermissionMap.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/RoleStore.html":{},"interfaces/ValidateResult.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variabl",{"_index":725,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["variou",{"_index":385,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["verif",{"_index":847,"title":{},"body":{"index.html":{}}}],["version",{"_index":568,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":830,"title":{},"body":{"index.html":{}}}],["view",{"_index":148,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["viewcontain",{"_index":106,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["viewcontainerref",{"_index":107,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"classes/PermissionIfContext.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{}}}],["void",{"_index":117,"title":{},"body":{"directives/PermissionAnyOfDirective.html":{},"directives/PermissionExceptDirective.html":{},"directives/PermissionIfDirective.html":{},"directives/PermissionOnlyDirective.html":{},"pipes/PermissionPipe.html":{},"classes/PermissionStore.html":{},"classes/RoleStore.html":{}}}],["want",{"_index":836,"title":{},"body":{"index.html":{}}}],["way",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["work",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["wrap",{"_index":384,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"miscellaneous/functions.html":{}}}],["wrapintoobserv",{"_index":197,"title":{},"body":{"injectables/PermissionGuard.html":{},"classes/Role.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["wrapintoobservable(fals",{"_index":344,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"classes/Role.html":{},"interfaces/ValidateResult.html":{}}}],["wrapintoobservable(permission.valid",{"_index":343,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["wrapintoobservable(permissionstore.getpermissiondefinition(perm).valid",{"_index":527,"title":{},"body":{"classes/Role.html":{}}}],["wrapintoobservable(redirectfunc(rejectedpermissionnam",{"_index":358,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["wrapintoobservable(result.valid",{"_index":219,"title":{},"body":{"injectables/PermissionGuard.html":{}}}],["wrapintoobservable(role.validate(this.permissionstor",{"_index":338,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["wrapintoobservable(valu",{"_index":386,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{},"miscellaneous/functions.html":{}}}],["write",{"_index":815,"title":{},"body":{"index.html":{}}}],["x",{"_index":529,"title":{},"body":{"classes/Role.html":{}}}],["x.valid",{"_index":372,"title":{},"body":{"classes/PermissionMap.html":{},"interfaces/RawPermissionMap.html":{},"interfaces/RedirectMap.html":{},"interfaces/RedirectRoute.html":{},"interfaces/ValidateResult.html":{}}}],["zoom",{"_index":419,"title":{},"body":{"modules/PermissionModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/Authorization.html":{"url":"injectables/Authorization.html","title":"injectable - Authorization","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  Authorization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng2-permission/src/Authorization/Authorization.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                genPermMap\n                            \n                            \n                                onChanges\n                            \n                            \n                                resolve\n                            \n                            \n                                resolveRaw\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionStore: PermissionStore, roleStore: RoleStore)\n                    \n                \n                        \n                            \n                                Defined in projects/ng2-permission/src/Authorization/Authorization.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionStore\n                                                  \n                                                        \n                                                                    PermissionStore\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleStore\n                                                  \n                                                        \n                                                                    RoleStore\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            genPermMap\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenPermMap(rpm: RawPermissionMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/Authorization/Authorization.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rpm\n                                                        \n                                                                    RawPermissionMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/Authorization/Authorization.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolve(map: PermissionMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/Authorization/Authorization.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    PermissionMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolveRaw\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolveRaw(map: RawPermissionMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/Authorization/Authorization.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    RawPermissionMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { merge, Observable } from 'rxjs';\n\nimport { PermissionStore } from '../stores/PermissionStore';\nimport { RoleStore } from '../stores/RoleStore';\n\nimport { PermissionMap, RawPermissionMap, ValidateResult } from './PermissionMap';\n\n@Injectable()\nexport class Authorization {\n    constructor(private permissionStore: PermissionStore, private roleStore: RoleStore) {\n    }\n\n    genPermMap(rpm: RawPermissionMap) {\n        return new PermissionMap(rpm, this.permissionStore, this.roleStore);\n    }\n\n    resolve(map: PermissionMap): Observable {\n        return map.resolveAll();\n    }\n\n    resolveRaw(map: RawPermissionMap) {\n        return this.resolve(this.genPermMap(map));\n    }\n\n    onChanges() {\n        return merge(this.permissionStore.getChanges(), this.roleStore.getChanges());\n    }\n}\n\nexport function AUTHORIZATION_PROVIDER_FACTORY(parent: Authorization, permissionStore: PermissionStore, roleStore: RoleStore) {\n    return parent || new Authorization(permissionStore, roleStore);\n}\n\nexport const AUTHORIZATION_PROVIDER = {\n    // If there is already an Locale available, use that. Otherwise, provide a new one.\n    provide: Authorization,\n    deps: [[new Optional(), new SkipSelf(), Authorization], PermissionStore, RoleStore],\n    useFactory: AUTHORIZATION_PROVIDER_FACTORY,\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Dictionary.html":{"url":"interfaces/Dictionary.html","title":"interface - Dictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Dictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng2-permission/src/models/index.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [prop: string]:    T\n\n                    \n                \n                        \n                            \n                                Defined in projects/ng2-permission/src/models/index.ts:1\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface Dictionary {\n    [prop: string]: T\n}\n\nexport * from './Permission';\nexport * from './Role';\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Permission.html":{"url":"classes/Permission.html","title":"class - Permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng2-permission/src/models/Permission.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, validateFn: Validator)\n                    \n                \n                        \n                            \n                                Defined in projects/ng2-permission/src/models/Permission.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        validateFn\n                                                  \n                                                        \n                                                                    Validator\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/models/Permission.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport type Validator = (id: string) => Observable | Promise | boolean\n\nexport class Permission {\n    constructor(private name: string, private validateFn: Validator) {\n    }\n\n    validate() {\n        return this.validateFn(this.name);\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PermissionAnyOfDirective.html":{"url":"directives/PermissionAnyOfDirective.html","title":"directive - PermissionAnyOfDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  PermissionAnyOfDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng2-permission/src/directives/permissionAnyOf.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [permissionAnyOf]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                permissionAnyOf\n                            \n                            \n                                permissionAnyOfElse\n                            \n                            \n                                permissionAnyOfExternal\n                            \n                            \n                                permissionAnyOfThen\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(templateRef: TemplateRef, viewContainer: ViewContainerRef, authorizer: Authorization)\n                    \n                \n                        \n                            \n                                Defined in projects/ng2-permission/src/directives/permissionAnyOf.directive.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateRef\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainer\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizer\n                                                  \n                                                        \n                                                                    Authorization\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        permissionAnyOf\n                    \n                    \n                            \n                            Type:    []\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionAnyOf.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        permissionAnyOfElse\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionAnyOf.directive.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        permissionAnyOfExternal\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionAnyOf.directive.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        permissionAnyOfThen\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionAnyOf.directive.ts:24\n                            \n                        \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        permissionIf\n                    \n                \n\n\n                \n                    \n                        setpermissionIf(perm: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/ng2-permission/src/directives/permissionAnyOf.directive.ts:13\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            perm\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        permissionIfExternal\n                    \n                \n\n\n                \n                    \n                        setpermissionIfExternal(condition: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/ng2-permission/src/directives/permissionAnyOf.directive.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            condition\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        permissionIfThen\n                    \n                \n\n\n                \n                    \n                        setpermissionIfThen(templateRef: )\n                    \n                \n                            \n                                \n                                    Defined in projects/ng2-permission/src/directives/permissionAnyOf.directive.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            templateRef\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        permissionIfElse\n                    \n                \n\n\n                \n                    \n                        setpermissionIfElse(templateRef: )\n                    \n                \n                            \n                                \n                                    Defined in projects/ng2-permission/src/directives/permissionAnyOf.directive.ts:31\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            templateRef\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\nimport { Authorization } from '../Authorization/Authorization';\nimport { getRawMap } from '../utils';\n\nimport { PermissionIfContext, PermissionIfDirective } from './permissionIf.directive';\n\n@Directive({\n    selector: '[permissionAnyOf]',\n})\nexport class PermissionAnyOfDirective extends PermissionIfDirective {\n    @Input('permissionAnyOf')\n    set permissionIf(perm: string[]) {\n        this.rawMap = getRawMap({ anyOf: perm });\n    }\n\n    @Input('permissionAnyOfExternal')\n    set permissionIfExternal(condition: boolean) {\n        this.setExternalCondition(condition);\n        this.setCondition();\n    }\n\n    @Input('permissionAnyOfThen')\n    set permissionIfThen(templateRef: TemplateRef) {\n        this._thenTemplateRef = templateRef;\n        this._thenViewRef = null;  // clear previous view if any.\n        this.updateView();\n    }\n\n    @Input('permissionAnyOfElse')\n    set permissionIfElse(templateRef: TemplateRef) {\n        this._elseTemplateRef = templateRef;\n        this._elseViewRef = null;  // clear previous view if any.\n        this.updateView();\n    }\n\n    constructor(\n        templateRef: TemplateRef,\n        viewContainer: ViewContainerRef,\n        authorizer: Authorization,\n    ) {\n        super(templateRef, viewContainer, authorizer);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PermissionExceptDirective.html":{"url":"directives/PermissionExceptDirective.html","title":"directive - PermissionExceptDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  PermissionExceptDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng2-permission/src/directives/permissionExcept.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [permissionExcept]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                permissionExcept\n                            \n                            \n                                permissionExceptElse\n                            \n                            \n                                permissionExceptExternal\n                            \n                            \n                                permissionExceptThen\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(templateRef: TemplateRef, viewContainer: ViewContainerRef, authorizer: Authorization)\n                    \n                \n                        \n                            \n                                Defined in projects/ng2-permission/src/directives/permissionExcept.directive.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateRef\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainer\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizer\n                                                  \n                                                        \n                                                                    Authorization\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        permissionExcept\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionExcept.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        permissionExceptElse\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionExcept.directive.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        permissionExceptExternal\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionExcept.directive.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        permissionExceptThen\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionExcept.directive.ts:24\n                            \n                        \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        permissionIf\n                    \n                \n\n\n                \n                    \n                        setpermissionIf(perm: )\n                    \n                \n                            \n                                \n                                    Defined in projects/ng2-permission/src/directives/permissionExcept.directive.ts:13\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            perm\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        permissionIfExternal\n                    \n                \n\n\n                \n                    \n                        setpermissionIfExternal(condition: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/ng2-permission/src/directives/permissionExcept.directive.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            condition\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        permissionIfThen\n                    \n                \n\n\n                \n                    \n                        setpermissionIfThen(templateRef: )\n                    \n                \n                            \n                                \n                                    Defined in projects/ng2-permission/src/directives/permissionExcept.directive.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            templateRef\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        permissionIfElse\n                    \n                \n\n\n                \n                    \n                        setpermissionIfElse(templateRef: )\n                    \n                \n                            \n                                \n                                    Defined in projects/ng2-permission/src/directives/permissionExcept.directive.ts:31\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            templateRef\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\nimport { Authorization } from '../Authorization/Authorization';\nimport { getRawMap } from '../utils';\n\nimport { PermissionIfContext, PermissionIfDirective } from './permissionIf.directive';\n\n@Directive({\n    selector: '[permissionExcept]',\n})\nexport class PermissionExceptDirective extends PermissionIfDirective {\n    @Input('permissionExcept')\n    set permissionIf(perm: string | string[]) {\n        this.rawMap = getRawMap({ except: perm });\n    }\n\n    @Input('permissionExceptExternal')\n    set permissionIfExternal(condition: boolean) {\n        this.setExternalCondition(condition);\n        this.setCondition();\n    }\n\n    @Input('permissionExceptThen')\n    set permissionIfThen(templateRef: TemplateRef) {\n        this._thenTemplateRef = templateRef;\n        this._thenViewRef = null;  // clear previous view if any.\n        this.updateView();\n    }\n\n    @Input('permissionExceptElse')\n    set permissionIfElse(templateRef: TemplateRef) {\n        this._elseTemplateRef = templateRef;\n        this._elseViewRef = null;  // clear previous view if any.\n        this.updateView();\n    }\n\n    constructor(\n        templateRef: TemplateRef,\n        viewContainer: ViewContainerRef,\n        authorizer: Authorization,\n    ) {\n        super(templateRef, viewContainer, authorizer);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionGuard.html":{"url":"injectables/PermissionGuard.html","title":"injectable - PermissionGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  PermissionGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng2-permission/src/services/permission-guard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                permissionRejected$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                            \n                                checkPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authorize: Authorization, router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/ng2-permission/src/services/permission-guard.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorize\n                                                  \n                                                        \n                                                                    Authorization\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/services/permission-guard.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivateChild\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivateChild(route: ActivatedRouteSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/services/permission-guard.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkPermission\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckPermission(perm: string | RawPermissionMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/services/permission-guard.service.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        perm\n                                                        \n                                                                    string | RawPermissionMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissionRejected$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        permissionRejected$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng2-permission/src/services/permission-guard.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { map, switchMap, take } from 'rxjs/operators';\n\nimport { Authorization } from '../Authorization/Authorization';\nimport { PermissionMap, RawPermissionMap, wrapIntoObservable } from '../Authorization/PermissionMap';\nimport { getRawMap } from '../utils';\n\n@Injectable()\nexport class PermissionGuard implements CanActivate, CanActivateChild {\n    permissionRejected$: Subject = new Subject();\n\n    constructor(private authorize: Authorization, private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot): Observable | Promise | boolean {\n        const data: any = route.data;\n\n        if (!data.permission) {\n            return true;\n        }\n\n        return this.checkPermission(data.permission);\n    }\n\n    canActivateChild(route: ActivatedRouteSnapshot) {\n        return this.canActivate(route);\n    }\n\n    checkPermission(perm: string | RawPermissionMap) {\n        const permMap = this.authorize.genPermMap(getRawMap(perm));\n        return this.authorize.resolve(permMap)\n            .pipe(switchMap((result) => {\n                if (!result.valid && permMap.redirectTo) {\n                    this.permissionRejected$.next(permMap);\n                    return permMap.resolveRedirect(result.permissionName)\n                        .pipe(\n                            take(1),\n                            map(redirect => {\n                                this.router.navigate([redirect.path]);\n\n                                return false;\n                            }),\n                        );\n                }\n\n                return wrapIntoObservable(result.valid);\n            }));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PermissionIfContext.html":{"url":"classes/PermissionIfContext.html","title":"class - PermissionIfContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  PermissionIfContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng2-permission/src/directives/permissionIf.directive.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                $implicit\n                            \n                            \n                                    Public\n                                external\n                            \n                            \n                                    Public\n                                permissionIf\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            $implicit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        $implicit:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionIf.directive.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            external\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        external:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionIf.directive.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            permissionIf\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        permissionIf:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionIf.directive.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, EmbeddedViewRef, Input, OnChanges, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { Authorization } from '../Authorization/Authorization';\nimport { RawPermissionMap } from '../Authorization/PermissionMap';\nimport { getRawMap } from '../utils';\n\n// tslint:disable max-classes-per-file\nexport class PermissionIfContext {\n    public $implicit: boolean = null;\n    public permissionIf: boolean = null;\n    public external: boolean = null;\n}\n\n@Directive({\n    selector: '[permissionIf]',\n})\nexport class PermissionIfDirective implements OnInit, OnChanges {\n    protected rawMap: RawPermissionMap = {};\n    protected _context: PermissionIfContext = new PermissionIfContext();\n    protected _thenTemplateRef: TemplateRef | null = null;\n    protected _elseTemplateRef: TemplateRef | null = null;\n    protected _thenViewRef: EmbeddedViewRef | null = null;\n    protected _elseViewRef: EmbeddedViewRef | null = null;\n\n    @Input()\n    set permissionIf(perm: string | string[] | RawPermissionMap) {\n        this.rawMap = getRawMap(perm);\n    }\n\n    @Input()\n    set permissionIfExternal(condition: boolean) {\n        this.setExternalCondition(condition);\n        this.setCondition();\n    }\n\n    @Input()\n    set permissionIfThen(templateRef: TemplateRef) {\n        this._thenTemplateRef = templateRef;\n        this._thenViewRef = null;  // clear previous view if any.\n        this.updateView();\n    }\n\n    @Input()\n    set permissionIfElse(templateRef: TemplateRef) {\n        this._elseTemplateRef = templateRef;\n        this._elseViewRef = null;  // clear previous view if any.\n        this.updateView();\n    }\n\n    constructor(\n        templateRef: TemplateRef,\n        private viewContainer: ViewContainerRef,\n        private authorizer: Authorization,\n    ) {\n        this._thenTemplateRef = templateRef;\n        this.setExternalCondition(true);\n        this.setCondition(false);\n    }\n\n    ngOnInit() {\n        this.authorizer.onChanges()\n            .pipe(debounceTime(250))\n            .subscribe(() => {\n                this.check();\n            });\n    }\n\n    ngOnChanges() {\n        this.check();\n    }\n\n    check() {\n        this.authorizer.resolve(this.authorizer.genPermMap(this.rawMap))\n            .subscribe((result) => {\n                this.setCondition(result.valid);\n                this.updateView();\n            });\n    }\n\n    updateView() {\n        if (this._context.$implicit) {\n            if (!this._thenViewRef) {\n                this.viewContainer.clear();\n                this._elseViewRef = null;\n                if (this._thenTemplateRef) {\n                    this._thenViewRef =\n                        this.viewContainer.createEmbeddedView(this._thenTemplateRef, this._context);\n                }\n            }\n        } else {\n            if (!this._elseViewRef) {\n                this.viewContainer.clear();\n                this._thenViewRef = null;\n                if (this._elseTemplateRef) {\n                    this._elseViewRef =\n                        this.viewContainer.createEmbeddedView(this._elseTemplateRef, this._context);\n                }\n            }\n        }\n    }\n\n    protected setCondition(condition = true) {\n        this._context.$implicit = this._context.permissionIf = condition && this._context.external;\n    }\n\n    protected setExternalCondition(condition: boolean) {\n        this._context.external = condition;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PermissionIfDirective.html":{"url":"directives/PermissionIfDirective.html","title":"directive - PermissionIfDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  PermissionIfDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng2-permission/src/directives/permissionIf.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [permissionIf]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _context\n                            \n                            \n                                    Protected\n                                _elseTemplateRef\n                            \n                            \n                                    Protected\n                                _elseViewRef\n                            \n                            \n                                    Protected\n                                _thenTemplateRef\n                            \n                            \n                                    Protected\n                                _thenViewRef\n                            \n                            \n                                    Protected\n                                rawMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                setCondition\n                            \n                            \n                                    Protected\n                                setExternalCondition\n                            \n                            \n                                updateView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                permissionIf\n                            \n                            \n                                permissionIfElse\n                            \n                            \n                                permissionIfExternal\n                            \n                            \n                                permissionIfThen\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(templateRef: TemplateRef, viewContainer: ViewContainerRef, authorizer: Authorization)\n                    \n                \n                        \n                            \n                                Defined in projects/ng2-permission/src/directives/permissionIf.directive.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateRef\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainer\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizer\n                                                  \n                                                        \n                                                                    Authorization\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        permissionIf\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionIf.directive.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        permissionIfElse\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionIf.directive.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        permissionIfExternal\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionIf.directive.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        permissionIfThen\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionIf.directive.ts:38\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            check\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionIf.directive.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionIf.directive.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionIf.directive.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setCondition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setCondition(condition: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionIf.directive.ts:103\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        condition\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setExternalCondition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setExternalCondition(condition: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionIf.directive.ts:107\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        condition\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateView\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateView()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionIf.directive.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _context:     PermissionIfContext\n\n                    \n                \n                    \n                        \n                            Type :     PermissionIfContext\n\n                        \n                    \n                    \n                        \n                            Default value : new PermissionIfContext()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionIf.directive.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _elseTemplateRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _elseTemplateRef:     TemplateRef | null\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionIf.directive.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _elseViewRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _elseViewRef:     EmbeddedViewRef | null\n\n                    \n                \n                    \n                        \n                            Type :     EmbeddedViewRef | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionIf.directive.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _thenTemplateRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _thenTemplateRef:     TemplateRef | null\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionIf.directive.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _thenViewRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _thenViewRef:     EmbeddedViewRef | null\n\n                    \n                \n                    \n                        \n                            Type :     EmbeddedViewRef | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionIf.directive.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            rawMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rawMap:     RawPermissionMap\n\n                    \n                \n                    \n                        \n                            Type :     RawPermissionMap\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionIf.directive.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        permissionIf\n                    \n                \n\n\n                \n                    \n                        setpermissionIf(perm: )\n                    \n                \n                            \n                                \n                                    Defined in projects/ng2-permission/src/directives/permissionIf.directive.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            perm\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        permissionIfExternal\n                    \n                \n\n\n                \n                    \n                        setpermissionIfExternal(condition: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/ng2-permission/src/directives/permissionIf.directive.ts:32\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            condition\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        permissionIfThen\n                    \n                \n\n\n                \n                    \n                        setpermissionIfThen(templateRef: )\n                    \n                \n                            \n                                \n                                    Defined in projects/ng2-permission/src/directives/permissionIf.directive.ts:38\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            templateRef\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        permissionIfElse\n                    \n                \n\n\n                \n                    \n                        setpermissionIfElse(templateRef: )\n                    \n                \n                            \n                                \n                                    Defined in projects/ng2-permission/src/directives/permissionIf.directive.ts:45\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            templateRef\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, EmbeddedViewRef, Input, OnChanges, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { Authorization } from '../Authorization/Authorization';\nimport { RawPermissionMap } from '../Authorization/PermissionMap';\nimport { getRawMap } from '../utils';\n\n// tslint:disable max-classes-per-file\nexport class PermissionIfContext {\n    public $implicit: boolean = null;\n    public permissionIf: boolean = null;\n    public external: boolean = null;\n}\n\n@Directive({\n    selector: '[permissionIf]',\n})\nexport class PermissionIfDirective implements OnInit, OnChanges {\n    protected rawMap: RawPermissionMap = {};\n    protected _context: PermissionIfContext = new PermissionIfContext();\n    protected _thenTemplateRef: TemplateRef | null = null;\n    protected _elseTemplateRef: TemplateRef | null = null;\n    protected _thenViewRef: EmbeddedViewRef | null = null;\n    protected _elseViewRef: EmbeddedViewRef | null = null;\n\n    @Input()\n    set permissionIf(perm: string | string[] | RawPermissionMap) {\n        this.rawMap = getRawMap(perm);\n    }\n\n    @Input()\n    set permissionIfExternal(condition: boolean) {\n        this.setExternalCondition(condition);\n        this.setCondition();\n    }\n\n    @Input()\n    set permissionIfThen(templateRef: TemplateRef) {\n        this._thenTemplateRef = templateRef;\n        this._thenViewRef = null;  // clear previous view if any.\n        this.updateView();\n    }\n\n    @Input()\n    set permissionIfElse(templateRef: TemplateRef) {\n        this._elseTemplateRef = templateRef;\n        this._elseViewRef = null;  // clear previous view if any.\n        this.updateView();\n    }\n\n    constructor(\n        templateRef: TemplateRef,\n        private viewContainer: ViewContainerRef,\n        private authorizer: Authorization,\n    ) {\n        this._thenTemplateRef = templateRef;\n        this.setExternalCondition(true);\n        this.setCondition(false);\n    }\n\n    ngOnInit() {\n        this.authorizer.onChanges()\n            .pipe(debounceTime(250))\n            .subscribe(() => {\n                this.check();\n            });\n    }\n\n    ngOnChanges() {\n        this.check();\n    }\n\n    check() {\n        this.authorizer.resolve(this.authorizer.genPermMap(this.rawMap))\n            .subscribe((result) => {\n                this.setCondition(result.valid);\n                this.updateView();\n            });\n    }\n\n    updateView() {\n        if (this._context.$implicit) {\n            if (!this._thenViewRef) {\n                this.viewContainer.clear();\n                this._elseViewRef = null;\n                if (this._thenTemplateRef) {\n                    this._thenViewRef =\n                        this.viewContainer.createEmbeddedView(this._thenTemplateRef, this._context);\n                }\n            }\n        } else {\n            if (!this._elseViewRef) {\n                this.viewContainer.clear();\n                this._thenViewRef = null;\n                if (this._elseTemplateRef) {\n                    this._elseViewRef =\n                        this.viewContainer.createEmbeddedView(this._elseTemplateRef, this._context);\n                }\n            }\n        }\n    }\n\n    protected setCondition(condition = true) {\n        this._context.$implicit = this._context.permissionIf = condition && this._context.external;\n    }\n\n    protected setExternalCondition(condition: boolean) {\n        this._context.external = condition;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PermissionMap.html":{"url":"classes/PermissionMap.html","title":"class - PermissionMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  PermissionMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng2-permission/src/Authorization/PermissionMap.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                anyOf\n                            \n                            \n                                except\n                            \n                            \n                                only\n                            \n                            \n                                redirectTo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolveAll\n                            \n                            \n                                resolveAnyOfPrivilegeMap\n                            \n                            \n                                resolveExceptPrivilegeMap\n                            \n                            \n                                resolveOnlyPrivilegeMap\n                            \n                            \n                                resolvePrivilegesValidity\n                            \n                            \n                                resolveRedirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionMap: RawPermissionMap, permissionStore: PermissionStore, roleStore: RoleStore)\n                    \n                \n                        \n                            \n                                Defined in projects/ng2-permission/src/Authorization/PermissionMap.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionMap\n                                                  \n                                                        \n                                                                    RawPermissionMap\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionStore\n                                                  \n                                                        \n                                                                    PermissionStore\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleStore\n                                                  \n                                                        \n                                                                    RoleStore\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            anyOf\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        anyOf:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng2-permission/src/Authorization/PermissionMap.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            except\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        except:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng2-permission/src/Authorization/PermissionMap.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            only\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        only:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng2-permission/src/Authorization/PermissionMap.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirectTo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        redirectTo:     RedirectMap\n\n                    \n                \n                    \n                        \n                            Type :     RedirectMap\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng2-permission/src/Authorization/PermissionMap.ts:49\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolveAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolveAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/Authorization/PermissionMap.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolveAnyOfPrivilegeMap\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolveAnyOfPrivilegeMap()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/Authorization/PermissionMap.ts:158\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolveExceptPrivilegeMap\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolveExceptPrivilegeMap()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/Authorization/PermissionMap.ts:123\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolveOnlyPrivilegeMap\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolveOnlyPrivilegeMap()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/Authorization/PermissionMap.ts:142\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolvePrivilegesValidity\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolvePrivilegesValidity(privileges: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/Authorization/PermissionMap.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        privileges\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolveRedirect\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolveRedirect(rejectedPermissionName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/Authorization/PermissionMap.ts:100\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rejectedPermissionName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import each from 'lodash-es/each';\nimport isFunction from 'lodash-es/isFunction';\nimport isNil from 'lodash-es/isNil';\nimport isString from 'lodash-es/isString';\nimport { forkJoin, from, Observable, of, throwError } from 'rxjs';\nimport { isPromise } from 'rxjs/internal/util/isPromise';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { Dictionary } from '../models';\nimport { PermissionStore } from '../stores/PermissionStore';\nimport { RoleStore } from '../stores/RoleStore';\n\nexport interface RedirectRoute {\n    path: string\n\n    [prop: string]: any\n}\n\nexport type RedirectFunc = (rejectedPermissionName: string) => RedirectRoute\n\nexport type Redirection = RedirectRoute | RedirectFunc | string | {\n    [prop: string]: RedirectRoute | RedirectFunc | string;\n}\n\nexport interface RedirectMap {\n    default: RedirectFunc\n\n    [prop: string]: RedirectFunc\n}\n\nexport interface RawPermissionMap {\n    // aka allOf\n    only?: string[] | string\n    // aka not\n    except?: string[] | string\n    anyOf?: string[]\n    redirectTo?: any\n}\n\nexport interface ValidateResult {\n    valid: boolean;\n    permissionName: string | null;\n}\n\nexport class PermissionMap {\n    only: string[];\n    anyOf: string[];\n    except: string[];\n    redirectTo: RedirectMap;\n\n    constructor(\n        permissionMap: RawPermissionMap = {},\n        private permissionStore: PermissionStore,\n        private roleStore: RoleStore,\n    ) {\n        this.only = normalizeSetOperationProperty(permissionMap.only);\n        this.anyOf = normalizeSetOperationProperty(permissionMap.anyOf);\n        this.except = normalizeSetOperationProperty(permissionMap.except);\n        this.redirectTo = normalizeRedirectToProperty(permissionMap.redirectTo);\n    }\n\n    resolvePrivilegesValidity(privileges: string[]): Observable[] {\n        return privileges.map(privilegeName => {\n            if (this.roleStore.hasRoleDefinition(privilegeName)) {\n                const role = this.roleStore.getRoleDefinition(privilegeName);\n                return wrapIntoObservable(role.validate(this.permissionStore))\n                    .pipe(map(result => ({ valid: result, permissionName: privilegeName })));\n            }\n\n            if (this.permissionStore.hasPermissionDefinition(privilegeName)) {\n                const permission = this.permissionStore.getPermissionDefinition(privilegeName);\n                return wrapIntoObservable(permission.validate())\n                    .pipe(map(result => ({ valid: result, permissionName: privilegeName })));\n            }\n\n            return wrapIntoObservable(false)\n                .pipe(map(result => ({ valid: result, permissionName: privilegeName })));\n        });\n    }\n\n    resolveAll(): Observable {\n        return this.resolveExceptPrivilegeMap()\n            .pipe(switchMap(result => {\n                // resolve only privilege when except privilege not granted indeed\n                if (result.valid) {\n                    return this.resolveOnlyPrivilegeMap();\n                }\n\n                return of(result);\n            }), switchMap(result => {\n                // resolve anyOf privileges when only privileges are granted\n                if (result.valid) {\n                    return this.resolveAnyOfPrivilegeMap();\n                }\n\n                return of(result);\n            }));\n    }\n\n    resolveRedirect(rejectedPermissionName: string): Observable {\n        if (!this.redirectTo) {\n            return throwError(new Error('Empty redirect config.'));\n        }\n\n        const redirectFunc = this.redirectTo[rejectedPermissionName] || this.redirectTo.default;\n\n        return wrapIntoObservable(redirectFunc(rejectedPermissionName))\n            .pipe(map(function (result) {\n                if (isString(result)) {\n                    return {\n                        path: result,\n                    };\n                }\n\n                if (typeof result === 'object') {\n                    return result;\n                }\n\n                throw new Error('Invalid redirect config.');\n            }));\n    }\n\n    resolveExceptPrivilegeMap(): Observable {\n        if (!this.except.length) {\n            return of({ valid: true, permissionName: null });\n        }\n\n        const observableArr = this.resolvePrivilegesValidity(this.except);\n\n        return forkJoin(observableArr)\n            .pipe(map(function (result) {\n                // if user is not granted with any permission specified\n                if (result.every(x => !x.valid)) {\n                    return { valid: true, permissionName: null };\n                }\n\n                // find those permission\n                return { ...result.find(x => x.valid), valid: false };\n            }));\n    }\n\n    resolveOnlyPrivilegeMap(): Observable {\n        if (!this.only.length) {\n            return of({ valid: true, permissionName: null });\n        }\n\n        const observableArr = this.resolvePrivilegesValidity(this.only);\n\n        return forkJoin(observableArr)\n            .pipe(map(function (result) {\n                if (result.every(x => x.valid)) {\n                    return { valid: true, permissionName: null };\n                }\n                return { ...result.find(x => !x.valid), valid: false };\n            }));\n    }\n\n    resolveAnyOfPrivilegeMap(): Observable {\n        if (!this.anyOf.length) {\n            return of({ valid: true, permissionName: null });\n        }\n\n        const observableArr = this.resolvePrivilegesValidity(this.anyOf);\n\n        return forkJoin(observableArr)\n            .pipe(map(function (result) {\n                if (result.some(x => x.valid)) {\n                    return { valid: true, permissionName: null };\n                }\n                return { valid: false, permissionName: null };\n            }));\n    }\n}\n\nfunction isObservable(obj: any | Observable): obj is Observable {\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * wrap various source into observable\n */\nexport function wrapIntoObservable(value: T | Promise | Observable): Observable {\n    if (isObservable(value)) {\n        return value;\n    }\n    if (isPromise(value)) {\n        return from(value);\n    }\n    return of(value);\n}\n\nfunction isObjectSingleRedirectionRule(redirectTo: RedirectRoute) {\n    return !isNil(redirectTo.path);\n}\n\nfunction normalizeSetOperationProperty(property: string | string[]) {\n    if (typeof property === 'string') {\n        return [property];\n    }\n\n    if (Array.isArray(property)) {\n        return property;\n    }\n\n    return [];\n}\n\nfunction normalizeRedirectToProperty(redirectTo: Redirection) {\n    if (isNil(redirectTo)) {\n        return null;\n    }\n\n    if (typeof redirectTo === 'string') {\n        return normalizeStringRedirectionRule(redirectTo);\n    }\n\n    if (typeof redirectTo === 'object') {\n        if (isObjectSingleRedirectionRule(redirectTo)) {\n            return normalizeObjectSingleRedirectionRule(redirectTo);\n        }\n\n        return normalizeObjectMultipleRedirectionRule(redirectTo);\n    }\n\n    if (isFunction(redirectTo)) {\n        return normalizeFunctionRedirectionRule(redirectTo);\n    }\n\n    throw new TypeError('Property \"redirectTo\" must be String, Function, Array or Object');\n}\n\nfunction normalizeStringRedirectionRule(redirectTo: string): RedirectMap {\n    return {\n        default: () => ({\n            path: redirectTo,\n        }),\n    };\n}\n\nfunction normalizeObjectSingleRedirectionRule(redirectTo: RedirectRoute): RedirectMap {\n    return {\n        default: () => redirectTo,\n    };\n}\n\nfunction normalizeObjectMultipleRedirectionRule(redirectTo: Dictionary) {\n    const redirectionMap: RedirectMap = {};\n\n    each(redirectTo, (redirection: Redirection, permission: string) => {\n        if (typeof redirection === 'function') {\n            redirectionMap[permission] = redirection;\n        }\n\n        if (typeof redirection === 'object') {\n            redirectionMap[permission] = () => redirection;\n        }\n\n        if (typeof redirection === 'string') {\n            redirectionMap[permission] = () => ({\n                path: redirection,\n            });\n        }\n    });\n\n    return redirectionMap;\n}\n\nfunction normalizeFunctionRedirectionRule(redirectTo: RedirectFunc): RedirectMap {\n    return {\n        default: redirectTo,\n    };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionModule.html":{"url":"modules/PermissionModule.html","title":"module - PermissionModule","body":"\n                   \n\n\n\n\n  Modules\n  PermissionModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionModule\n\n\n\ncluster_PermissionModule_declarations\n\n\n\ncluster_PermissionModule_exports\n\n\n\ncluster_PermissionModule_providers\n\n\n\n\nPermissionAnyOfDirective\n\nPermissionAnyOfDirective\n\n\n\nPermissionModule\n\nPermissionModule\n\nPermissionModule -->\n\nPermissionAnyOfDirective->PermissionModule\n\n\n\n\n\nPermissionExceptDirective\n\nPermissionExceptDirective\n\nPermissionModule -->\n\nPermissionExceptDirective->PermissionModule\n\n\n\n\n\nPermissionIfDirective\n\nPermissionIfDirective\n\nPermissionModule -->\n\nPermissionIfDirective->PermissionModule\n\n\n\n\n\nPermissionOnlyDirective\n\nPermissionOnlyDirective\n\nPermissionModule -->\n\nPermissionOnlyDirective->PermissionModule\n\n\n\n\n\nPermissionPipe\n\nPermissionPipe\n\nPermissionModule -->\n\nPermissionPipe->PermissionModule\n\n\n\n\n\nPermissionAnyOfDirective \n\nPermissionAnyOfDirective \n\nPermissionAnyOfDirective  -->\n\nPermissionModule->PermissionAnyOfDirective \n\n\n\n\n\nPermissionExceptDirective \n\nPermissionExceptDirective \n\nPermissionExceptDirective  -->\n\nPermissionModule->PermissionExceptDirective \n\n\n\n\n\nPermissionIfDirective \n\nPermissionIfDirective \n\nPermissionIfDirective  -->\n\nPermissionModule->PermissionIfDirective \n\n\n\n\n\nPermissionOnlyDirective \n\nPermissionOnlyDirective \n\nPermissionOnlyDirective  -->\n\nPermissionModule->PermissionOnlyDirective \n\n\n\n\n\nPermissionPipe \n\nPermissionPipe \n\nPermissionPipe  -->\n\nPermissionModule->PermissionPipe \n\n\n\n\n\nPermissionGuard\n\nPermissionGuard\n\nPermissionModule -->\n\nPermissionGuard->PermissionModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ng2-permission/src/permission.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                PermissionAnyOfDirective\n                            \n                            \n                                PermissionExceptDirective\n                            \n                            \n                                PermissionIfDirective\n                            \n                            \n                                PermissionOnlyDirective\n                            \n                            \n                                PermissionPipe\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     PermissionGuard\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    PermissionAnyOfDirective\n                            \n                            \n                                    PermissionExceptDirective\n                            \n                            \n                                    PermissionIfDirective\n                            \n                            \n                                    PermissionOnlyDirective\n                            \n                            \n                                    PermissionPipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { AUTHORIZATION_PROVIDER } from './Authorization/Authorization';\nimport { PermissionAnyOfDirective } from './directives/permissionAnyOf.directive';\nimport { PermissionExceptDirective } from './directives/permissionExcept.directive';\nimport { PermissionIfDirective } from './directives/permissionIf.directive';\nimport { PermissionOnlyDirective } from './directives/permissionOnly.directive';\nimport { PermissionPipe } from './pipes/permission.pipe';\nimport { PermissionGuard } from './services/permission-guard.service';\nimport { PERMISSIONSTORE_PROVIDER } from './stores/PermissionStore';\nimport { ROLESTORE_PROVIDER } from './stores/RoleStore';\n\n@NgModule({\n    imports: [],\n    declarations: [\n        PermissionIfDirective,\n        PermissionOnlyDirective,\n        PermissionExceptDirective,\n        PermissionAnyOfDirective,\n        PermissionPipe,\n    ],\n    providers: [\n        PermissionGuard,\n        AUTHORIZATION_PROVIDER,\n        PERMISSIONSTORE_PROVIDER,\n        ROLESTORE_PROVIDER,\n    ],\n    exports: [\n        PermissionIfDirective,\n        PermissionOnlyDirective,\n        PermissionExceptDirective,\n        PermissionAnyOfDirective,\n        PermissionPipe,\n    ],\n})\nexport class PermissionModule {\n    /**\n     * @deprecated use PermissionModule directly\n     */\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: PermissionModule,\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PermissionOnlyDirective.html":{"url":"directives/PermissionOnlyDirective.html","title":"directive - PermissionOnlyDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  PermissionOnlyDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng2-permission/src/directives/permissionOnly.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [permissionOnly]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                permissionOnly\n                            \n                            \n                                permissionOnlyElse\n                            \n                            \n                                permissionOnlyExternal\n                            \n                            \n                                permissionOnlyThen\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(templateRef: TemplateRef, viewContainer: ViewContainerRef, authorizer: Authorization)\n                    \n                \n                        \n                            \n                                Defined in projects/ng2-permission/src/directives/permissionOnly.directive.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateRef\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainer\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizer\n                                                  \n                                                        \n                                                                    Authorization\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        permissionOnly\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionOnly.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        permissionOnlyElse\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionOnly.directive.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        permissionOnlyExternal\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionOnly.directive.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        permissionOnlyThen\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in projects/ng2-permission/src/directives/permissionOnly.directive.ts:24\n                            \n                        \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        permissionIf\n                    \n                \n\n\n                \n                    \n                        setpermissionIf(perm: )\n                    \n                \n                            \n                                \n                                    Defined in projects/ng2-permission/src/directives/permissionOnly.directive.ts:13\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            perm\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        permissionIfExternal\n                    \n                \n\n\n                \n                    \n                        setpermissionIfExternal(condition: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/ng2-permission/src/directives/permissionOnly.directive.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            condition\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        permissionIfThen\n                    \n                \n\n\n                \n                    \n                        setpermissionIfThen(templateRef: )\n                    \n                \n                            \n                                \n                                    Defined in projects/ng2-permission/src/directives/permissionOnly.directive.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            templateRef\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        permissionIfElse\n                    \n                \n\n\n                \n                    \n                        setpermissionIfElse(templateRef: )\n                    \n                \n                            \n                                \n                                    Defined in projects/ng2-permission/src/directives/permissionOnly.directive.ts:31\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            templateRef\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\nimport { Authorization } from '../Authorization/Authorization';\nimport { getRawMap } from '../utils';\n\nimport { PermissionIfContext, PermissionIfDirective } from './permissionIf.directive';\n\n@Directive({\n    selector: '[permissionOnly]',\n})\nexport class PermissionOnlyDirective extends PermissionIfDirective {\n    @Input('permissionOnly')\n    set permissionIf(perm: string | string[]) {\n        this.rawMap = getRawMap({ only: perm });\n    }\n\n    @Input('permissionOnlyExternal')\n    set permissionIfExternal(condition: boolean) {\n        this.setExternalCondition(condition);\n        this.setCondition();\n    }\n\n    @Input('permissionOnlyThen')\n    set permissionIfThen(templateRef: TemplateRef) {\n        this._thenTemplateRef = templateRef;\n        this._thenViewRef = null;  // clear previous view if any.\n        this.updateView();\n    }\n\n    @Input('permissionOnlyElse')\n    set permissionIfElse(templateRef: TemplateRef) {\n        this._elseTemplateRef = templateRef;\n        this._elseViewRef = null;  // clear previous view if any.\n        this.updateView();\n    }\n\n    constructor(\n        templateRef: TemplateRef,\n        viewContainer: ViewContainerRef,\n        authorizer: Authorization,\n    ) {\n        super(templateRef, viewContainer, authorizer);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PermissionPipe.html":{"url":"pipes/PermissionPipe.html","title":"pipe - PermissionPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PermissionPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ng2-permission/src/pipes/permission.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        permission\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            checkPermission\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkPermission(value: string | RawPermissionMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/pipes/permission.pipe.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string | RawPermissionMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/pipes/permission.pipe.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string | RawPermissionMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/pipes/permission.pipe.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string | RawPermissionMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lastInput\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastInput:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng2-permission/src/pipes/permission.pipe.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            permission$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        permission$:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng2-permission/src/pipes/permission.pipe.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            permissionChangesSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        permissionChangesSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng2-permission/src/pipes/permission.pipe.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { Authorization } from '../Authorization/Authorization';\nimport { RawPermissionMap } from '../Authorization/PermissionMap';\nimport { getRawMap } from '../utils';\n\n@Pipe({\n    name: 'permission',\n    pure: false,\n})\nexport class PermissionPipe implements OnDestroy, PipeTransform {\n    private permission$ = new BehaviorSubject(false);\n    private lastInput: any;\n    private permissionChangesSub: Subscription;\n\n    constructor(private authorizer: Authorization) {\n        this.permissionChangesSub = this.authorizer.onChanges()\n            .subscribe(() => {\n                if (this.lastInput) {\n                    this.checkPermission(this.lastInput);\n                }\n            });\n    }\n\n    ngOnDestroy(): void {\n        if (this.permission$) {\n            this.permission$.unsubscribe();\n        }\n        this.permissionChangesSub.unsubscribe();\n    }\n\n    transform(value: string | RawPermissionMap): any {\n        if (value !== this.lastInput) {\n            this.checkPermission(value);\n            this.lastInput = value;\n        }\n\n        return this.permission$;\n    }\n\n    private checkPermission(value: string | RawPermissionMap) {\n        this.authorizer.resolveRaw({ ...getRawMap(value), redirectTo: null })\n            .pipe(take(1))\n            .subscribe((result) => {\n                this.permission$.next(result.valid);\n            });\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PermissionStore.html":{"url":"classes/PermissionStore.html","title":"class - PermissionStore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  PermissionStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng2-permission/src/stores/PermissionStore.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                eventer$\n                            \n                            \n                                    Private\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearStore\n                            \n                            \n                                definePermission\n                            \n                            \n                                definePermissions\n                            \n                            \n                                getChanges\n                            \n                            \n                                getPermissionDefinition\n                            \n                            \n                                getStore\n                            \n                            \n                                hasPermissionDefinition\n                            \n                            \n                                removePermissionDefinition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            eventer$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eventer$:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng2-permission/src/stores/PermissionStore.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            store\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        store:     Dictionary\n\n                    \n                \n                    \n                        \n                            Type :     Dictionary\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng2-permission/src/stores/PermissionStore.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearStore\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearStore()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/stores/PermissionStore.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            definePermission\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefinePermission(permissionName: string, validateFn: Validator)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/stores/PermissionStore.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        validateFn\n                                                        \n                                                                    Validator\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            definePermissions\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefinePermissions(permissionNames: string[], validateFn: Validator)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/stores/PermissionStore.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionNames\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        validateFn\n                                                        \n                                                                    Validator\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/stores/PermissionStore.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPermissionDefinition\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPermissionDefinition(permissionName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/stores/PermissionStore.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStore\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStore()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/stores/PermissionStore.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasPermissionDefinition\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasPermissionDefinition(permissionName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/stores/PermissionStore.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removePermissionDefinition\n                            \n                            \n                        \n                    \n                \n                \n                    \nremovePermissionDefinition(permissionName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/stores/PermissionStore.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Optional, SkipSelf } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { Dictionary, Permission, Validator } from '../models';\n\nexport class PermissionStore {\n    private store: Dictionary = {};\n    private eventer$ = new Subject();\n\n    definePermission(permissionName: string, validateFn: Validator) {\n        this.store[permissionName] = new Permission(permissionName, validateFn);\n        this.eventer$.next();\n    }\n\n    definePermissions(permissionNames: string[], validateFn: Validator) {\n        permissionNames.forEach(name => this.definePermission(name, validateFn));\n    }\n\n    removePermissionDefinition(permissionName: string) {\n        this.store[permissionName] = undefined;\n        this.eventer$.next();\n    }\n\n    hasPermissionDefinition(permissionName: string) {\n        return !!this.store[permissionName];\n    }\n\n    getPermissionDefinition(permissionName: string) {\n        return this.store[permissionName];\n    }\n\n    getStore() {\n        return this.store;\n    }\n\n    clearStore() {\n        this.store = {};\n        this.eventer$.next();\n    }\n\n    getChanges(): Observable {\n        return this.eventer$.asObservable();\n    }\n}\n\nexport function PERMISSIONSTORE_PROVIDER_FACTORY(parent: PermissionStore) {\n    return parent || new PermissionStore();\n}\n\nexport const PERMISSIONSTORE_PROVIDER = {\n    // If there is already an Locale available, use that. Otherwise, provide a new one.\n    provide: PermissionStore,\n    deps: [[new Optional(), new SkipSelf(), PermissionStore]],\n    useFactory: PERMISSIONSTORE_PROVIDER_FACTORY,\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RawPermissionMap.html":{"url":"interfaces/RawPermissionMap.html","title":"interface - RawPermissionMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RawPermissionMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng2-permission/src/Authorization/PermissionMap.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        anyOf\n                                \n                                \n                                            Optional\n                                        except\n                                \n                                \n                                            Optional\n                                        only\n                                \n                                \n                                            Optional\n                                        redirectTo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anyOf\n                                    \n                                \n                                \n                                    \n                                        anyOf:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        except\n                                    \n                                \n                                \n                                    \n                                        except:     string[] | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        only\n                                    \n                                \n                                \n                                    \n                                        only:     string[] | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redirectTo\n                                    \n                                \n                                \n                                    \n                                        redirectTo:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import each from 'lodash-es/each';\nimport isFunction from 'lodash-es/isFunction';\nimport isNil from 'lodash-es/isNil';\nimport isString from 'lodash-es/isString';\nimport { forkJoin, from, Observable, of, throwError } from 'rxjs';\nimport { isPromise } from 'rxjs/internal/util/isPromise';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { Dictionary } from '../models';\nimport { PermissionStore } from '../stores/PermissionStore';\nimport { RoleStore } from '../stores/RoleStore';\n\nexport interface RedirectRoute {\n    path: string\n\n    [prop: string]: any\n}\n\nexport type RedirectFunc = (rejectedPermissionName: string) => RedirectRoute\n\nexport type Redirection = RedirectRoute | RedirectFunc | string | {\n    [prop: string]: RedirectRoute | RedirectFunc | string;\n}\n\nexport interface RedirectMap {\n    default: RedirectFunc\n\n    [prop: string]: RedirectFunc\n}\n\nexport interface RawPermissionMap {\n    // aka allOf\n    only?: string[] | string\n    // aka not\n    except?: string[] | string\n    anyOf?: string[]\n    redirectTo?: any\n}\n\nexport interface ValidateResult {\n    valid: boolean;\n    permissionName: string | null;\n}\n\nexport class PermissionMap {\n    only: string[];\n    anyOf: string[];\n    except: string[];\n    redirectTo: RedirectMap;\n\n    constructor(\n        permissionMap: RawPermissionMap = {},\n        private permissionStore: PermissionStore,\n        private roleStore: RoleStore,\n    ) {\n        this.only = normalizeSetOperationProperty(permissionMap.only);\n        this.anyOf = normalizeSetOperationProperty(permissionMap.anyOf);\n        this.except = normalizeSetOperationProperty(permissionMap.except);\n        this.redirectTo = normalizeRedirectToProperty(permissionMap.redirectTo);\n    }\n\n    resolvePrivilegesValidity(privileges: string[]): Observable[] {\n        return privileges.map(privilegeName => {\n            if (this.roleStore.hasRoleDefinition(privilegeName)) {\n                const role = this.roleStore.getRoleDefinition(privilegeName);\n                return wrapIntoObservable(role.validate(this.permissionStore))\n                    .pipe(map(result => ({ valid: result, permissionName: privilegeName })));\n            }\n\n            if (this.permissionStore.hasPermissionDefinition(privilegeName)) {\n                const permission = this.permissionStore.getPermissionDefinition(privilegeName);\n                return wrapIntoObservable(permission.validate())\n                    .pipe(map(result => ({ valid: result, permissionName: privilegeName })));\n            }\n\n            return wrapIntoObservable(false)\n                .pipe(map(result => ({ valid: result, permissionName: privilegeName })));\n        });\n    }\n\n    resolveAll(): Observable {\n        return this.resolveExceptPrivilegeMap()\n            .pipe(switchMap(result => {\n                // resolve only privilege when except privilege not granted indeed\n                if (result.valid) {\n                    return this.resolveOnlyPrivilegeMap();\n                }\n\n                return of(result);\n            }), switchMap(result => {\n                // resolve anyOf privileges when only privileges are granted\n                if (result.valid) {\n                    return this.resolveAnyOfPrivilegeMap();\n                }\n\n                return of(result);\n            }));\n    }\n\n    resolveRedirect(rejectedPermissionName: string): Observable {\n        if (!this.redirectTo) {\n            return throwError(new Error('Empty redirect config.'));\n        }\n\n        const redirectFunc = this.redirectTo[rejectedPermissionName] || this.redirectTo.default;\n\n        return wrapIntoObservable(redirectFunc(rejectedPermissionName))\n            .pipe(map(function (result) {\n                if (isString(result)) {\n                    return {\n                        path: result,\n                    };\n                }\n\n                if (typeof result === 'object') {\n                    return result;\n                }\n\n                throw new Error('Invalid redirect config.');\n            }));\n    }\n\n    resolveExceptPrivilegeMap(): Observable {\n        if (!this.except.length) {\n            return of({ valid: true, permissionName: null });\n        }\n\n        const observableArr = this.resolvePrivilegesValidity(this.except);\n\n        return forkJoin(observableArr)\n            .pipe(map(function (result) {\n                // if user is not granted with any permission specified\n                if (result.every(x => !x.valid)) {\n                    return { valid: true, permissionName: null };\n                }\n\n                // find those permission\n                return { ...result.find(x => x.valid), valid: false };\n            }));\n    }\n\n    resolveOnlyPrivilegeMap(): Observable {\n        if (!this.only.length) {\n            return of({ valid: true, permissionName: null });\n        }\n\n        const observableArr = this.resolvePrivilegesValidity(this.only);\n\n        return forkJoin(observableArr)\n            .pipe(map(function (result) {\n                if (result.every(x => x.valid)) {\n                    return { valid: true, permissionName: null };\n                }\n                return { ...result.find(x => !x.valid), valid: false };\n            }));\n    }\n\n    resolveAnyOfPrivilegeMap(): Observable {\n        if (!this.anyOf.length) {\n            return of({ valid: true, permissionName: null });\n        }\n\n        const observableArr = this.resolvePrivilegesValidity(this.anyOf);\n\n        return forkJoin(observableArr)\n            .pipe(map(function (result) {\n                if (result.some(x => x.valid)) {\n                    return { valid: true, permissionName: null };\n                }\n                return { valid: false, permissionName: null };\n            }));\n    }\n}\n\nfunction isObservable(obj: any | Observable): obj is Observable {\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * wrap various source into observable\n */\nexport function wrapIntoObservable(value: T | Promise | Observable): Observable {\n    if (isObservable(value)) {\n        return value;\n    }\n    if (isPromise(value)) {\n        return from(value);\n    }\n    return of(value);\n}\n\nfunction isObjectSingleRedirectionRule(redirectTo: RedirectRoute) {\n    return !isNil(redirectTo.path);\n}\n\nfunction normalizeSetOperationProperty(property: string | string[]) {\n    if (typeof property === 'string') {\n        return [property];\n    }\n\n    if (Array.isArray(property)) {\n        return property;\n    }\n\n    return [];\n}\n\nfunction normalizeRedirectToProperty(redirectTo: Redirection) {\n    if (isNil(redirectTo)) {\n        return null;\n    }\n\n    if (typeof redirectTo === 'string') {\n        return normalizeStringRedirectionRule(redirectTo);\n    }\n\n    if (typeof redirectTo === 'object') {\n        if (isObjectSingleRedirectionRule(redirectTo)) {\n            return normalizeObjectSingleRedirectionRule(redirectTo);\n        }\n\n        return normalizeObjectMultipleRedirectionRule(redirectTo);\n    }\n\n    if (isFunction(redirectTo)) {\n        return normalizeFunctionRedirectionRule(redirectTo);\n    }\n\n    throw new TypeError('Property \"redirectTo\" must be String, Function, Array or Object');\n}\n\nfunction normalizeStringRedirectionRule(redirectTo: string): RedirectMap {\n    return {\n        default: () => ({\n            path: redirectTo,\n        }),\n    };\n}\n\nfunction normalizeObjectSingleRedirectionRule(redirectTo: RedirectRoute): RedirectMap {\n    return {\n        default: () => redirectTo,\n    };\n}\n\nfunction normalizeObjectMultipleRedirectionRule(redirectTo: Dictionary) {\n    const redirectionMap: RedirectMap = {};\n\n    each(redirectTo, (redirection: Redirection, permission: string) => {\n        if (typeof redirection === 'function') {\n            redirectionMap[permission] = redirection;\n        }\n\n        if (typeof redirection === 'object') {\n            redirectionMap[permission] = () => redirection;\n        }\n\n        if (typeof redirection === 'string') {\n            redirectionMap[permission] = () => ({\n                path: redirection,\n            });\n        }\n    });\n\n    return redirectionMap;\n}\n\nfunction normalizeFunctionRedirectionRule(redirectTo: RedirectFunc): RedirectMap {\n    return {\n        default: redirectTo,\n    };\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RedirectMap.html":{"url":"interfaces/RedirectMap.html","title":"interface - RedirectMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RedirectMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng2-permission/src/Authorization/PermissionMap.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        default\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [prop: string]:    RedirectFunc\n\n                    \n                \n                        \n                            \n                                Defined in projects/ng2-permission/src/Authorization/PermissionMap.ts:26\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                    \n                                \n                                \n                                    \n                                        default:     RedirectFunc\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RedirectFunc\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import each from 'lodash-es/each';\nimport isFunction from 'lodash-es/isFunction';\nimport isNil from 'lodash-es/isNil';\nimport isString from 'lodash-es/isString';\nimport { forkJoin, from, Observable, of, throwError } from 'rxjs';\nimport { isPromise } from 'rxjs/internal/util/isPromise';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { Dictionary } from '../models';\nimport { PermissionStore } from '../stores/PermissionStore';\nimport { RoleStore } from '../stores/RoleStore';\n\nexport interface RedirectRoute {\n    path: string\n\n    [prop: string]: any\n}\n\nexport type RedirectFunc = (rejectedPermissionName: string) => RedirectRoute\n\nexport type Redirection = RedirectRoute | RedirectFunc | string | {\n    [prop: string]: RedirectRoute | RedirectFunc | string;\n}\n\nexport interface RedirectMap {\n    default: RedirectFunc\n\n    [prop: string]: RedirectFunc\n}\n\nexport interface RawPermissionMap {\n    // aka allOf\n    only?: string[] | string\n    // aka not\n    except?: string[] | string\n    anyOf?: string[]\n    redirectTo?: any\n}\n\nexport interface ValidateResult {\n    valid: boolean;\n    permissionName: string | null;\n}\n\nexport class PermissionMap {\n    only: string[];\n    anyOf: string[];\n    except: string[];\n    redirectTo: RedirectMap;\n\n    constructor(\n        permissionMap: RawPermissionMap = {},\n        private permissionStore: PermissionStore,\n        private roleStore: RoleStore,\n    ) {\n        this.only = normalizeSetOperationProperty(permissionMap.only);\n        this.anyOf = normalizeSetOperationProperty(permissionMap.anyOf);\n        this.except = normalizeSetOperationProperty(permissionMap.except);\n        this.redirectTo = normalizeRedirectToProperty(permissionMap.redirectTo);\n    }\n\n    resolvePrivilegesValidity(privileges: string[]): Observable[] {\n        return privileges.map(privilegeName => {\n            if (this.roleStore.hasRoleDefinition(privilegeName)) {\n                const role = this.roleStore.getRoleDefinition(privilegeName);\n                return wrapIntoObservable(role.validate(this.permissionStore))\n                    .pipe(map(result => ({ valid: result, permissionName: privilegeName })));\n            }\n\n            if (this.permissionStore.hasPermissionDefinition(privilegeName)) {\n                const permission = this.permissionStore.getPermissionDefinition(privilegeName);\n                return wrapIntoObservable(permission.validate())\n                    .pipe(map(result => ({ valid: result, permissionName: privilegeName })));\n            }\n\n            return wrapIntoObservable(false)\n                .pipe(map(result => ({ valid: result, permissionName: privilegeName })));\n        });\n    }\n\n    resolveAll(): Observable {\n        return this.resolveExceptPrivilegeMap()\n            .pipe(switchMap(result => {\n                // resolve only privilege when except privilege not granted indeed\n                if (result.valid) {\n                    return this.resolveOnlyPrivilegeMap();\n                }\n\n                return of(result);\n            }), switchMap(result => {\n                // resolve anyOf privileges when only privileges are granted\n                if (result.valid) {\n                    return this.resolveAnyOfPrivilegeMap();\n                }\n\n                return of(result);\n            }));\n    }\n\n    resolveRedirect(rejectedPermissionName: string): Observable {\n        if (!this.redirectTo) {\n            return throwError(new Error('Empty redirect config.'));\n        }\n\n        const redirectFunc = this.redirectTo[rejectedPermissionName] || this.redirectTo.default;\n\n        return wrapIntoObservable(redirectFunc(rejectedPermissionName))\n            .pipe(map(function (result) {\n                if (isString(result)) {\n                    return {\n                        path: result,\n                    };\n                }\n\n                if (typeof result === 'object') {\n                    return result;\n                }\n\n                throw new Error('Invalid redirect config.');\n            }));\n    }\n\n    resolveExceptPrivilegeMap(): Observable {\n        if (!this.except.length) {\n            return of({ valid: true, permissionName: null });\n        }\n\n        const observableArr = this.resolvePrivilegesValidity(this.except);\n\n        return forkJoin(observableArr)\n            .pipe(map(function (result) {\n                // if user is not granted with any permission specified\n                if (result.every(x => !x.valid)) {\n                    return { valid: true, permissionName: null };\n                }\n\n                // find those permission\n                return { ...result.find(x => x.valid), valid: false };\n            }));\n    }\n\n    resolveOnlyPrivilegeMap(): Observable {\n        if (!this.only.length) {\n            return of({ valid: true, permissionName: null });\n        }\n\n        const observableArr = this.resolvePrivilegesValidity(this.only);\n\n        return forkJoin(observableArr)\n            .pipe(map(function (result) {\n                if (result.every(x => x.valid)) {\n                    return { valid: true, permissionName: null };\n                }\n                return { ...result.find(x => !x.valid), valid: false };\n            }));\n    }\n\n    resolveAnyOfPrivilegeMap(): Observable {\n        if (!this.anyOf.length) {\n            return of({ valid: true, permissionName: null });\n        }\n\n        const observableArr = this.resolvePrivilegesValidity(this.anyOf);\n\n        return forkJoin(observableArr)\n            .pipe(map(function (result) {\n                if (result.some(x => x.valid)) {\n                    return { valid: true, permissionName: null };\n                }\n                return { valid: false, permissionName: null };\n            }));\n    }\n}\n\nfunction isObservable(obj: any | Observable): obj is Observable {\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * wrap various source into observable\n */\nexport function wrapIntoObservable(value: T | Promise | Observable): Observable {\n    if (isObservable(value)) {\n        return value;\n    }\n    if (isPromise(value)) {\n        return from(value);\n    }\n    return of(value);\n}\n\nfunction isObjectSingleRedirectionRule(redirectTo: RedirectRoute) {\n    return !isNil(redirectTo.path);\n}\n\nfunction normalizeSetOperationProperty(property: string | string[]) {\n    if (typeof property === 'string') {\n        return [property];\n    }\n\n    if (Array.isArray(property)) {\n        return property;\n    }\n\n    return [];\n}\n\nfunction normalizeRedirectToProperty(redirectTo: Redirection) {\n    if (isNil(redirectTo)) {\n        return null;\n    }\n\n    if (typeof redirectTo === 'string') {\n        return normalizeStringRedirectionRule(redirectTo);\n    }\n\n    if (typeof redirectTo === 'object') {\n        if (isObjectSingleRedirectionRule(redirectTo)) {\n            return normalizeObjectSingleRedirectionRule(redirectTo);\n        }\n\n        return normalizeObjectMultipleRedirectionRule(redirectTo);\n    }\n\n    if (isFunction(redirectTo)) {\n        return normalizeFunctionRedirectionRule(redirectTo);\n    }\n\n    throw new TypeError('Property \"redirectTo\" must be String, Function, Array or Object');\n}\n\nfunction normalizeStringRedirectionRule(redirectTo: string): RedirectMap {\n    return {\n        default: () => ({\n            path: redirectTo,\n        }),\n    };\n}\n\nfunction normalizeObjectSingleRedirectionRule(redirectTo: RedirectRoute): RedirectMap {\n    return {\n        default: () => redirectTo,\n    };\n}\n\nfunction normalizeObjectMultipleRedirectionRule(redirectTo: Dictionary) {\n    const redirectionMap: RedirectMap = {};\n\n    each(redirectTo, (redirection: Redirection, permission: string) => {\n        if (typeof redirection === 'function') {\n            redirectionMap[permission] = redirection;\n        }\n\n        if (typeof redirection === 'object') {\n            redirectionMap[permission] = () => redirection;\n        }\n\n        if (typeof redirection === 'string') {\n            redirectionMap[permission] = () => ({\n                path: redirection,\n            });\n        }\n    });\n\n    return redirectionMap;\n}\n\nfunction normalizeFunctionRedirectionRule(redirectTo: RedirectFunc): RedirectMap {\n    return {\n        default: redirectTo,\n    };\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RedirectRoute.html":{"url":"interfaces/RedirectRoute.html","title":"interface - RedirectRoute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RedirectRoute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng2-permission/src/Authorization/PermissionMap.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        path\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [prop: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in projects/ng2-permission/src/Authorization/PermissionMap.ts:14\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import each from 'lodash-es/each';\nimport isFunction from 'lodash-es/isFunction';\nimport isNil from 'lodash-es/isNil';\nimport isString from 'lodash-es/isString';\nimport { forkJoin, from, Observable, of, throwError } from 'rxjs';\nimport { isPromise } from 'rxjs/internal/util/isPromise';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { Dictionary } from '../models';\nimport { PermissionStore } from '../stores/PermissionStore';\nimport { RoleStore } from '../stores/RoleStore';\n\nexport interface RedirectRoute {\n    path: string\n\n    [prop: string]: any\n}\n\nexport type RedirectFunc = (rejectedPermissionName: string) => RedirectRoute\n\nexport type Redirection = RedirectRoute | RedirectFunc | string | {\n    [prop: string]: RedirectRoute | RedirectFunc | string;\n}\n\nexport interface RedirectMap {\n    default: RedirectFunc\n\n    [prop: string]: RedirectFunc\n}\n\nexport interface RawPermissionMap {\n    // aka allOf\n    only?: string[] | string\n    // aka not\n    except?: string[] | string\n    anyOf?: string[]\n    redirectTo?: any\n}\n\nexport interface ValidateResult {\n    valid: boolean;\n    permissionName: string | null;\n}\n\nexport class PermissionMap {\n    only: string[];\n    anyOf: string[];\n    except: string[];\n    redirectTo: RedirectMap;\n\n    constructor(\n        permissionMap: RawPermissionMap = {},\n        private permissionStore: PermissionStore,\n        private roleStore: RoleStore,\n    ) {\n        this.only = normalizeSetOperationProperty(permissionMap.only);\n        this.anyOf = normalizeSetOperationProperty(permissionMap.anyOf);\n        this.except = normalizeSetOperationProperty(permissionMap.except);\n        this.redirectTo = normalizeRedirectToProperty(permissionMap.redirectTo);\n    }\n\n    resolvePrivilegesValidity(privileges: string[]): Observable[] {\n        return privileges.map(privilegeName => {\n            if (this.roleStore.hasRoleDefinition(privilegeName)) {\n                const role = this.roleStore.getRoleDefinition(privilegeName);\n                return wrapIntoObservable(role.validate(this.permissionStore))\n                    .pipe(map(result => ({ valid: result, permissionName: privilegeName })));\n            }\n\n            if (this.permissionStore.hasPermissionDefinition(privilegeName)) {\n                const permission = this.permissionStore.getPermissionDefinition(privilegeName);\n                return wrapIntoObservable(permission.validate())\n                    .pipe(map(result => ({ valid: result, permissionName: privilegeName })));\n            }\n\n            return wrapIntoObservable(false)\n                .pipe(map(result => ({ valid: result, permissionName: privilegeName })));\n        });\n    }\n\n    resolveAll(): Observable {\n        return this.resolveExceptPrivilegeMap()\n            .pipe(switchMap(result => {\n                // resolve only privilege when except privilege not granted indeed\n                if (result.valid) {\n                    return this.resolveOnlyPrivilegeMap();\n                }\n\n                return of(result);\n            }), switchMap(result => {\n                // resolve anyOf privileges when only privileges are granted\n                if (result.valid) {\n                    return this.resolveAnyOfPrivilegeMap();\n                }\n\n                return of(result);\n            }));\n    }\n\n    resolveRedirect(rejectedPermissionName: string): Observable {\n        if (!this.redirectTo) {\n            return throwError(new Error('Empty redirect config.'));\n        }\n\n        const redirectFunc = this.redirectTo[rejectedPermissionName] || this.redirectTo.default;\n\n        return wrapIntoObservable(redirectFunc(rejectedPermissionName))\n            .pipe(map(function (result) {\n                if (isString(result)) {\n                    return {\n                        path: result,\n                    };\n                }\n\n                if (typeof result === 'object') {\n                    return result;\n                }\n\n                throw new Error('Invalid redirect config.');\n            }));\n    }\n\n    resolveExceptPrivilegeMap(): Observable {\n        if (!this.except.length) {\n            return of({ valid: true, permissionName: null });\n        }\n\n        const observableArr = this.resolvePrivilegesValidity(this.except);\n\n        return forkJoin(observableArr)\n            .pipe(map(function (result) {\n                // if user is not granted with any permission specified\n                if (result.every(x => !x.valid)) {\n                    return { valid: true, permissionName: null };\n                }\n\n                // find those permission\n                return { ...result.find(x => x.valid), valid: false };\n            }));\n    }\n\n    resolveOnlyPrivilegeMap(): Observable {\n        if (!this.only.length) {\n            return of({ valid: true, permissionName: null });\n        }\n\n        const observableArr = this.resolvePrivilegesValidity(this.only);\n\n        return forkJoin(observableArr)\n            .pipe(map(function (result) {\n                if (result.every(x => x.valid)) {\n                    return { valid: true, permissionName: null };\n                }\n                return { ...result.find(x => !x.valid), valid: false };\n            }));\n    }\n\n    resolveAnyOfPrivilegeMap(): Observable {\n        if (!this.anyOf.length) {\n            return of({ valid: true, permissionName: null });\n        }\n\n        const observableArr = this.resolvePrivilegesValidity(this.anyOf);\n\n        return forkJoin(observableArr)\n            .pipe(map(function (result) {\n                if (result.some(x => x.valid)) {\n                    return { valid: true, permissionName: null };\n                }\n                return { valid: false, permissionName: null };\n            }));\n    }\n}\n\nfunction isObservable(obj: any | Observable): obj is Observable {\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * wrap various source into observable\n */\nexport function wrapIntoObservable(value: T | Promise | Observable): Observable {\n    if (isObservable(value)) {\n        return value;\n    }\n    if (isPromise(value)) {\n        return from(value);\n    }\n    return of(value);\n}\n\nfunction isObjectSingleRedirectionRule(redirectTo: RedirectRoute) {\n    return !isNil(redirectTo.path);\n}\n\nfunction normalizeSetOperationProperty(property: string | string[]) {\n    if (typeof property === 'string') {\n        return [property];\n    }\n\n    if (Array.isArray(property)) {\n        return property;\n    }\n\n    return [];\n}\n\nfunction normalizeRedirectToProperty(redirectTo: Redirection) {\n    if (isNil(redirectTo)) {\n        return null;\n    }\n\n    if (typeof redirectTo === 'string') {\n        return normalizeStringRedirectionRule(redirectTo);\n    }\n\n    if (typeof redirectTo === 'object') {\n        if (isObjectSingleRedirectionRule(redirectTo)) {\n            return normalizeObjectSingleRedirectionRule(redirectTo);\n        }\n\n        return normalizeObjectMultipleRedirectionRule(redirectTo);\n    }\n\n    if (isFunction(redirectTo)) {\n        return normalizeFunctionRedirectionRule(redirectTo);\n    }\n\n    throw new TypeError('Property \"redirectTo\" must be String, Function, Array or Object');\n}\n\nfunction normalizeStringRedirectionRule(redirectTo: string): RedirectMap {\n    return {\n        default: () => ({\n            path: redirectTo,\n        }),\n    };\n}\n\nfunction normalizeObjectSingleRedirectionRule(redirectTo: RedirectRoute): RedirectMap {\n    return {\n        default: () => redirectTo,\n    };\n}\n\nfunction normalizeObjectMultipleRedirectionRule(redirectTo: Dictionary) {\n    const redirectionMap: RedirectMap = {};\n\n    each(redirectTo, (redirection: Redirection, permission: string) => {\n        if (typeof redirection === 'function') {\n            redirectionMap[permission] = redirection;\n        }\n\n        if (typeof redirection === 'object') {\n            redirectionMap[permission] = () => redirection;\n        }\n\n        if (typeof redirection === 'string') {\n            redirectionMap[permission] = () => ({\n                path: redirection,\n            });\n        }\n    });\n\n    return redirectionMap;\n}\n\nfunction normalizeFunctionRedirectionRule(redirectTo: RedirectFunc): RedirectMap {\n    return {\n        default: redirectTo,\n    };\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng2-permission/src/models/Role.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, validateFn: Validator | string[])\n                    \n                \n                        \n                            \n                                Defined in projects/ng2-permission/src/models/Role.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        validateFn\n                                                  \n                                                        \n                                                                    Validator | string[]\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate(permissionStore: PermissionStore)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/models/Role.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionStore\n                                                        \n                                                                    PermissionStore\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { forkJoin, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { wrapIntoObservable } from '../Authorization/PermissionMap';\nimport { PermissionStore } from '../stores/PermissionStore';\n\nimport { Validator } from './Permission';\n\nexport class Role {\n    constructor(\n        private name: string,\n        private validateFn: Validator | string[],\n    ) {\n    }\n\n    validate(permissionStore: PermissionStore): Observable | Promise | boolean {\n        if (typeof this.validateFn === 'function') {\n            return this.validateFn(this.name);\n        }\n        if (Array.isArray(this.validateFn)) {\n            const maps = this.validateFn.map((perm) => {\n                if (permissionStore.hasPermissionDefinition(perm)) {\n                    return wrapIntoObservable(permissionStore.getPermissionDefinition(perm).validate());\n                }\n                return wrapIntoObservable(false);\n            });\n\n            return forkJoin(...maps)\n                .pipe(map(result => result.every(x => x)));\n        }\n\n        throw TypeError('Invalid \"validateFn\", must be string array or function');\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleStore.html":{"url":"classes/RoleStore.html","title":"class - RoleStore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng2-permission/src/stores/RoleStore.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                eventer$\n                            \n                            \n                                    Private\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearStore\n                            \n                            \n                                defineRole\n                            \n                            \n                                defineRoles\n                            \n                            \n                                getChanges\n                            \n                            \n                                getRoleDefinition\n                            \n                            \n                                getStore\n                            \n                            \n                                hasRoleDefinition\n                            \n                            \n                                removeRoleDefinition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            eventer$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eventer$:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng2-permission/src/stores/RoleStore.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            store\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        store:     Dictionary\n\n                    \n                \n                    \n                        \n                            Type :     Dictionary\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng2-permission/src/stores/RoleStore.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearStore\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearStore()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/stores/RoleStore.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineRole(roleName: string, validateFn: Validator | string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/stores/RoleStore.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        validateFn\n                                                        \n                                                                    Validator | string[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineRoles\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineRoles(roleNames: string[], validateFn: Validator)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/stores/RoleStore.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleNames\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        validateFn\n                                                        \n                                                                    Validator\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/stores/RoleStore.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRoleDefinition\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRoleDefinition(roleName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/stores/RoleStore.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStore\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStore()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/stores/RoleStore.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasRoleDefinition\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasRoleDefinition(roleName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/stores/RoleStore.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeRoleDefinition\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveRoleDefinition(roleName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng2-permission/src/stores/RoleStore.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Optional, SkipSelf } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { Dictionary, Role, Validator } from '../models';\n\nexport class RoleStore {\n    private store: Dictionary = {};\n    private eventer$ = new Subject();\n\n    defineRole(roleName: string, validateFn: Validator | string[]) {\n        this.store[roleName] = new Role(roleName, validateFn);\n        this.eventer$.next();\n    }\n\n    defineRoles(roleNames: string[], validateFn: Validator) {\n        roleNames.forEach(name => this.defineRole(name, validateFn));\n    }\n\n    removeRoleDefinition(roleName: string) {\n        this.store[roleName] = undefined;\n        this.eventer$.next();\n    }\n\n    hasRoleDefinition(roleName: string) {\n        return !!this.store[roleName];\n    }\n\n    getRoleDefinition(roleName: string) {\n        return this.store[roleName];\n    }\n\n    getStore() {\n        return this.store;\n    }\n\n    clearStore() {\n        this.store = {};\n        this.eventer$.next();\n    }\n\n    getChanges(): Observable {\n        return this.eventer$.asObservable();\n    }\n}\n\nexport function ROLESTORE_PROVIDER_FACTORY(parent: RoleStore) {\n    return parent || new RoleStore();\n}\n\nexport const ROLESTORE_PROVIDER = {\n    // If there is already an Locale available, use that. Otherwise, provide a new one.\n    provide: RoleStore,\n    deps: [[new Optional(), new SkipSelf(), RoleStore]],\n    useFactory: ROLESTORE_PROVIDER_FACTORY,\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidateResult.html":{"url":"interfaces/ValidateResult.html","title":"interface - ValidateResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ValidateResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng2-permission/src/Authorization/PermissionMap.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        permissionName\n                                \n                                \n                                        valid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        permissionName\n                                    \n                                \n                                \n                                    \n                                        permissionName:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valid\n                                    \n                                \n                                \n                                    \n                                        valid:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import each from 'lodash-es/each';\nimport isFunction from 'lodash-es/isFunction';\nimport isNil from 'lodash-es/isNil';\nimport isString from 'lodash-es/isString';\nimport { forkJoin, from, Observable, of, throwError } from 'rxjs';\nimport { isPromise } from 'rxjs/internal/util/isPromise';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { Dictionary } from '../models';\nimport { PermissionStore } from '../stores/PermissionStore';\nimport { RoleStore } from '../stores/RoleStore';\n\nexport interface RedirectRoute {\n    path: string\n\n    [prop: string]: any\n}\n\nexport type RedirectFunc = (rejectedPermissionName: string) => RedirectRoute\n\nexport type Redirection = RedirectRoute | RedirectFunc | string | {\n    [prop: string]: RedirectRoute | RedirectFunc | string;\n}\n\nexport interface RedirectMap {\n    default: RedirectFunc\n\n    [prop: string]: RedirectFunc\n}\n\nexport interface RawPermissionMap {\n    // aka allOf\n    only?: string[] | string\n    // aka not\n    except?: string[] | string\n    anyOf?: string[]\n    redirectTo?: any\n}\n\nexport interface ValidateResult {\n    valid: boolean;\n    permissionName: string | null;\n}\n\nexport class PermissionMap {\n    only: string[];\n    anyOf: string[];\n    except: string[];\n    redirectTo: RedirectMap;\n\n    constructor(\n        permissionMap: RawPermissionMap = {},\n        private permissionStore: PermissionStore,\n        private roleStore: RoleStore,\n    ) {\n        this.only = normalizeSetOperationProperty(permissionMap.only);\n        this.anyOf = normalizeSetOperationProperty(permissionMap.anyOf);\n        this.except = normalizeSetOperationProperty(permissionMap.except);\n        this.redirectTo = normalizeRedirectToProperty(permissionMap.redirectTo);\n    }\n\n    resolvePrivilegesValidity(privileges: string[]): Observable[] {\n        return privileges.map(privilegeName => {\n            if (this.roleStore.hasRoleDefinition(privilegeName)) {\n                const role = this.roleStore.getRoleDefinition(privilegeName);\n                return wrapIntoObservable(role.validate(this.permissionStore))\n                    .pipe(map(result => ({ valid: result, permissionName: privilegeName })));\n            }\n\n            if (this.permissionStore.hasPermissionDefinition(privilegeName)) {\n                const permission = this.permissionStore.getPermissionDefinition(privilegeName);\n                return wrapIntoObservable(permission.validate())\n                    .pipe(map(result => ({ valid: result, permissionName: privilegeName })));\n            }\n\n            return wrapIntoObservable(false)\n                .pipe(map(result => ({ valid: result, permissionName: privilegeName })));\n        });\n    }\n\n    resolveAll(): Observable {\n        return this.resolveExceptPrivilegeMap()\n            .pipe(switchMap(result => {\n                // resolve only privilege when except privilege not granted indeed\n                if (result.valid) {\n                    return this.resolveOnlyPrivilegeMap();\n                }\n\n                return of(result);\n            }), switchMap(result => {\n                // resolve anyOf privileges when only privileges are granted\n                if (result.valid) {\n                    return this.resolveAnyOfPrivilegeMap();\n                }\n\n                return of(result);\n            }));\n    }\n\n    resolveRedirect(rejectedPermissionName: string): Observable {\n        if (!this.redirectTo) {\n            return throwError(new Error('Empty redirect config.'));\n        }\n\n        const redirectFunc = this.redirectTo[rejectedPermissionName] || this.redirectTo.default;\n\n        return wrapIntoObservable(redirectFunc(rejectedPermissionName))\n            .pipe(map(function (result) {\n                if (isString(result)) {\n                    return {\n                        path: result,\n                    };\n                }\n\n                if (typeof result === 'object') {\n                    return result;\n                }\n\n                throw new Error('Invalid redirect config.');\n            }));\n    }\n\n    resolveExceptPrivilegeMap(): Observable {\n        if (!this.except.length) {\n            return of({ valid: true, permissionName: null });\n        }\n\n        const observableArr = this.resolvePrivilegesValidity(this.except);\n\n        return forkJoin(observableArr)\n            .pipe(map(function (result) {\n                // if user is not granted with any permission specified\n                if (result.every(x => !x.valid)) {\n                    return { valid: true, permissionName: null };\n                }\n\n                // find those permission\n                return { ...result.find(x => x.valid), valid: false };\n            }));\n    }\n\n    resolveOnlyPrivilegeMap(): Observable {\n        if (!this.only.length) {\n            return of({ valid: true, permissionName: null });\n        }\n\n        const observableArr = this.resolvePrivilegesValidity(this.only);\n\n        return forkJoin(observableArr)\n            .pipe(map(function (result) {\n                if (result.every(x => x.valid)) {\n                    return { valid: true, permissionName: null };\n                }\n                return { ...result.find(x => !x.valid), valid: false };\n            }));\n    }\n\n    resolveAnyOfPrivilegeMap(): Observable {\n        if (!this.anyOf.length) {\n            return of({ valid: true, permissionName: null });\n        }\n\n        const observableArr = this.resolvePrivilegesValidity(this.anyOf);\n\n        return forkJoin(observableArr)\n            .pipe(map(function (result) {\n                if (result.some(x => x.valid)) {\n                    return { valid: true, permissionName: null };\n                }\n                return { valid: false, permissionName: null };\n            }));\n    }\n}\n\nfunction isObservable(obj: any | Observable): obj is Observable {\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * wrap various source into observable\n */\nexport function wrapIntoObservable(value: T | Promise | Observable): Observable {\n    if (isObservable(value)) {\n        return value;\n    }\n    if (isPromise(value)) {\n        return from(value);\n    }\n    return of(value);\n}\n\nfunction isObjectSingleRedirectionRule(redirectTo: RedirectRoute) {\n    return !isNil(redirectTo.path);\n}\n\nfunction normalizeSetOperationProperty(property: string | string[]) {\n    if (typeof property === 'string') {\n        return [property];\n    }\n\n    if (Array.isArray(property)) {\n        return property;\n    }\n\n    return [];\n}\n\nfunction normalizeRedirectToProperty(redirectTo: Redirection) {\n    if (isNil(redirectTo)) {\n        return null;\n    }\n\n    if (typeof redirectTo === 'string') {\n        return normalizeStringRedirectionRule(redirectTo);\n    }\n\n    if (typeof redirectTo === 'object') {\n        if (isObjectSingleRedirectionRule(redirectTo)) {\n            return normalizeObjectSingleRedirectionRule(redirectTo);\n        }\n\n        return normalizeObjectMultipleRedirectionRule(redirectTo);\n    }\n\n    if (isFunction(redirectTo)) {\n        return normalizeFunctionRedirectionRule(redirectTo);\n    }\n\n    throw new TypeError('Property \"redirectTo\" must be String, Function, Array or Object');\n}\n\nfunction normalizeStringRedirectionRule(redirectTo: string): RedirectMap {\n    return {\n        default: () => ({\n            path: redirectTo,\n        }),\n    };\n}\n\nfunction normalizeObjectSingleRedirectionRule(redirectTo: RedirectRoute): RedirectMap {\n    return {\n        default: () => redirectTo,\n    };\n}\n\nfunction normalizeObjectMultipleRedirectionRule(redirectTo: Dictionary) {\n    const redirectionMap: RedirectMap = {};\n\n    each(redirectTo, (redirection: Redirection, permission: string) => {\n        if (typeof redirection === 'function') {\n            redirectionMap[permission] = redirection;\n        }\n\n        if (typeof redirection === 'object') {\n            redirectionMap[permission] = () => redirection;\n        }\n\n        if (typeof redirection === 'string') {\n            redirectionMap[permission] = () => ({\n                path: redirection,\n            });\n        }\n    });\n\n    return redirectionMap;\n}\n\nfunction normalizeFunctionRedirectionRule(redirectTo: RedirectFunc): RedirectMap {\n    return {\n        default: redirectTo,\n    };\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n\n1.0.0 (2018-08-16)\nFeatures\n\nadd rule specific directives for convenience and better semantic (f24763b)\ndeprecate forRoot for better convenient usage (c95dbcf)\nsupport anyOf rule for full mapping with set operations (9e61bd9)\n\nBREAKING CHANGES\n\nThe signature of ValidateResult is changed to be an interface\n\n\n0.9.0 (2018-06-01)\nFeatures\n\nupgrade to Ng6 and Rxjs 6 and the project template (603c1a5)\n\n\n0.8.2 (2017-12-26)\n\n0.8.1 (2017-11-23)\n\n0.8.0 (2017-11-18)\nFeatures\n\ndeps: upgrade deps to support Angular 5 (d593fa8)\n\n\n0.7.1 (2017-10-26)\nBug Fixes\n\nrxjs: remove the ignored throw operator (96de94f)\n\n\n0.7.0 (2017-10-26)\nFeatures\n\nrxjs: upgrade rxjs and use its new lettable feature (99440e4)\n\nBREAKING CHANGES\n\nrxjs: previously we added the operatators to Observable's prototype, now we don't. This could raise some missing references error at the user end.\n\n\n0.6.4 (2017-08-04)\nBug Fixes\n\nmodule-syntax: use proper import syntax to support tree shaking (2c589e0)\n\n\n0.6.3 (2017-08-01)\nBug Fixes\n\npermission-pipe: check lastinput validity (eac829d)\n\n\n0.6.2 (2017-08-01)\nBug Fixes\n\nauthorization: use merge to properly emit any update (e9fde6b)\nindex: export permission pipe for proper aot (40a2a48)\npermission-pipe: keep data updated from store changes (688c53f)\n\n\n0.6.1 (2017-08-01)\n\n0.6.0 (2017-08-01)\nBug Fixes\n\ndeps: sync dependencies to product package.json (a9ff85b)\ntypes: improve types to compatible with ts 2.4 (7b6763e)\n\nFeatures\n\nguard: provide a way to notify rejected route navigation (820bbb3)\npermissionIf: improve and add tests for permissionIf (32f2f0e)\npermissionIf: support then & else block, and external condition (107f235)\n\n\n0.5.2 (2017-07-31)\nBug Fixes\n\nguard: handle string permission properly, support canActivateChild (b54c6f3)\n\n\n0.5.1 (2017-07-31)\nBug Fixes\n\nadd missing PermissionGuard to providers config (5a6a715)\n\n\n0.5.0 (2017-07-30)\nBug Fixes\n\npermission-guard: make sure redirectTo work as expected (83cebef)\n\nFeatures\n\ndep: use lodash-es instead of lodash to support tree shaking (6589f5e)\npermission-pipe: add a  pipe to use aside with external condition (e5dfb6d)\n\n\n0.4.0 (2017-06-07)\nBug Fixes\n\nrecheck the permission onnce the permission stores updated (6afe330)\n\n\n0.3.0 (2017-06-06)\nBug Fixes\n\nmodule-export: remove default exports (c5f20ae)\n\nBREAKING CHANGES\n\nmodule-export: we drop default export for aot and better types reference\n\n\n0.2.0 (2017-05-03)\nBug Fixes\n\nhandle empty privilege array (2828afb)\ntypings error for ngc (507e664)\n\nFeatures\n\nadd permission-guard service for route intercepting (8d767c1)\nadd permissionIf directive (603c7b5)\nfinish permission module (45751c7)\nsetup permission module (0817a81)\nuse generator-angular2-library template for releasing the lib (4c6cd8c)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    projects/ng2-permission/src/Authorization/Authorization.ts\n            \n            \n                injectable\n            \n            \n                Authorization\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/Authorization/Authorization.ts\n            \n            \n                function\n            \n            \n                AUTHORIZATION_PROVIDER_FACTORY\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/Authorization/Authorization.ts\n            \n            \n                variable\n            \n            \n                AUTHORIZATION_PROVIDER\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/Authorization/PermissionMap.ts\n            \n            \n                class\n            \n            \n                PermissionMap\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/Authorization/PermissionMap.ts\n            \n            \n                interface\n            \n            \n                RawPermissionMap\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/Authorization/PermissionMap.ts\n            \n            \n                interface\n            \n            \n                RedirectMap\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/Authorization/PermissionMap.ts\n            \n            \n                interface\n            \n            \n                RedirectRoute\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/Authorization/PermissionMap.ts\n            \n            \n                interface\n            \n            \n                ValidateResult\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/Authorization/PermissionMap.ts\n            \n            \n                function\n            \n            \n                isObjectSingleRedirectionRule\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/Authorization/PermissionMap.ts\n            \n            \n                function\n            \n            \n                isObservable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/Authorization/PermissionMap.ts\n            \n            \n                function\n            \n            \n                normalizeFunctionRedirectionRule\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/Authorization/PermissionMap.ts\n            \n            \n                function\n            \n            \n                normalizeObjectMultipleRedirectionRule\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/Authorization/PermissionMap.ts\n            \n            \n                function\n            \n            \n                normalizeObjectSingleRedirectionRule\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/Authorization/PermissionMap.ts\n            \n            \n                function\n            \n            \n                normalizeRedirectToProperty\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/Authorization/PermissionMap.ts\n            \n            \n                function\n            \n            \n                normalizeSetOperationProperty\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/Authorization/PermissionMap.ts\n            \n            \n                function\n            \n            \n                normalizeStringRedirectionRule\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/Authorization/PermissionMap.ts\n            \n            \n                function\n            \n            \n                wrapIntoObservable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/directives/permissionAnyOf.directive.ts\n            \n            \n                directive\n            \n            \n                PermissionAnyOfDirective\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/directives/permissionExcept.directive.ts\n            \n            \n                directive\n            \n            \n                PermissionExceptDirective\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/directives/permissionIf.directive.ts\n            \n            \n                directive\n            \n            \n                PermissionIfDirective\n            \n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/directives/permissionIf.directive.ts\n            \n            \n                class\n            \n            \n                PermissionIfContext\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/directives/permissionOnly.directive.ts\n            \n            \n                directive\n            \n            \n                PermissionOnlyDirective\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/models/Permission.ts\n            \n            \n                class\n            \n            \n                Permission\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/models/Role.ts\n            \n            \n                class\n            \n            \n                Role\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/models/index.ts\n            \n            \n                interface\n            \n            \n                Dictionary\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/pipes/permission.pipe.ts\n            \n            \n                pipe\n            \n            \n                PermissionPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/services/permission-guard.service.ts\n            \n            \n                injectable\n            \n            \n                PermissionGuard\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/stores/PermissionStore.ts\n            \n            \n                class\n            \n            \n                PermissionStore\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/stores/PermissionStore.ts\n            \n            \n                function\n            \n            \n                PERMISSIONSTORE_PROVIDER_FACTORY\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/stores/PermissionStore.ts\n            \n            \n                variable\n            \n            \n                PERMISSIONSTORE_PROVIDER\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/stores/RoleStore.ts\n            \n            \n                class\n            \n            \n                RoleStore\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/stores/RoleStore.ts\n            \n            \n                function\n            \n            \n                ROLESTORE_PROVIDER_FACTORY\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/stores/RoleStore.ts\n            \n            \n                variable\n            \n            \n                ROLESTORE_PROVIDER\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/ng2-permission/src/utils.ts\n            \n            \n                function\n            \n            \n                getRawMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AUTHORIZATION_PROVIDER_FACTORY   (projects/.../Authorization.ts)\n                        \n                        \n                            getRawMap   (projects/.../utils.ts)\n                        \n                        \n                            isObjectSingleRedirectionRule   (projects/.../PermissionMap.ts)\n                        \n                        \n                            isObservable   (projects/.../PermissionMap.ts)\n                        \n                        \n                            normalizeFunctionRedirectionRule   (projects/.../PermissionMap.ts)\n                        \n                        \n                            normalizeObjectMultipleRedirectionRule   (projects/.../PermissionMap.ts)\n                        \n                        \n                            normalizeObjectSingleRedirectionRule   (projects/.../PermissionMap.ts)\n                        \n                        \n                            normalizeRedirectToProperty   (projects/.../PermissionMap.ts)\n                        \n                        \n                            normalizeSetOperationProperty   (projects/.../PermissionMap.ts)\n                        \n                        \n                            normalizeStringRedirectionRule   (projects/.../PermissionMap.ts)\n                        \n                        \n                            PERMISSIONSTORE_PROVIDER_FACTORY   (projects/.../PermissionStore.ts)\n                        \n                        \n                            ROLESTORE_PROVIDER_FACTORY   (projects/.../RoleStore.ts)\n                        \n                        \n                            wrapIntoObservable   (projects/.../PermissionMap.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ng2-permission/src/Authorization/Authorization.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTHORIZATION_PROVIDER_FACTORY\n                            \n                            \n                        \n                    \n                \n                \n                    \nAUTHORIZATION_PROVIDER_FACTORY(parent: undefined, permissionStore: undefined, roleStore: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        permissionStore\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        roleStore\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    projects/ng2-permission/src/utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getRawMap\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRawMap(perm: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            to generate a valid RawPermissionMap\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        perm\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    projects/ng2-permission/src/Authorization/PermissionMap.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isObjectSingleRedirectionRule\n                            \n                            \n                        \n                    \n                \n                \n                    \nisObjectSingleRedirectionRule(redirectTo: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        redirectTo\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isObservable\n                            \n                            \n                        \n                    \n                \n                \n                    \nisObservable(obj: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            normalizeFunctionRedirectionRule\n                            \n                            \n                        \n                    \n                \n                \n                    \nnormalizeFunctionRedirectionRule(redirectTo: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        redirectTo\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            normalizeObjectMultipleRedirectionRule\n                            \n                            \n                        \n                    \n                \n                \n                    \nnormalizeObjectMultipleRedirectionRule(redirectTo: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        redirectTo\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            normalizeObjectSingleRedirectionRule\n                            \n                            \n                        \n                    \n                \n                \n                    \nnormalizeObjectSingleRedirectionRule(redirectTo: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        redirectTo\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            normalizeRedirectToProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \nnormalizeRedirectToProperty(redirectTo: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        redirectTo\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            normalizeSetOperationProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \nnormalizeSetOperationProperty(property: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            normalizeStringRedirectionRule\n                            \n                            \n                        \n                    \n                \n                \n                    \nnormalizeStringRedirectionRule(redirectTo: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        redirectTo\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wrapIntoObservable\n                            \n                            \n                        \n                    \n                \n                \n                    \nwrapIntoObservable(value: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            wrap various source into observable\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    projects/ng2-permission/src/stores/PermissionStore.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PERMISSIONSTORE_PROVIDER_FACTORY\n                            \n                            \n                        \n                    \n                \n                \n                    \nPERMISSIONSTORE_PROVIDER_FACTORY(parent: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    projects/ng2-permission/src/stores/RoleStore.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ROLESTORE_PROVIDER_FACTORY\n                            \n                            \n                        \n                    \n                \n                \n                    \nROLESTORE_PROVIDER_FACTORY(parent: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nng2-permission\nClaims\nThis library is for angular 2+. Its implementation is inspired by angular-permission. And its usage therefore is similar to angular-permission. However,\nits functionality is a superset compared to angular-permission\nFeatures\n\nsimple and clear model to manage permission and roles\nroute guard(only for @angular/router)\ndirectives to control element's existence\ncentral store to host ACL(access control list)\nasync permission pipes to use with ngIf\n\nInstallation\nTo install this library, run:\n$ npm install ng2-permission --saveConcepts\nInternally, we use a PermissionMap model to represent the various permission operation and composition.\nPermissionMap has following three fields to hold the ability of Set Operations necessary for permission control.\n\nonly      and  Intersection\nanyOf    or   Union\nexcept    not  Complement\n\n\nNOTE: only here is different from only in angular-permission. In angular-permission, only represents\nor/Union in fact. It isn't correct semantically but only a little sense-making orally.\n\nUsage\nImports\nOnce you have installed the library, you can import it in your Angular AppModule:\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n// Import your library\nimport { PermissionModule } from 'ng2-permission';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n\n    // Specify library as an import\n    PermissionModule()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }Define permissions and roles\n@Injectable()\nexport class DefinePermissionsAndRolesService {\n    constructor(private permissionStore: PermissionStore, private roleStore: RoleStore) { }\n\n    init() {\n        this.permissionStore.definePermission('Read', function () {\n            return true;\n        });\n        this.permissionStore.definePermission('Write', function () {\n            return true;\n        });\n        this.permissionStore.definePermission('Delete', function () {\n            return true;\n        });\n\n        this.roleStore.defineRole('Admin', ['Read', 'Write', 'Delete']);\n    }\n}Option 1: Standalone service\nCreate a service to define permissions and roles, and use it in the root component of your app.\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor(defineService: DefinePermissionsAndRolesService) {\n      defineService.init()\n  }\n}Option 2: APP_INITIALIZER\nSee HERE\nCreate a service to define permissions and roles, and use it via APP_INITIALIZER\nDirective\nOnce the library is imported, you can use its components, directives and pipes in your Angular application:\n\n\n  {{title}}\nUse directives\nwe provide four directives now for various purposes.\n\n{{ title }}\n{{ title }}\n{{ title }}\n{{ title }}\n{{ title }}\n\n\n{{ title }}\n{{ title }}\n{{ title }}\n\n\n{{ title }}\n{{ title }}\n{{ title }}\n\n\n{{ title }}\n{{ title }}\n\nsome textExternal condition\nSome, we want to use it with other condition just like combining it with ngIf, but we can't use two\nstructural directive in one tag. Fortunately, we support external condition in permissionIf.\n\n  {{title}}\nexternal condition is supported by all four directives.\nPipe\nOnce the library is imported, you can use its components, directives and pipes in your Angular application:\n\n\n  {{title}}\n\nNote: permission pipe doesn't support redirectTo config if it's used with object map. Because it doesn't make sense.\n\nRoute Guard\nSpecify PermissionGuard in canActivate or canActivateChild, then define the permission property in data object.\nThen PermissionGuard will extract permission data and perform the verification.\nYou can also specify a redirectTo field in permission object, we will perform redirection like redirect in route config object.\nimport { PermissionGuard } from 'ng2-permission';\n\n// ...\n\nRouterTestingModule.withRoutes([\n    { path: 'login', component: LoginComponent },\n    { path: '404', component: PageNotFoundComponent },\n    {\n        path: 'home',\n        canActivate: [PermissionGuard],\n        component: HomeComponent,\n        data: {\n            permission: {\n                only: 'Admin',\n                except: 'Suspect',\n            },\n        },\n    },\n    {\n        path: 'home2',\n        canActivate: [PermissionGuard],\n        component: HomeComponent,\n        data: {\n            permission: {\n                only: 'Admin',\n                except: 'Suspect',\n                redirectTo: '/404',\n            },\n        },\n    },\n]),Development\nTo generate all *.js, *.d.ts and *.metadata.json files:\n$ npm run buildTo lint all *.ts files:\n$ npm run lintLicense\nMIT © e-cloud\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        PermissionModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionModule\n\n\n\ncluster_PermissionModule_declarations\n\n\n\ncluster_PermissionModule_exports\n\n\n\ncluster_PermissionModule_providers\n\n\n\n\nPermissionAnyOfDirective\n\nPermissionAnyOfDirective\n\n\n\nPermissionModule\n\nPermissionModule\n\nPermissionModule -->\n\nPermissionAnyOfDirective->PermissionModule\n\n\n\n\n\nPermissionExceptDirective\n\nPermissionExceptDirective\n\nPermissionModule -->\n\nPermissionExceptDirective->PermissionModule\n\n\n\n\n\nPermissionIfDirective\n\nPermissionIfDirective\n\nPermissionModule -->\n\nPermissionIfDirective->PermissionModule\n\n\n\n\n\nPermissionOnlyDirective\n\nPermissionOnlyDirective\n\nPermissionModule -->\n\nPermissionOnlyDirective->PermissionModule\n\n\n\n\n\nPermissionPipe\n\nPermissionPipe\n\nPermissionModule -->\n\nPermissionPipe->PermissionModule\n\n\n\n\n\nPermissionAnyOfDirective \n\nPermissionAnyOfDirective \n\nPermissionAnyOfDirective  -->\n\nPermissionModule->PermissionAnyOfDirective \n\n\n\n\n\nPermissionExceptDirective \n\nPermissionExceptDirective \n\nPermissionExceptDirective  -->\n\nPermissionModule->PermissionExceptDirective \n\n\n\n\n\nPermissionIfDirective \n\nPermissionIfDirective \n\nPermissionIfDirective  -->\n\nPermissionModule->PermissionIfDirective \n\n\n\n\n\nPermissionOnlyDirective \n\nPermissionOnlyDirective \n\nPermissionOnlyDirective  -->\n\nPermissionModule->PermissionOnlyDirective \n\n\n\n\n\nPermissionPipe \n\nPermissionPipe \n\nPermissionPipe  -->\n\nPermissionModule->PermissionPipe \n\n\n\n\n\nPermissionGuard\n\nPermissionGuard\n\nPermissionModule -->\n\nPermissionGuard->PermissionModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        4 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RedirectFunc   (projects/.../PermissionMap.ts)\n                        \n                        \n                            Redirection   (projects/.../PermissionMap.ts)\n                        \n                        \n                            Validator   (projects/.../Permission.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ng2-permission/src/Authorization/PermissionMap.ts\n    \n        \n            \n                \n                    \n                        \n                        RedirectFunc\n                    \n                \n                \n                    \n                        RedirectFunc:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        Redirection\n                    \n                \n                \n                    \n                        Redirection:     RedirectRoute | RedirectFunc | string | literal type\n\n                    \n                \n            \n        \n\n    projects/ng2-permission/src/models/Permission.ts\n    \n        \n            \n                \n                    \n                        \n                        Validator\n                    \n                \n                \n                    \n                        Validator:     function\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AUTHORIZATION_PROVIDER   (projects/.../Authorization.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            PERMISSIONSTORE_PROVIDER   (projects/.../PermissionStore.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            ROLESTORE_PROVIDER   (projects/.../RoleStore.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ng2-permission/src/Authorization/Authorization.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTHORIZATION_PROVIDER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AUTHORIZATION_PROVIDER:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    // If there is already an Locale available, use that. Otherwise, provide a new one.\n    provide: Authorization,\n    deps: [[new Optional(), new SkipSelf(), Authorization], PermissionStore, RoleStore],\n    useFactory: AUTHORIZATION_PROVIDER_FACTORY,\n}\n                        \n                    \n\n\n            \n        \n\n    projects/ng2-permission/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/ng2-permission/src/stores/PermissionStore.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PERMISSIONSTORE_PROVIDER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PERMISSIONSTORE_PROVIDER:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    // If there is already an Locale available, use that. Otherwise, provide a new one.\n    provide: PermissionStore,\n    deps: [[new Optional(), new SkipSelf(), PermissionStore]],\n    useFactory: PERMISSIONSTORE_PROVIDER_FACTORY,\n}\n                        \n                    \n\n\n            \n        \n\n    projects/ng2-permission/src/stores/RoleStore.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ROLESTORE_PROVIDER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ROLESTORE_PROVIDER:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    // If there is already an Locale available, use that. Otherwise, provide a new one.\n    provide: RoleStore,\n    deps: [[new Optional(), new SkipSelf(), RoleStore]],\n    useFactory: ROLESTORE_PROVIDER_FACTORY,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
